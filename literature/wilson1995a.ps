%!
%%BoundingBox: (atend)
%%Pages: (atend)
%%DocumentFonts: (atend)
%%EndComments
%
% FrameMaker PostScript Prolog 2.0, for use with FrameMaker 2.0
% Copyright (c) 1986,87,89 by Frame Technology, Inc.  All rights reserved.
%
% Known Problems:
%	Due to bugs in Transcript, the 'PS-Adobe-' is omitted from line 1
/FMversion (2.0) def 
/FrameDict 170 dict def 
systemdict /errordict known not { /errordict 10 dict def
		errordict /rangecheck { stop } put } if
% The readline in 23.0 doesn't recognize cr's as nl's on AppleTalk
FrameDict /tmprangecheck errordict /rangecheck get put 
errordict /rangecheck {FrameDict /bug true put} put 
FrameDict /bug false put 
mark 
% Some PS machines read past the CR, so keep the following 3 lines together!
currentfile 5 string readline
00
0000000000
cleartomark 
errordict /rangecheck FrameDict /tmprangecheck get put 
FrameDict /bug get { 
	/readline {
		/gstring exch def
		/gfile exch def
		/gindex 0 def
		{
			gfile read pop 
			dup 10 eq {exit} if 
			dup 13 eq {exit} if 
			gstring exch gindex exch put 
			/gindex gindex 1 add def 
		} loop
		pop 
		gstring 0 gindex getinterval true 
		} def
	} if
/FMVERSION {
	FMversion ne {
		/Times-Roman findfont 18 scalefont setfont
		100 100 moveto
		(FrameMaker version does not match postscript_prolog!)
		dup =
		show showpage
		} if
	} def 
/FMLOCAL {
	FrameDict begin
	0 def 
	end 
	} def 
	/gstring FMLOCAL
	/gfile FMLOCAL
	/gindex FMLOCAL
	/orgxfer FMLOCAL
	/orgproc FMLOCAL
	/organgle FMLOCAL
	/orgfreq FMLOCAL
	FrameDict /graymode true put
	/yscale FMLOCAL
	/xscale FMLOCAL
	/PrintInColor systemdict /colorimage known def
% Uncomment this line to force b&w on color printer
%   /PrintInColor false def
PrintInColor 
	
	{
	/HUE 0 def
	/SAT 0 def
	/BRIGHT 0 def
	% array of arrays Hue and Sat values for the separations [HUE BRIGHT]
	/Colors   
	[[0    0  ]    % black
	 [0    0  ]    % white
	 [0.00 1.0]    % red
	 [0.37 1.0]    % green
	 [0.60 1.0]    % blue
	 [0.50 1.0]    % cyan
	 [0.83 1.0]    % magenta
	 [0.16 1.0]    % comment
	 ] def
      
	/BEGINBITMAPCOLOR { 
		BITMAPCOLOR } def
	/BEGINBITMAPCOLORc { 
		BITMAPCOLORc } def
	/K { 
		Colors exch get dup
		0 get /HUE exch store 
		1 get /BRIGHT exch store
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray }
			{HUE SAT BRIGHT sethsbcolor } 
		  ifelse
		} def
	/mysetgray { 
		/SAT exch 1.0 exch sub store 
		  HUE 0 eq BRIGHT 0 eq and
			{1.0 SAT sub setgray }
			{HUE SAT BRIGHT sethsbcolor } 
		  ifelse
		} bind def
	}
	
	{
	/BEGINBITMAPCOLOR { 
		BITMAPGRAY } def
	/BEGINBITMAPCOLORc { 
		BITMAPGRAYc } def
	/mysetgray { setgray } bind def
	/K { 
		pop
		} def
	}
ifelse
/max	{2 copy lt {exch} if pop} bind def
/min	{2 copy gt {exch} if pop} bind def
/mtx matrix defaultmatrix def
/setmanualfeed {
%%BeginFeature *ManualFeed True
	 statusdict /manualfeed true put
%%EndFeature
	} def
/FMDOCUMENT { 
	array /FMfonts exch def
	/#copies exch def
	0 ne dup {setmanualfeed} if
	FrameDict begin
	/manualfeed exch def
	/paperheight exch def
	/paperwidth exch def
	setpapername
	manualfeed {true} {papersize} ifelse 
	{manualpapersize} {false} ifelse 
	{desperatepapersize} if
	/yscale exch def
	/xscale exch def
	currenttransfer cvlit /orgxfer exch def
	currentscreen cvlit /orgproc exch def
	/organgle exch def /orgfreq exch def
	end 
	} def 
	/pagesave FMLOCAL
	/orgmatrix FMLOCAL
	/landscape FMLOCAL
/FMBEGINPAGE {  
	FrameDict begin 
	/pagesave save def
	3.86 setmiterlimit
	/landscape exch 0 ne store
	landscape { 
		90 rotate 0 exch neg translate pop 
		}
		{ pop pop }
		ifelse
	xscale yscale scale
	/orgmatrix matrix def
	gsave 
	} def 
/FMENDPAGE {
	grestore 
	pagesave restore
	end 
	showpage
	} def 
	/fontname FMLOCAL
	/fontscale FMLOCAL
	/fontnum FMLOCAL
	/fontdict FMLOCAL
/FMDEFINEFONT {
	FrameDict begin
	/fontname exch def
	/fontscale exch def
	/fontnum exch def
	/fontdict fontname findfont fontscale scalefont def
	fontdict /Encoding get StandardEncoding eq
	{
		fontdict DiacriticEncode 
		/fontdict exch def
	} {
		fontdict NonDiacriticEncode
		/fontdict exch def
	} ifelse
	FMfonts fontnum
		fontnum fontdict definefont
	put
	end 
	} def 
/FMNORMALIZEGRAPHICS { 
	newpath
	0.0 0.0 moveto
	1 setlinewidth
	0 setlinecap
	0 mysetgray
	} bind def
/FMBEGINEPSF { 
	end 
	/FMEPSF save def
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	[/fy /fx /fh /fw /ury /urx /lly /llx] {exch def} forall 
	fx fy translate 
	rotate
	fw urx llx sub div fh ury lly sub div scale 
	llx neg lly neg translate 
	} bind def
/FMENDEPSF {
	FMEPSF restore
	FrameDict begin 
	} bind def
FrameDict begin 
/pagedimen { 
	paperheight sub abs 16 lt exch 
	paperwidth sub abs 16 lt and
	{/papername exch def} {pop} ifelse
	} def
/inch {72 mul} def
/setpapername { 
	/papersizedict 14 dict def 
	papersizedict begin
	/papername /unknown def 
		/Letter 8.5 inch 11.0 inch pagedimen
		/LetterSmall 7.68 inch 10.16 inch pagedimen
		/Tabloid 11.0 inch 17.0 inch pagedimen
		/Ledger 17.0 inch 11.0 inch pagedimen
		/Legal 8.5 inch 14.0 inch pagedimen
		/Statement 5.5 inch 8.5 inch pagedimen
		/Executive 7.5 inch 10.0 inch pagedimen
		/A3 11.69 inch 16.5 inch pagedimen
		/A4 8.26 inch 11.69 inch pagedimen
		/A4Small 7.47 inch 10.85 inch pagedimen
		/B4 10.125 inch 14.33 inch pagedimen
		/B5 7.16 inch 10.125 inch pagedimen
	end
	} def
/papersize {
	papersizedict begin
		/Letter {lettertray} def
		/LetterSmall {lettertray lettersmall} def
		/Tabloid {11x17tray} def
		/Ledger {ledgertray} def
		/Legal {legaltray} def
		/Statement {statementtray} def
		/Executive {executivetray} def
		/A3 {a3tray} def
		/A4 {a4tray} def
		/A4Small {a4tray a4small} def
		/B4 {b4tray} def
		/B5 {b5tray} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	statusdict begin stopped end 
	} def
/manualpapersize {
	papersizedict begin
		/Letter {letter} def
		/LetterSmall {lettersmall} def
		/Tabloid {11x17} def
		/Ledger {ledger} def
		/Legal {legal} def
		/Statement {statement} def
		/Executive {executive} def
		/A3 {a3} def
		/A4 {a4} def
		/A4Small {a4small} def
		/B4 {b4} def
		/B5 {b5} def
		/unknown {unknown} def
	papersizedict dup papername known {papername} {/unknown} ifelse get
	end
	stopped 
	} def
/desperatepapersize {
	statusdict /setpageparams known
		{
		paperwidth paperheight 0 1 
		statusdict begin
		{setpageparams} stopped pop 
		end
		} if
	} def
/savematrix {
	orgmatrix currentmatrix pop
	} bind def
/restorematrix {
	orgmatrix setmatrix
	} bind def
/dmatrix matrix def
/dpi    72 0 dmatrix defaultmatrix dtransform
    dup mul exch   dup mul add   sqrt def
/freq dpi 18.75 div 8 div round dup 0 eq { pop 1 } if 8 mul dpi exch div def
/sangle 1 0 dmatrix defaultmatrix dtransform exch atan def
/DiacriticEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quotesingle /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /grave /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quoteleft /quoteright /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def
	/basefontdict FMLOCAL
	/newfontdict FMLOCAL
/DiacriticEncode {
	/basefontdict exch def
	/newfontdict basefontdict maxlength dict def
	basefontdict
	{exch dup /FID ne
		{dup /Encoding eq
			{exch pop DiacriticEncoding}
			{exch}
			ifelse
			newfontdict 3 1 roll put
			}
		{pop pop}
		ifelse
		} forall
	newfontdict
	} bind def
/NonDiacriticEncode {
	/basefontdict exch def
	/newfontdict basefontdict maxlength dict def
	basefontdict
	{exch dup /FID ne
		{exch newfontdict 3 1 roll put}
		{pop pop}
		ifelse
		} forall
	newfontdict
	} bind def
	/bwidth FMLOCAL
	/bpside FMLOCAL
	/bstring FMLOCAL
	/onbits FMLOCAL
	/offbits FMLOCAL
	/xindex FMLOCAL
	/yindex FMLOCAL
	/x FMLOCAL
	/y FMLOCAL
/setpattern {
	 /bwidth  exch def
	 /bpside  exch def
	 /bstring exch def
	 /onbits 0 def  /offbits 0 def
	 freq sangle landscape {90 add} if 
		{/y exch def
		 /x exch def
		 /xindex x 1 add 2 div bpside mul cvi def
		 /yindex y 1 add 2 div bpside mul cvi def
		 bstring yindex bwidth mul xindex 8 idiv add get
		 1 7 xindex 8 mod sub bitshift and 0 ne
		 {/onbits  onbits  1 add def 1}
		 {/offbits offbits 1 add def 0}
		 ifelse
		}
		setscreen
	 {} settransfer
	 offbits offbits onbits add div mysetgray
	/graymode false store
	} bind def
/grayness {
	mysetgray
	graymode not {
		/graymode true store
		orgxfer cvx settransfer
		orgfreq organgle orgproc cvx setscreen
		} if
	} bind def
/normalize {
	transform round exch round exch itransform
	} bind def
/dnormalize {
	dtransform round exch round exch idtransform
	} bind def
/lnormalize { 
	0 dtransform exch cvi 2 idiv 2 mul 1 add exch idtransform pop
	} bind def
/H { 
	lnormalize setlinewidth
	} bind def
/Z { 
	setlinecap
	} bind def
/X { 
	fillprocs exch get exec
	} bind def
/V { 
	gsave eofill grestore
	} bind def
/N { 
	stroke
	} bind def
/M {newpath moveto} bind def
/E {lineto} bind def
/D {curveto} bind def
/O {closepath} bind def
	/n FMLOCAL
/L { 
 	/n exch def
	newpath
	normalize
	moveto 
	2 1 n {pop normalize lineto} for
	} bind def
/Y { 
	L 
	closepath
	} bind def
	/x1 FMLOCAL
	/x2 FMLOCAL
	/y1 FMLOCAL
	/y2 FMLOCAL
	/rad FMLOCAL
/R { 
	/y2 exch def
	/x2 exch def
	/y1 exch def
	/x1 exch def
	x1 y1
	x2 y1
	x2 y2
	x1 y2
	4 Y 
	} bind def
/RR { 
	/rad exch def
	normalize
	/y2 exch def
	/x2 exch def
	normalize
	/y1 exch def
	/x1 exch def
	newpath
	x1 y1 rad add moveto
	x1 y2 x2 y2 rad arcto
	x2 y2 x2 y1 rad arcto
	x2 y1 x1 y1 rad arcto
	x1 y1 x1 y2 rad arcto
	closepath
	16 {pop} repeat
	} bind def
/C { 
	grestore
	gsave
	R 
	clip
	} bind def
/U { 
	grestore
	gsave
	} bind def
/F { 
	FMfonts exch get
	setfont
	} bind def
/T { 
	moveto show
	} bind def
/RF { 
	rotate
	0 ne { -1 1 scale } if
	} bind def
/TF { 
	gsave
	moveto 
	RF
	show
	grestore
	} bind def
/P { 
	moveto
	0 32 3 2 roll widthshow
	} bind def
/PF { 
	gsave
	moveto 
	RF
	0 32 3 2 roll widthshow
	grestore
	} bind def
/S { 
	moveto
	0 exch ashow
	} bind def
/SF { 
	gsave
	moveto
	RF
	0 exch ashow
	grestore
	} bind def
/B { 
	moveto
	0 32 4 2 roll 0 exch awidthshow
	} bind def
/BF { 
	gsave
	moveto
	RF
	0 32 4 2 roll 0 exch awidthshow
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/dx FMLOCAL
	/dy FMLOCAL
	/dl FMLOCAL
	/t FMLOCAL
	/t2 FMLOCAL
	/Cos FMLOCAL
	/Sin FMLOCAL
	/r FMLOCAL
/W { 
	dnormalize
	/dy exch def
	/dx exch def
	normalize
	/y  exch def
	/x  exch def
	/dl dx dx mul dy dy mul add sqrt def
	dl 0.0 gt {
		/t currentlinewidth def
		savematrix
		/Cos dx dl div def
		/Sin dy dl div def
		/r [Cos Sin Sin neg Cos 0.0 0.0] def
		/t2 t 2.5 mul 3.5 max def
		newpath
		x y translate
		r concat
		0.0 0.0 moveto
		dl t 2.7 mul sub 0.0 rlineto
		stroke
		restorematrix
		x dx add y dy add translate
		r concat
		t 0.67 mul setlinewidth
		t 1.61 mul neg  0.0 translate
		0.0 0.0 moveto
		t2 1.7 mul neg  t2 2.0 div     moveto
		0.0 0.0 lineto
		t2 1.7 mul neg  t2 2.0 div neg lineto
		stroke
		t setlinewidth
		restorematrix
		} if
	} bind def
/G { 
	gsave
	newpath
	normalize translate 0.0 0.0 moveto 
	dnormalize scale 
	0.0 0.0 1.0 5 3 roll arc 
	closepath fill
	grestore
	} bind def
/A { 
	gsave
	savematrix
	newpath
	2 index 2 div add exch 3 index 2 div sub exch 
	normalize 2 index 2 div sub exch 3 index 2 div add exch 
	translate 
	scale 
	0.0 0.0 1.0 5 3 roll arc 
	restorematrix
	stroke
	grestore
	} bind def
	/x FMLOCAL
	/y FMLOCAL
	/w FMLOCAL
	/h FMLOCAL
	/xx FMLOCAL
	/yy FMLOCAL
	/ww FMLOCAL
	/hh FMLOCAL
	/FMsaveobject FMLOCAL
	/FMoptop FMLOCAL
	/FMdicttop FMLOCAL
/BEGINPRINTCODE { 
	/FMdicttop countdictstack 1 add def 
	/FMoptop count 4 sub def 
	/FMsaveobject save def
	userdict begin 
	/showpage {} def 
	FMNORMALIZEGRAPHICS 
	3 index neg 3 index neg translate
	} bind def
/ENDPRINTCODE {
	count -1 FMoptop {pop pop} for 
	countdictstack -1 FMdicttop {pop end} for 
	FMsaveobject restore 
	} bind def
/gn { 
	0 
	{	46 mul 
		cf read pop 
		32 sub 
		dup 46 lt {exit} if 
		46 sub add 
		} loop
	add 
	} bind def
	/str FMLOCAL
/cfs { 
	/str sl string def 
	0 1 sl 1 sub {str exch val put} for 
	str def 
	} bind def
/ic [ 
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0223
	0
	{0 hx} {1 hx} {2 hx} {3 hx} {4 hx} {5 hx} {6 hx} {7 hx} {8 hx} {9 hx}
	{10 hx} {11 hx} {12 hx} {13 hx} {14 hx} {15 hx} {16 hx} {17 hx} {18 hx}
	{19 hx} {gn hx} {0} {1} {2} {3} {4} {5} {6} {7} {8} {9} {10} {11} {12}
	{13} {14} {15} {16} {17} {18} {19} {gn} {0 wh} {1 wh} {2 wh} {3 wh}
	{4 wh} {5 wh} {6 wh} {7 wh} {8 wh} {9 wh} {10 wh} {11 wh} {12 wh}
	{13 wh} {14 wh} {gn wh} {0 bl} {1 bl} {2 bl} {3 bl} {4 bl} {5 bl} {6 bl}
	{7 bl} {8 bl} {9 bl} {10 bl} {11 bl} {12 bl} {13 bl} {14 bl} {gn bl}
	{0 fl} {1 fl} {2 fl} {3 fl} {4 fl} {5 fl} {6 fl} {7 fl} {8 fl} {9 fl}
	{10 fl} {11 fl} {12 fl} {13 fl} {14 fl} {gn fl}
	] def
	/sl FMLOCAL
	/val FMLOCAL
	/ws FMLOCAL
	/im FMLOCAL
	/bs FMLOCAL
	/cs FMLOCAL
	/len FMLOCAL
	/pos FMLOCAL
/ms { 
	/sl exch def 
	/val 255 def 
	/ws cfs 
	/im cfs 
	/val 0 def 
	/bs cfs 
	/cs cfs 
	} bind def
400 ms 
/ip { 
	is 
	0 
	cf cs readline pop 
	{	ic exch get exec 
		add 
		} forall 
	pop 
	
	} bind def
/wh { 
	/len exch def 
	/pos exch def 
	ws 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/bl { 
	/len exch def 
	/pos exch def 
	bs 0 len getinterval im pos len getinterval copy pop
	pos len 
	} bind def
/s1 1 string def
/fl { 
	/len exch def 
	/pos exch def 
	/val cf s1 readhexstring pop 0 get def
	pos 1 pos len add 1 sub {im exch val put} for
	pos len 
	} bind def
/hx { 
	3 copy getinterval 
	cf exch readhexstring pop pop 
	} bind def
	/h FMLOCAL
	/w FMLOCAL
	/d FMLOCAL
	/lb FMLOCAL
	/bitmapsave FMLOCAL
	/is FMLOCAL
	/cf FMLOCAL
/wbytes {  
	dup 
	8 eq { pop } { 1 eq { 7 add 8 idiv } { 3 add 4 idiv } ifelse } ifelse
	} bind def
/BEGINBITMAPBWc { 
	1 {} COMMONBITMAPc
	} bind def
/BEGINBITMAPGRAYc { 
	8 {} COMMONBITMAPc
	} bind def
/BEGINBITMAP2BITc { 
	2 {} COMMONBITMAPc
	} bind def
/COMMONBITMAPc { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	r                    
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} image 
	bitmapsave restore 
	grestore
	} bind def
/BEGINBITMAPBW { 
	1 {} COMMONBITMAP
	} bind def
/BEGINBITMAPGRAY { 
	8 {} COMMONBITMAP
	} bind def
/BEGINBITMAP2BIT { 
	2 {} COMMONBITMAP
	} bind def
/COMMONBITMAP { 
	/r exch def
	/d exch def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	r                    
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ cf is readhexstring pop } image
	bitmapsave restore 
	grestore
	} bind def
/Fmcc {
    /proc2 exch cvlit def
    /proc1 exch cvlit def
    /newproc proc1 length proc2 length add array def
    newproc 0 proc1 putinterval
    newproc proc1 length proc2 putinterval
    newproc cvx
} bind def
/colorsetup {
	currentcolortransfer
	/gryt exch def
	/blut exch def
	/grnt exch def
	/redt exch def
	/ngrayt 256 array def
	/nredt 256 array def
	/nbluet 256 array def
	/ngreent 256 array def
	0 1 255 {
		/indx exch def
		/cynu 1 red indx get 255 div sub def
		/magu 1 green indx get 255 div sub def
		/yelu 1 blue indx get 255 div sub def
		/k cynu magu min yelu min def
		/u k currentundercolorremoval exec def
		nredt indx 1 0 cynu u sub max sub redt exec put
		ngreent indx 1 0 magu u sub max sub grnt exec put
		nbluet indx 1 0 yelu u sub max sub blut exec put
		ngrayt indx 1 k currentblackgeneration exec sub gryt exec put
	} for
	{255 mul cvi nredt exch get}
	{255 mul cvi ngreent exch get}
	{255 mul cvi nbluet exch get}
	{255 mul cvi ngrayt exch get}
	setcolortransfer
	{pop 0} setundercolorremoval
	{} setblackgeneration
	} bind def
/fakecolorsetup {
	/tran 256 string def
	0 1 255 { /ind exch def 
		tran ind
		red ind get 77 mul
		green ind get 151 mul
		blue ind get 28 mul
		add add 256 idiv put } for
	currenttransfer
	{ 255 mul cvi tran exch get 255.0 div }
	exch Fmcc settransfer
} bind def
/BITMAPCOLOR { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/bitmapsave save def 
	colorsetup
	/is w d wbytes string def
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ cf is readhexstring pop } {is} {is} true 3 colorimage 
	bitmapsave restore 
	grestore
	} bind def
/BITMAPCOLORc { 
	/d 8 def
	gsave
	translate rotate scale /h exch def /w exch def
	/lb w d wbytes def 
	sl lb lt {lb ms} if 
	/bitmapsave save def 
	colorsetup
	/is im 0 lb getinterval def 
	ws 0 lb getinterval is copy pop 
	/cf currentfile def 
	w h d [w 0 0 h neg 0 h] 
	{ip} {is} {is} true 3 colorimage
	bitmapsave restore 
	grestore
	} bind def
/BITMAPGRAY { 
	8 {fakecolorsetup} COMMONBITMAP
	} bind def
/BITMAPGRAYc { 
	8 {fakecolorsetup} COMMONBITMAPc
	} bind def
/ENDBITMAP {
	} bind def
end 
%%EndProlog
%%BeginSetup
(2.0) FMVERSION
1 1 612 792 0 1 26 FMDOCUMENT
/fillprocs 32 array def
fillprocs 0 { 0.000000 grayness } put
fillprocs 1 { 0.100000 grayness } put
fillprocs 2 { 0.300000 grayness } put
fillprocs 3 { 0.500000 grayness } put
fillprocs 4 { 0.700000 grayness } put
fillprocs 5 { 0.900000 grayness } put
fillprocs 6 { 0.970000 grayness } put
fillprocs 7 { 1.000000 grayness } put
fillprocs 8 {<0f1e3c78f0e1c387> 8 1 setpattern } put
fillprocs 9 {<0f87c3e1f0783c1e> 8 1 setpattern } put
fillprocs 10 {<cccccccccccccccc> 8 1 setpattern } put
fillprocs 11 {<ffff0000ffff0000> 8 1 setpattern } put
fillprocs 12 {<8142241818244281> 8 1 setpattern } put
fillprocs 13 {<03060c183060c081> 8 1 setpattern } put
fillprocs 14 {<8040201008040201> 8 1 setpattern } put
fillprocs 15 {} put
fillprocs 16 { 1.000000 grayness } put
fillprocs 17 { 0.900000 grayness } put
fillprocs 18 { 0.700000 grayness } put
fillprocs 19 { 0.500000 grayness } put
fillprocs 20 { 0.300000 grayness } put
fillprocs 21 { 0.100000 grayness } put
fillprocs 22 { 0.030000 grayness } put
fillprocs 23 { 0.000000 grayness } put
fillprocs 24 {<f0e1c3870f1e3c78> 8 1 setpattern } put
fillprocs 25 {<f0783c1e0f87c3e1> 8 1 setpattern } put
fillprocs 26 {<3333333333333333> 8 1 setpattern } put
fillprocs 27 {<0000ffff0000ffff> 8 1 setpattern } put
fillprocs 28 {<7ebddbe7e7dbbd7e> 8 1 setpattern } put
fillprocs 29 {<fcf9f3e7cf9f3f7e> 8 1 setpattern } put
fillprocs 30 {<7fbfdfeff7fbfdfe> 8 1 setpattern } put
fillprocs 31 {} put
%%EndSetup
0 10 /Times-Bold FMDEFINEFONT
1 12 /Times-Italic FMDEFINEFONT
2 12 /Times-Roman FMDEFINEFONT
%%Page: "44" 44
%%BeginPaperSize: Letter
%%EndPaperSize
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(44) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
1 F
0 X
-0.4 (mals to Animats: Pr) 90 712 P
-0.4 (oceedings of the First International Confer) 184.64 712 P
-0.4 (ence on Simulation of Adaptive ) 389.09 712 P
(Behavior) 90 688 T
2 F
( \050pp. 15-21\051.  Cambridge, MA: MIT Press.) 133.97 688 T
(W) 72 658 T
(ilson, S. W) 82.84 658 T
(. \0501994\051.  ZCS: a zeroth order classi\336er system. ) 135.05 658 T
1 F
(Evolutionary Computation, 2,) 364.89 658 T
2 F
( 1-18.) 508.15 658 T
(W) 72 628 T
(ilson, S. W) 82.84 628 T
(., and Goldber) 135.05 628 T
(g, D. E. \0501989\051.  A critical review of classi\336er systems.  ) 203.45 628 T
1 F
(Pr) 473.59 628 T
(oceedings ) 485.14 628 T
-0.04 (of the Thir) 90 604 P
-0.04 (d International Confer) 140.13 604 P
-0.04 (ence on Genetic Algorithms ) 248.23 604 P
2 F
-0.04 (\050pp. 244-255\051.  San Mateo, CA: ) 384.65 604 P
(Mor) 90 580 T
(gan Kaufmann. ) 110.44 580 T
FMENDPAGE
%%EndPage: "44" 43
%%Page: "43" 43
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(43) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
1 F
0 X
(son\325) 90 712 T
(s ZCS) 109.11 712 T
2 F
(.  Unpublished Masters dissertation/thesis, University of Sussex. ) 137.43 712 T
-0.18 (Smith, R. E. \0501991\051.  ) 72 682 P
1 F
-0.18 (Default Hierar) 174.07 682 P
-0.18 (chy Formation and Memory Expoitation in Learning Classi\336-) 245.07 682 P
(er Systems) 90 658 T
2 F
(.  Ph. D. Dissertation, The University of Alabama, T) 140.96 658 T
(uscaloosa, Alabama.) 391.71 658 T
(Sutton, R. S. \0501991\051.  Reinforcement learning architectures for animats. In J.-A. Meyer & S. W) 72 628 T
(. ) 526.91 628 T
(W) 90 604 T
(ilson \050eds.\051, ) 100.84 604 T
1 F
(Fr) 160.14 604 T
(om Animals to Animats: Pr) 171.69 604 T
(oceedings of the First International Confer) 301.84 604 T
(ence ) 508.28 604 T
(on Simulation of Adaptive Behavior) 90 580 T
2 F
( \050pp. 288-296\051.  Cambridge, MA: MIT Press.) 261.9 580 T
-0.34 (T) 72 550 P
-0.34 (wardowski, K. \0501993\051.  Credit assignment for pole balancing with learning classi\336er systems.  In ) 78.49 550 P
(S. Forrest, \050ed.\051, ) 90 526 T
1 F
(Pr) 170.94 526 T
(oceedings of the Fifth International Confer) 182.49 526 T
(ence on Genetic Algorithms ) 388.94 526 T
2 F
(\050pp. 238-245\051.  San Mateo, CA: Mor) 90 502 T
(gan Kaufmann.) 266 502 T
(V) 72 472 T
(alenzuela-Rend\227n, M. \0501991\051. The fuzzy classi\336er system: a classi\336er system for continuously ) 79.33 472 T
-0.32 (varying variables. ) 90 448 P
1 F
-0.32 (Pr) 178.3 448 P
-0.32 (oceedings of the Fourth International Confer) 189.85 448 P
-0.32 (ence on Genetic Algorithms) 404.7 448 P
2 F
-0.32 ( ) 537.32 448 P
(\050pp. 346-353\051.  San Mateo, CA: Mor) 90 424 T
(gan Kaufmann. ) 266 424 T
(V) 72 394 T
(enturini, G. \0501994\051.  ) 79.33 394 T
1 F
(Appr) 178.26 394 T
(entissage Adaptatif et Appr) 201.8 394 T
(entissage Supervis\216 par Algorithme G\216n\216-) 332.29 394 T
(tique) 90 370 T
2 F
(.  Th\217se de Docteur en Science \050Informatique\051, Universit\216 de Paris-Sud.) 113.99 370 T
-0.09 (W) 72 340 P
-0.09 (atkins, C. \0501989\051.  ) 82.36 340 P
1 F
-0.09 (Learning fr) 171.62 340 P
-0.09 (om Delayed Rewar) 226.06 340 P
-0.09 (ds) 317.36 340 P
2 F
-0.09 (.  Ph.D. Dissertation, Cambridge University) 328.02 340 P
-0.09 (.) 537 340 P
(W) 72 310 T
(atkins, C. and Dayan, P) 82.36 310 T
(. \0501992\051. T) 193.96 310 T
(echnical note: Q-Learning.  ) 244.42 310 T
1 F
(Machine Learning, 8) 379.31 310 T
2 F
(, 279-292.) 480.24 310 T
-0.2 (W) 72 280 P
-0.2 (ilson, S. W) 82.84 280 P
-0.2 (. \0501985\051.  Knowledge growth in an arti\336cial animal. P) 134.65 280 P
1 F
-0.2 (r) 390.01 280 P
-0.2 (oceedings of the First Interna-) 394.23 280 P
-0.15 (tional Confer) 90 256 P
-0.15 (ence on Genetic Algorithms and Their Applications) 153.71 256 P
2 F
-0.15 ( \050pp. 16-23\051.  Hillsdale, New ) 400 256 P
(Jersey: Lawrence Erlbaum Associates.) 90 232 T
-0.24 (W) 72 202 P
-0.24 (ilson, S.W) 82.84 202 P
-0.24 (. \0501987a\051. Classi\336er systems and the animat problem.  ) 131.81 202 P
1 F
-0.24 (Machine Learning, 2) 390.82 202 P
2 F
-0.24 (, 199-228.) 491.27 202 P
(W) 72 172 T
(ilson, S. W) 82.84 172 T
(. \0501987b\051. Hierarchical credit allocation in a classi\336er system.  ) 135.05 172 T
1 F
(Pr) 436.49 172 T
(oceedings of the ) 448.04 172 T
-0.12 (T) 90 148 P
-0.12 (enth International Joint Confer) 95.57 148 P
-0.12 (ence on Arti\336cial Intelligence) 245.02 148 P
2 F
-0.12 ( \050pp. 217-220\051.  Los Altos, CA: ) 386.9 148 P
(Mor) 90 124 T
(gan Kaufmann.) 110.44 124 T
(W) 72 94 T
(ilson, S. W) 82.84 94 T
(. \0501991\051.  The animat path to AI. In J.-A. Meyer & S. W) 135.05 94 T
(. W) 402.75 94 T
(ilson \050eds.\051, ) 419.59 94 T
1 F
(Fr) 478.89 94 T
(om Ani-) 490.44 94 T
FMENDPAGE
%%EndPage: "43" 42
%%Page: "42" 42
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(42) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
2 F
0 X
(tems.  ) 90 712 T
1 F
(Physica D, 41) 121.65 712 T
2 F
(, 188-201.) 189.27 712 T
(Holland, J. H., Holyoak, K. J., Nisbett, R. E., and Thagard, P) 72 682 T
(. R. \0501986\051.  ) 363.15 682 T
1 F
(Induction: Pr) 424.11 682 T
(ocesses of ) 488.63 682 T
(Infer) 90 658 T
(ence, Learning, and Discovery) 112.87 658 T
2 F
(.  Cambridge, MA: MIT Press.) 259.65 658 T
-0.22 (Horn, J., Goldber) 72 628 P
-0.22 (g, D. E., and Deb, K. \0501994\051.  Implicit niching in a learning classi\336er system: na-) 154.94 628 P
(ture\325) 90 604 T
(s way) 111.98 604 T
(.  ) 138.85 604 T
1 F
(Evolutionary Computation, 2) 147.84 604 T
2 F
(\0501\051, 37-66.) 288.11 604 T
(Koza, J. R. \0501992\051.  ) 72 574 T
1 F
(Genetic Pr) 168.93 574 T
(ogramming) 220.78 574 T
2 F
(. Cambridge, MA: The MIT Press/Bradford Books.) 276.08 574 T
(Lin, L.-J. \0501993\051.  ) 72 544 T
1 F
(Reinfor) 160.61 544 T
(cement Learning for Robots Using Neural Networks) 196.14 544 T
2 F
(.  Ph.D. Thesis, ) 446.67 544 T
(School of Computer Science, Carnegie Mellon University) 90 520 T
(.) 367.37 520 T
(Mahadevan, S. and Connell, J. \0501992\051.  Automatic programming of behavior) 72 490 T
(-based robots using ) 439.18 490 T
(reinforcement learning.  ) 90 466 T
1 F
(Arti\336cial Intelligence, 55) 208.57 466 T
2 F
(, 31) 328.83 466 T
(1-365.) 346.37 466 T
-0.28 (Parodi, A. and Bonelli, P) 72 436 P
-0.28 (. \0501993\051.  A new approach to fuzzy classi\336er systems. In S. Forrest, \050ed.\051, ) 189.83 436 P
1 F
-0.04 (Pr) 90 412 P
-0.04 (oceedings of the Fifth International Confer) 101.55 412 P
-0.04 (ence on Genetic Algorithms) 307.8 412 P
2 F
-0.04 ( \050pp. 223-230\051.  San ) 441.26 412 P
(Mateo, CA: Mor) 90 388 T
(gan Kaufmann. ) 170.07 388 T
-0.01 (Poggio, T) 72 358 P
-0.01 (. & Edelman, S. \0501990\051.  A network that learns to recognize three-dimensional objects.  ) 118.42 358 P
1 F
(Natur) 90 334 T
(e) 117.55 334 T
2 F
(, 343, 263-266. ) 122.87 334 T
-0.33 (Riolo, R. L. \0501991\051.  Lookahead planning and latent learning in a classi\336er system. In J.-A. Meyer ) 72 304 P
-0.04 (& S. W) 90 280 P
-0.04 (. W) 125.13 280 P
-0.04 (ilson \050eds.\051, ) 141.92 280 P
1 F
-0.04 (Fr) 201.13 280 P
-0.04 (om Animals to Animats: Pr) 212.68 280 P
-0.04 (oceedings of the First International Con-) 342.66 280 P
(fer) 90 256 T
(ence on Simulation of Adaptive Behavior) 102.88 256 T
2 F
( \050pp. 316-326\051.  Cambridge, MA: MIT Press.) 299.75 256 T
(Roberts, G. R. \0501993\051.  Dynamic planning for classi\336er systems. In S. Forrest, \050ed.\051, ) 72 226 T
1 F
(Pr) 477.4 226 T
(oceedings ) 488.95 226 T
(of the Fifth International Confer) 90 202 T
(ence on Genetic Algorithms) 245.48 202 T
2 F
( \050pp. 231-237\051.  San Mateo, CA: ) 379.05 202 T
(Mor) 90 178 T
(gan Kaufmann.) 110.44 178 T
-0.18 (Robertson, G. G. and Riolo, R. L. \0501988\051.  A tale of two classi\336er systems.  ) 72 148 P
1 F
-0.18 (Machine Learning, 3) 433.6 148 P
2 F
-0.18 (, ) 534.18 148 P
(139-159.) 90 124 T
(Ross, S. \0501994\051.  ) 72 94 T
1 F
(Accurate Reaction or Re\337ective Action?  Experiments in adding memory to W) 154.96 94 T
(il-) 528.36 94 T
FMENDPAGE
%%EndPage: "42" 41
%%Page: "41" 41
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(41) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
2 F
0 X
(Cambridge, MA: MIT Press/Bradford Books.) 90 712 T
(Drescher) 72 682 T
(, G. L. \0501991\051.  ) 114.8 682 T
1 F
(Made-Up Minds: A Constructivist Appr) 189.75 682 T
(oach to Arti\336cial Intelligence.) 379.86 682 T
2 F
( ) 523.77 682 T
(Cambridge, MA: MIT Press.) 90 658 T
(Frey) 72 628 T
(, P) 93.2 628 T
(. W) 104.54 628 T
(. and Slate, D. J. \0501991\051.  Letter recognition using Holland-style adaptive classi\336ers.  ) 120.75 628 T
1 F
(Machine Learning) 90 604 T
2 F
(, ) 178.94 604 T
1 F
(6) 184.94 604 T
2 F
(, 161-182.) 190.94 604 T
-0.14 (Goldber) 72 574 P
-0.14 (g, D. E. \0501988\051.  ) 111.09 574 P
1 F
-0.14 (Pr) 191.33 574 P
-0.14 (obability matching, the magnitude of r) 202.88 574 P
-0.14 (einfor) 386.3 574 P
-0.14 (cement, and classi\336er sys-) 414.51 574 P
(tem bidding) 90 550 T
2 F
( \050T) 146.97 550 T
(echnical Report TCGA-88002\051. T) 160.45 550 T
(uscaloosa, AL: University of Alabama, De-) 322.58 550 T
(partment of Engineering Mechanics.  \050Also ) 90 526 T
1 F
(Machine Learning, 5) 300.84 526 T
2 F
(, 407-425.\051) 401.78 526 T
(Grefenstette, J. J. \0501988\051.  Credit assignment in rule discovery systems based on genetic algo-) 72 496 T
(rithms. ) 90 472 T
1 F
(Machine Learning, 3) 126.65 472 T
2 F
(, 225-245.) 227.59 472 T
(Grefenstette, J. J. \0501991\051.  Lamarckian learning in multi-agent environments.  ) 72 442 T
1 F
(Pr) 446.4 442 T
(oceedings of the ) 457.95 442 T
-0.19 (Fourth International Confer) 90 418 P
-0.19 (ence on Genetic Algorithms) 225.11 418 P
2 F
-0.19 ( \050pp. 303-310\051.  San Mateo, CA: Mor-) 358.11 418 P
(gan Kaufmann. ) 90 394 T
(Grefenstette, J. J., Ramsey) 72 364 T
(, C. L., & Schultz, A.C. \0501990\051.  Learning sequential decision rules us-) 198.79 364 T
(ing simulation models and competition.  ) 90 340 T
1 F
(Machine Learning, 5) 286.24 340 T
2 F
(, 355-381.) 387.17 340 T
-0.19 (Holland, J. H. \0501976\051.  ) 72 310 P
-0.19 (Adaptation) 181.97 310 P
-0.19 (.  In R. Rosen & F) 235.27 310 P
-0.19 (. M. Snell \050Eds.\051, ) 321.12 310 P
1 F
-0.19 (Pr) 405.65 310 P
-0.19 (ogr) 417.2 310 P
-0.19 (ess in theor) 433.41 310 P
-0.19 (etical biol-) 487.89 310 P
(ogy) 90 286 T
(, 4) 106.66 286 T
2 F
(.  New Y) 118.65 286 T
(ork: Plenum.) 160.75 286 T
-0.42 (Holland, J. H. & Reitman, J. S. \0501978\051.  Cognitive systems based on adaptive algorithms.  In D. A. ) 72 256 P
-0.25 (W) 90 232 P
-0.25 (aterman & F) 100.36 232 P
-0.25 (. Hayes-Roth \050Eds.\051, ) 159.53 232 P
1 F
-0.25 (Pattern-dir) 260.05 232 P
-0.25 (ected infer) 313.58 232 P
-0.25 (ence systems) 363.84 232 P
2 F
-0.25 (.  New Y) 425.2 232 P
-0.25 (ork: Academic ) 466.56 232 P
(Press.) 90 208 T
(Holland, J. H. \0501986\051.  Escaping brittleness: the possibilities of general-purpose learning algo-) 72 178 T
(rithms applied to parallel rule-based systems.  In R. S. Michalski, J. G. Carbonell & T) 90 154 T
(. M. ) 501.19 154 T
(Mitchell \050Eds.\051, ) 90 130 T
1 F
(Machine learning, an arti\336cial intelligence appr) 168.62 130 T
(oach. V) 400.7 130 T
(olume II) 436.01 130 T
2 F
(.  Los Altos, ) 476.31 130 T
(California: Mor) 90 106 T
(gan Kaufmann.) 165.4 106 T
(Holland, J. H. \0501990\051.  Concerning the emer) 72 76 T
(gence of tag-mediated lookahead in classi\336er sys-) 283.3 76 T
FMENDPAGE
%%EndPage: "41" 40
3 14 /Times-Bold FMDEFINEFONT
%%Page: "40" 40
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(40) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
2 F
0 X
(quality of learning need not be high.  However) 72 712 T
(, as research moves on to tackle more complex en-) 295.69 712 T
(vironments, increased examination of other concepts of classi\336er \336tness is surely in order) 72 688 T
(.    ) 500.7 688 T
3 F
(Acknowledgements) 72 624.67 T
2 F
(I am grateful to Peter M. T) 72 598 T
(odd for his interest and suggestions during the course of this work, to ) 200.07 598 T
(John Holland for his long-term inspiration and breadth of view) 72 574 T
(, and to The Rowland Institute for ) 372.69 574 T
(Science for continued support.  The paper bene\336ted from the comments of three anonymous re-) 72 550 T
(viewers.) 72 526 T
3 F
(Refer) 72 460.67 T
(ences) 105.15 460.67 T
2 F
(Albus, J. S. \0501975\051.  A new approach to manipulator control: the cerebellar model articulation ) 72 434 T
(controller \050CMAC\051.  ) 90 410 T
1 F
(Journal of Dynamic Systems, Measur) 191.93 410 T
(ement, and Contr) 371.03 410 T
(ol, T) 454.2 410 T
(rans. ASME, ) 475.54 410 T
(Series G,  97) 90 386 T
2 F
(\0503\051. ) 151.96 386 T
(Bonarini, A. \0501994\051. Evolutionary learning of general fuzzy rules with biased evaluation func-) 72 356 T
(tions: competition and cooperation.  ) 90 332 T
1 F
(Pr) 265.89 332 T
(oceedings of the First IEEE Confer) 277.45 332 T
(ence on Evolution-) 446.56 332 T
(ary Computation) 90 308 T
2 F
( \050pp. 51-56\051.  Piscataway) 171.63 308 T
(, NJ: IEEE Press.) 290.76 308 T
(Booker) 72 278 T
(, L. B., \0501982\051.  ) 106.83 278 T
1 F
(Intelligent behavior as an adaptation to the task envir) 184.11 278 T
(onment) 442.19 278 T
2 F
(, Ph.D. Dis-) 477.5 278 T
(sertation \050Computer and Communication Sciences\051.  The University of Michigan.) 90 254 T
(Booker) 72 224 T
(, L. B. \0501989\051.  T) 106.83 224 T
(riggered rule discovery in classi\336er systems. In J. D. Schaf) 188.02 224 T
(fer \050ed.\051, ) 469.61 224 T
1 F
(Pr) 514.22 224 T
(o-) 525.77 224 T
(ceedings of the Thir) 90 200 T
(d International Confer) 185.17 200 T
(ence on Genetic Algorithms) 293.34 200 T
2 F
( \050pp. 265-274\051.  San ) 426.91 200 T
(Mateo, CA: Mor) 90 176 T
(gan Kaufmann.) 170.07 176 T
-0.43 (Dorigo, M. and Bersini, H. \0501994\051. A comparison of Q-learning and classi\336er systems. In D. Clif) 72 146 P
-0.43 (f, ) 530.43 146 P
(P) 90 122 T
(. Husbands, J.-A. Meyer) 95.34 122 T
(, and S. W) 211.77 122 T
(. W) 260.97 122 T
(ilson \050eds.\051, ) 277.8 122 T
1 F
(Fr) 337.1 122 T
(om Animals to Animats 3: Pr) 348.65 122 T
(oceedings ) 487.8 122 T
(of the Thir) 90 98 T
(d International Confer) 140.2 98 T
(ence on Simulation of Adaptive Behavior) 248.37 98 T
2 F
( \050pp. 248-255\051.  ) 445.24 98 T
FMENDPAGE
%%EndPage: "40" 39
4 12 /Helvetica FMDEFINEFONT
5 12 /Times-Bold FMDEFINEFONT
%%Page: "39" 39
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(39) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
2 F
0 X
(complicated systems, though basing \336tness on accuracy of prediction instead of the prediction it-) 72 712 T
(self seems intuitively sounder in systems that are increasingly more cognitive than reactive.) 72 688 T
-0.23 (Finally) 90 658 P
-0.23 (, a fourth and related direction for future research concerns classi\336er systems that learn) 123.21 658 P
1 F
-0.23 ( ) 537.23 658 P
-0.02 (pr) 72 634 P
-0.02 (edictive models) 82.22 634 P
2 F
-0.02 ( of the environment.  XCS models its environment only in the sense of learning ) 156.48 634 P
-0.24 (payof) 72 610 P
-0.24 (fs, that is, the X ) 99.09 610 P
4 F
-0.27 (x) 176.83 610 P
2 F
-0.24 ( A => P map.  It does not learn what input sensation will follow a given ac-) 182.83 610 P
-0.11 (tion. That is, it does not learn an X ) 72 586 P
4 F
-0.12 (x) 240.58 586 P
2 F
-0.11 ( A => Y map, where Y is the following sensation.  However) 246.57 586 P
-0.11 (, ) 534.11 586 P
-0.04 (Riolo \0501991\051 and Holland \0501990\051 \050see also Sutton, 1991 and Drescher) 72 562 P
-0.04 (, 1991\051 developed classi\336er ) 405.25 562 P
-0.15 (systems in which each classi\336er has a condition, an action, and a prediction of the resulting sensa-) 72 538 P
(tion \050which, echoing the use of \322taxon\323 for condition, we could call an \322expecton\323\051.  The expec-) 72 514 T
-0.38 (tons permitted forward chaining of classi\336er conditions and consequences, so these systems could ) 72 490 P
(look ahead and plan.  However) 72 466 T
(, \336tness in both systems was still implicitly based on payof) 220.73 466 T
(f \050the ) 502.71 466 T
(experiments reported did not involve the discovery component\051.  Clearly) 72 442 T
(, the concept of \336tness ) 420.31 442 T
(based on accuracy of prediction could be extended to classi\336ers with expectons.  Besides rating ) 72 418 T
-0.18 (how well a classi\336er predicted payof) 72 394 P
-0.18 (f, the \336tness might also, or separately) 247.1 394 P
-0.18 (, represent the accuracy ) 424.49 394 P
(of the expecton in predicting the next sensation. The latter \336tness could cause the GA to evolve ) 72 370 T
(classi\336ers that model \322what follows what\323 in the world.  ) 72 346 T
5 F
(5.3  Conclusion) 72 312 T
2 F
(Much work remains to understand how to make XCS\325) 90 286 T
(s mapping and generalization fully ef) 349.17 286 T
(\336-) 527.82 286 T
(cient, and to extend the system\325) 72 262 T
(s principles to more challenging problems and environments. But ) 223.24 262 T
-0.02 (the results in this paper demonstrate that accuracy-based \336tness and a niche GA can evolve\321per-) 72 238 P
-0.25 (haps for the \336rst time seen in classi\336er systems\321 complete payof) 72 214 P
-0.25 (f maps containing accurate max-) 384.45 214 P
(imally general classi\336ers.  The results point to the conclusion that accuracy-based \336tness and a ) 72 190 T
(niche GA form a promising foundation for future classi\336er system research, and underline classi-) 72 166 T
(\336er systems\325 relevance to the broader \336eld of reinforcement learning.  Further) 72 142 T
(, it is perhaps not ) 445.22 142 T
(premature to suggest that the use of strength as the dominant component of \336tness in classi\336er ) 72 118 T
(systems is fundamentally inadequate.  Strength is suf) 72 94 T
(\336cient for simple problems, or where the ) 326.3 94 T
FMENDPAGE
%%EndPage: "39" 38
%%Page: "38" 38
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(38) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 63 540 720 R
V
2 F
0 X
(approach to achieving generalization\321the lack of which may well of) 72 712 T
(fset whatever is gained ) 403.86 712 T
(through pragmatics\321and the solutions conver) 72 688 T
(ged upon are often suboptimal.  Nevertheless, in ) 293.64 688 T
(many problems lar) 72 664 T
(ge regions of the X ) 161.72 664 T
4 F
(x) 256.65 664 T
2 F
( A => P map will be relatively unremunerative, and tech-) 262.65 664 T
(niques for reducing exploration there need to be developed.) 72 640 T
-0.17 (A second major direction for future research is development of systems that learn ) 90 610 P
1 F
-0.17 (function ap-) 481.87 610 P
(pr) 72 586 T
(oximations) 82.22 586 T
2 F
(.  In contrast to traditional classi\336er systems, XCS emphasizes the formation of a ) 134.86 586 T
-0.38 (well-de\336ned prediction prior to taking an action or generating a message.  In ef) 72 562 P
-0.38 (fect, improving the ) 446.54 562 P
-0.16 (prediction means learning a better and better approximation to a function ) 72 538 P
1 F
-0.16 (f\050x,a\051 ) 423.7 538 P
2 F
-0.16 (of the system\325) 452.18 538 P
-0.16 (s in-) 519.17 538 P
(puts and actions.  Furthermore, there is no essential reason why the inputs ) 72 514 T
1 F
(x) 429.43 514 T
2 F
( need to be binary) 434.75 514 T
(.  ) 519.91 514 T
-0.1 (They could be continuous, with the classi\336er condition being a conjunct of \322receptive \336elds\323 hav-) 72 490 P
(ing adaptive centers and widths corresponding to each input variable, or) 72 466 T
(, indeed, the condition ) 416.93 466 T
(could be an s-expression.) 72 442 T
-0.4 (From this perspective, XCS could be used to learn approximations to functions ) 90 412 P
1 F
-0.4 (f\050x\051) 467.33 412 P
2 F
-0.4 (, where ) 483.97 412 P
1 F
-0.4 (x) 521.47 412 P
2 F
-0.4 ( is ) 526.8 412 P
(a vector of input variables, by providing ) 72 388 T
1 F
(f\050x\051) 267.86 388 T
2 F
( as the value to be \322predicted\323 and de\336ning just one ) 284.51 388 T
(\050dummy\051 action.  There are already) 72 364 T
(, of course, well-developed approaches to such problems \050Al-) 241.07 364 T
-0 (bus 1975, Poggio & Edelman 1990\051, and classi\336er systems have been combined with fuzzy logic ) 72 340 P
(to a similar end \050V) 72 316 T
(alenzuela-Rend\227n, 1991; Parodi & Bonelli, 1993; Bonarini, 1994\051.  Generally ) 160.61 316 T
-0.2 (missing, however) 72 292 P
-0.2 (, have been mechanisms that automatically adapt the approximation\325) 155.93 292 P
-0.2 (s structures ) 483.11 292 P
(to the function\325) 72 268 T
(s curvature, so that fewer resources \050basis functions, classi\336ers\051 are employed ) 145.29 268 T
(where the function is changing slowly) 72 244 T
(.  XCS\325) 254.1 244 T
(s generalization ability may be able to contribute ) 289.75 244 T
(signi\336cantly in this respect.) 72 220 T
(A third major research direction concerns the problem of classi\336er systems with) 90 190 T
1 F
( temporary ) 474.05 190 T
-0.23 (memory) 72 166 P
2 F
-0.23 (, i.e., systems that either post messages to an internal message list \050Holland, 1986; Robert-) 109.85 166 P
(son & Riolo, 1988; Smith, 1991\051 or set register bits that can be matched on the next time-step ) 72 142 T
(\050Ross, 1994; W) 72 118 T
(ilson, 1994\051.  Broad success with temporary memory would open the way to sys-) 146.48 118 T
(tems with variable event-granularity \050e.g., getting a cof) 72 94 T
(fee, getting a degree\051 and hierarchical be-) 336.25 94 T
(havior \050W) 72 70 T
(ilson, 1987b\051.  At this point it is still not clear how best to or) 120.48 70 T
(ganize these more ) 410.12 70 T
FMENDPAGE
%%EndPage: "38" 37
6 12 /Courier FMDEFINEFONT
%%Page: "37" 37
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(37) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
2 F
0 X
(needed to achieve such control successfully in learning systems represent a lar) 72 712 T
(ge and relatively ) 447.83 712 T
(unexplored research area.  W) 72 688 T
(e are not speaking here of \336nding the \322right\323 \336xed explore/exploit ) 211.23 688 T
-0.29 (regime, but instead of dynamic control of the explore/exploit regime throughout learning.  In fact, ) 72 664 P
(experiments were done with the multiplexers using annealing of the percentage of explore trials ) 72 640 T
-0.3 (from 100% at the start down to 0%, and a switched regime in which 100% explore was conducted ) 72 616 P
(up to a certain trial after which the system changed to 100% exploit. The total number of explore ) 72 592 T
(trials required for a given performance was found to be comparable in both these and the 50-50 ) 72 568 T
(regime of Section 4.2. Thus XCS would appear suitable for a variety of explore/exploit regimes. ) 72 544 T
(What is more dif) 72 520 T
(\336cult, however) 152.73 520 T
(, is to \336nd ways of controlling exploration adaptively) 224.2 520 T
(, where ex-) 478.27 520 T
(ploration includes both exploratory actions and search via the GA.  Initial experiments indicate  ) 72 496 T
(that XCS\325) 72 472 T
(s error measures may be useful in this regard, somewhat in the spirit of Goldber) 119.65 472 T
(g\325) 502.16 472 T
(s ) 511.49 472 T
(\0501988\051 variance-sensitive-bidding.) 72 448 T
(Another approach to increased ef) 90 418 T
(\336ciency would be through changes in input representation ) 248.97 418 T
(that would more concisely capture the regularities of the environment.  This is the potential bene-) 72 394 T
(\336t of) 72 370 T
1 F
( s-classi\336ers) 94.99 370 T
2 F
( \050W) 154.62 370 T
(ilson, 1994\051, i.e., classi\336ers whose conditions are expressed in the language ) 172.46 370 T
(of Lisp s-expressions \050the system\325) 72 346 T
(s discovery component would employ a version of genetic pro-) 235.23 346 T
-0.27 (gramming \050Koza, 1992\051\051.  As a simple example, Boolean ) 72 322 P
6 F
-0.66 (OR) 347.34 322 P
2 F
-0.27 ( could be represented in a single clas-) 361.73 322 P
(si\336er condition, permitting a single classi\336er to express a generalization that required ) 72 298 T
6 F
(OR) 483.39 298 T
2 F
(.  In ) 497.78 298 T
(contrast, traditional classi\336er syntax can only represent the ) 72 274 T
6 F
(AND) 356.8 274 T
2 F
( of variables and their negations, ) 378.38 274 T
-0 (so that a generalization involving ) 72 250 P
6 F
-0.01 (OR) 234.88 250 P
2 F
-0 ( requires at least two classi\336ers.  If s-classi\336ers were extend-) 249.27 250 P
(ed to) 72 226 T
1 F
( calculate) 95.65 226 T
2 F
( their prediction \050instead of merely asserting a statistic\051 single classi\336ers might be ) 142.62 226 T
(evolved that were capable of predicting correct values in an even wider variety of situations.  ) 72 202 T
(Adherents of payof) 90 172 T
(f-based \336tness might suggest that the ef) 182.37 172 T
(\336ciency issue arises because accu-) 372.04 172 T
(racy-based \336tness, as demonstrated, results in relatively complete maps of the payof) 72 148 T
(f landscape, ) 475.16 148 T
(whereas traditional classi\336er systems \322go for the best\323 \050-paying classi\336ers\051 and ignore the rest. ) 72 124 T
-0.26 (They might say that the latter pragmatic approach is the only practical one in lar) 72 100 P
-0.26 (ge problems \050Hol-) 452.58 100 P
-0.09 (land et al, 1986\051.  Against this one can note that the traditional classi\336er system has no principled ) 72 76 P
FMENDPAGE
%%EndPage: "37" 36
7 12 /Symbol FMDEFINEFONT
%%Page: "36" 36
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(36) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
2 F
0 X
-0.12 (XCS through use of accuracy-based \336tness and a niche GA.  However) 72 712 P
-0.12 (, the case for these changes ) 407.2 712 P
(is not quite closed, because the two systems employed dif) 72 688 T
(ferent action-selection regimes.  ZCS ) 348.94 688 T
-0.23 (employed roulette-wheel action selection.  A tax on classi\336ers not selected increased the probabil-) 72 664 P
(ity of choosing the highest strength action, but also tended to cause conver) 72 640 T
(gence on suboptimal ) 429.21 640 T
(classi\336ers.  Had ZCS used some form of pure explore/pure exploit regime as in XCS, the results ) 72 616 T
(might have been better) 72 592 T
(.  This is an experimental question and should be investigated. W) 180.92 592 T
(e predict ) 492.77 592 T
-0.13 (that ZCS\325) 72 568 P
-0.13 (s inability to suppress over) 118.19 568 P
-0.13 (generals, together with the distribution of the prediction over ) 246.04 568 P
(multiple classi\336ers would still result in a performance and accuracy shortfall versus XCS.) 72 544 T
5 F
(5.2  Futur) 72 510 T
(e r) 122.76 510 T
(esear) 136.19 510 T
(ch dir) 162.61 510 T
(ections) 192.71 510 T
2 F
(An important objective in future XCS research is to increase the ef) 72 484 T
(\336ciency with which the X ) 391.88 484 T
4 F
(x) 518.79 484 T
2 F
( A ) 524.79 484 T
(=> P map is represented. One point of attack would be to reduce the number of accurate, general ) 72 460 T
(classi\336ers that nevertheless contain \322optional\323 speci\336c bits.  This can perhaps be accomplished ) 72 436 T
(through a modi\336ed \336tness function that favors formal generality \050i.e. more #s\051 when ) 72 412 T
7 F
(e) 478.72 412 T
2 F
( is below a ) 483.99 412 T
(low threshold \050initial experiments indicate that this technique is ef) 72 388 T
(fective\051.  A second approach ) 389.25 388 T
(would be development of methods of \322condensing\323 the population to remove classi\336ers unneces-) 72 364 T
(sary to the generalization cover) 72 340 T
(.  For example, the \336rst classi\336er shown in Section 4.3.3 renders ) 221.88 340 T
(redundant all other classi\336ers with action 1; eliminating them would substantially shrink the pop-) 72 316 T
(ulation.  Informally) 72 292 T
(, we have been able to reduce the population without loss of performance by ) 164.83 292 T
(running the GA with mutation and crossover turned of) 72 268 T
(f. That is, classi\336ers were selected, repro-) 332.94 268 T
(duced, and deleted without the formation of any new macroclassi\336ers.  Lar) 72 244 T
(ge \050e.g., 75%\051 reduc-) 431.18 244 T
(tions in population size were obtained before a needed classi\336er was \336nally deleted and system ) 72 220 T
-0.12 (performance decreased.  Similarly) 72 196 P
-0.12 (, in regular experiments, we have noticed a rather strong depen-) 235.4 196 P
(dence of ultimate population size on the mutation and crossover) 72 172 T
(, i.e., search, rates.  So it would ) 378.31 172 T
(appear important to investigate techniques that adaptively control the search rate.  ) 72 148 T
-0.26 (In principle, search should be vigorous when little is known or the system is in trouble; once a ) 90 118 P
(problem is solved, search is unnecessary) 72 94 T
(.  Of course, the information and decision procedures ) 265.74 94 T
FMENDPAGE
%%EndPage: "36" 35
%%Page: "35" 35
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(35) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
2 F
0 X
(strength as the payof) 72 712 T
(f estimate minus the variance.  Action selection is based probabilistically on ) 171.38 712 T
-0.05 (strength, so that the selection is biased toward classi\336ers with high payof) 72 688 P
-0.05 (f and low variance. This ) 421.01 688 P
-0.19 (technique was used as part of Grefenstette\325) 72 664 P
-0.19 (s SAMUEL system, in which the genetic algorithm op-) 276.69 664 P
(erates on classi\336er sets, not individual classi\336ers, so that the concept of the \336tness of individual ) 72 640 T
(classi\336ers does not apply) 72 616 T
(.  Later) 191.48 616 T
(, however) 225.3 616 T
(, Grefenstette \0501991\051 extended the use in SAMUEL of ) 272.11 616 T
-0.01 (the above kind of strength to af) 72 592 P
-0.01 (fect the probabilities of deletion and the application of certain mu-) 221.63 592 P
-0.05 (tation operators, so that payof) 72 568 P
-0.05 (f variance had an in\337uence on the survival and modi\336cation of indi-) 214.48 568 P
(vidual rules.  ) 72 544 T
(Separately) 90 514 T
(, mention should be made of Grefenstette\325) 139.85 514 T
(s \0501988\051 study of classi\336er system credit ) 341.37 514 T
(assignment.  He exhibits circumstances in which strength, as traditionally de\336ned and employed ) 72 490 T
(in the bucket-brigade algorithm, does not correctly predict external payof) 72 466 T
(f.  The problem arises ) 423.52 466 T
(when two dif) 72 442 T
(ferent environmental states are matched by a single classi\336er and the external pay-) 135.07 442 T
(of) 72 418 T
(fs resulting from that classi\336er) 81.78 418 T
(\325) 228.79 418 T
(s action are dif) 232.12 418 T
(ferent.  As a result, earlier classi\336ers in the corre-) 302.85 418 T
(sponding chains acquire strengths re\337ecting a mixture of the two payof) 72 394 T
(fs.  In ef) 412.88 394 T
(fect, the problem ) 452.62 394 T
-0.05 (occurs because the matching classi\336er is not suf) 72 370 P
-0.05 (\336ciently speci\336c to distinguish the two states, yet ) 301.57 370 P
(it \050presumably\051 survives because its \336tness is based on payof) 72 346 T
(f instead of accuracy) 363.92 346 T
(.  From the ) 462.71 346 T
(present perspective, this is a good example of the problem noted under \0504\051 in Section 2: over) 72 322 T
(gen-) 515.8 322 T
(eral classi\336ers can survive under payof) 72 298 T
(f-based \336tness.  W) 258.63 298 T
(ith XCS, over) 347.42 298 T
(general classi\336ers do not, ) 413.5 298 T
(in general, survive, and we would not expect to observe the situation Grefenstette presents. ) 72 274 T
(Finally) 90 244 T
(, the present work is related to W) 123.21 244 T
(ilson \0501994\051 in that XCS deliberately changes the \336t-) 281.94 244 T
(ness measure and GA method of ZCS, but retains many elements of the earlier system.  The two ) 72 220 T
(systems can be experimentally compared because ZCS learned in W) 72 196 T
(oods1, a simple version of ) 399.12 196 T
(W) 72 172 T
(oods2.  In W) 82.36 172 T
(oods1, ZCS\325) 143.36 172 T
(s performance never reached the optimum, which, as in W) 203.34 172 T
(oods2, was ) 482.49 172 T
-0.26 (1.7 steps.  Instead, ZCS did not do better than about 3.2 steps \050see Fig. 3 of W) 72 148 P
-0.26 (ilson \0501994\051\051.  In ad-) 441.46 148 P
(dition, the X ) 72 124 T
4 F
(x) 135.3 124 T
2 F
( A => P map was incomplete in that the match sets contained classi\336ers for only ) 141.3 124 T
(one or two of the possible actions \050compare Fig. 4 of W) 72 100 T
(ilson \0501994\051 with the present Fig. 7\051.  Fi-) 339.33 100 T
(nally) 72 76 T
(, no signi\336cant accurate generalizations were found.  These de\336ciencies were overcome in ) 95.21 76 T
FMENDPAGE
%%EndPage: "35" 34
%%Page: "34" 34
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(34) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
2 F
0 X
(system, a classi\336er) 72 712 T
(\325) 162.72 712 T
(s action was a letter name.  When it matched an input, the classi\336er would as-) 166.05 712 T
(sert the letter name.  The accuracy was the cumulative fraction of the assertions that were in fact ) 72 688 T
(correct.  The performance component used it as the classi\336er) 72 664 T
(\325) 364.21 664 T
(s \322bid\323, with the the system\325) 367.54 664 T
(s deci-) 503.46 664 T
-0.11 (sion being the letter asserted by the highest bidding member of the match set.  Accuracy was also ) 72 640 P
(used as the \336tness measure when the discovery component employed a \050panmictic\051 GA\321 the au-) 72 616 T
(thors also experimented with exemplar) 72 592 T
(-based and random generation of rules.  Apparently be-) 258.29 592 T
-0.41 (cause accuracy alone tended to produce rules that were too speci\336c in a population of a given size, ) 72 568 P
(the authors added a second measure, \322utility\323.  This was \322the number of correct winning bids di-) 72 544 T
(vided by the [total] number of stimulus items presented [to the system] during the lifetime of the ) 72 520 T
(rule\323, so that utility measured the frequency with which the rule successfully controlled the sys-) 72 496 T
-0 (tem.  Classi\336ers whose utilities fell below a threshold were deleted, which pushed the population ) 72 472 P
(towards accurate but also more useful \050more frequently matching and correctly bidding\051 rules.  ) 72 448 T
(Although Frey & Slate\325) 90 418 T
(s system predicted a category instead of a payof) 202.94 418 T
(f quantity) 432.54 418 T
(, it anticipat-) 478.07 418 T
-0.13 (ed XCS\325) 72 394 P
-0.13 (s emphasis on accuracy) 112.85 394 P
-0.13 (.  Frey & Slate\325) 224.58 394 P
-0.13 (s use of the \322utility\323 measure evidently resulted in ) 297.68 394 P
(greater generalization than would otherwise have occurred, though they do not show any classi\336-) 72 370 T
-0.04 (ers.  They note that their system is not directly applicable to reinforcement learning problems but ) 72 346 P
(might be so adapted.) 72 322 T
(The idea of keeping track of the variance of a classi\336er) 90 292 T
(\325) 354.21 292 T
(s payof) 357.55 292 T
(f occurs in Goldber) 392.31 292 T
(g \0501988\051.  ) 485.02 292 T
-0.05 (Goldber) 72 268 P
-0.05 (g discusses an action-selection method in which, for each matching classi\336er) 111.09 268 P
-0.05 (, a weighted ) 478.86 268 P
(sum of its strength and a Gaussian based on its payof) 72 244 T
(f variance is calculated.  Then the action of ) 326.28 244 T
(the classi\336er with the lar) 72 220 T
(gest sum is selected.  The method, termed ) 189.7 220 T
1 F
(variance-sensitive bidding) 393.57 220 T
2 F
(, ) 520.48 220 T
(causes action selection to become increasingly deterministic as classi\336ers\325 payof) 72 196 T
(f estimates be-) 458.5 196 T
(come increasingly reliable.  The variance calculation is similar to the error estimate in XCS, but ) 72 172 T
(the Goldber) 72 148 T
(g paper does not consider including a function of the variance in the \336tness calcula-) 128.74 148 T
(tion.  ) 72 124 T
(Grefenstette, Ramsey & Schultz \0501990\051 also calculate the variance but rede\336ne classi\336er ) 90 94 T
FMENDPAGE
%%EndPage: "34" 33
%%Page: "33" 33
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(33) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
2 F
0 X
-0.6 (speci\336city) 72 712 P
-0.6 (.  Ef) 120.53 712 P
-0.6 (fectiveness is thus a quantity that combines the perspectives of payof) 139.42 712 P
-0.6 (f and accuracy) 464.27 712 P
-0.6 (.  ) 532.21 712 P
(Second, the system employed a deletion method proportional to match set size, which tended to ) 72 688 T
(equalize the resources \050classi\336ers\051 devoted to each niche of the environment; as noted in Section ) 72 664 T
(3, XCS uses basically the same technique.  ) 72 640 T
(Booker presented results of tests on a 6-multiplexer problem in which the payof) 90 610 T
(f landscape ) 472.85 610 T
-0.07 (had reward 1000 for the right answer and 0 for the wrong answer) 72 586 P
-0.07 (.  Using a deterministic measure ) 382.88 586 P
(of performance, GOFER-1\325) 72 562 T
(s performance exceeded \322the 97% level after 2500 input strings\323 ) 204.23 562 T
-0.02 (\0502500 explore trials using a form of roulette-wheel selection\051.  This is similar to XCS\325) 72 538 P
-0.02 (s perfor-) 483.85 538 P
(mance on the 16-reward-level 6-multiplexer \050Figure 3\051.  Since the latter would appear to be a ) 72 514 T
(more dif) 72 490 T
(\336cult problem, it would be interesting to know GOFER-1\325) 112.75 490 T
(s performance on it.  Booker ) 391.6 490 T
-0.04 (also tested his system on the state space search problem of Grefenstette \0501988\051 with good results. ) 72 466 P
(GOFER-1 anticipates XCS in the niche GA and in the use of at least some accuracy informa-) 90 436 T
-0.15 (tion in the \336tness measure.  Booker states that the system\325) 72 412 P
-0.15 (s goal is to \322build a useful internal mod-) 347.99 412 P
(el of the environment, not merely to optimize the strength of rewarded stimulus-response pairs\323. ) 72 388 T
(This also anticipates XCS, but it is not clear from the article just what the internal model looks ) 72 364 T
(like, or whether any generalization\321accurate or inaccurate\321is occurring.  No classi\336ers are ex-) 72 340 T
(hibited. In addition, the system appears to have more mechanisms and parameters than XCS.  ) 72 316 T
(Nevertheless, Booker) 72 292 T
(\325) 175.7 292 T
(s approach is a very important line of classi\336er system research from ) 179.03 292 T
(which, obviously) 72 268 T
(, much can be learned.) 153.84 268 T
(Frey & Slate \0501991\051 presented a classi\336er system in which predictive accuracy rather than ) 90 238 T
(payof) 72 214 T
(f-based strength was the central quantity) 99.09 214 T
(. They investigated a letter) 292.5 214 T
(-recognition task in ) 419.83 214 T
(which the system was \336rst trained on a lar) 72 190 T
(ge number of exemplars, then tested on additional ex-) 273.64 190 T
(emplars.  Initial experiments were done with a strength-based system, but the authors found they ) 72 166 T
-0.06 (could get as good results, with less concern for precise parameter settings, by shifting to the accu-) 72 142 P
-0.09 (racy approach.  In more detail, a classi\336er kept a record of its \322accuracy\323, de\336ned as the \322cumula-) 72 118 P
(tive ratio of the number of [its] correct bids to the total number of [its] bids\323.  In Frey & Slate\325) 72 94 T
(s ) 524.03 94 T
FMENDPAGE
%%EndPage: "33" 32
%%Page: "32" 32
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(32) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
2 F
0 X
(Due to the generalization ability) 72 712 T
(, the number of classi\336ers required to solve the multiplexer prob-) 225.78 712 T
(lem grows much more slowly than the size of the input space.  The results in the multi-step envi-) 72 688 T
(ronment W) 72 664 T
(oods2 are less certain in this respect, though still promising.  A further aspect of XCS ) 125.33 664 T
-0.2 (is that, in some contrast with earlier classi\336er system architectures, the role of the GA is more nat-) 72 640 P
(ural and constructive.  Rather than pitting classi\336ers against each other for their payof) 72 616 T
(f-getting ) 483.48 616 T
(ability\321with the side-ef) 72 592 T
(fects discussed in Section 2\321in XCS they compete based on the accura-) 189.04 592 T
-0.17 (cy and generality of their knowledge of the environment.  This kind of competition does not inter-) 72 568 P
(fere with their ability to cooperate. ) 72 544 T
5 F
(5.1  Related W) 72 510 T
(ork) 146.62 510 T
2 F
(The \336rst paper on classi\336er systems \050Holland, 1976\051 proposed that classi\336er \336tness be based not ) 72 484 T
(only on predicted payof) 72 460 T
(f, but also on the consistency of the prediction, among other measures of ) 186.03 460 T
(worth. The idea was implemented in Holland & Reitman \0501978\051.  Later) 72 436 T
(, however) 413.62 436 T
(, Holland fo-) 460.43 436 T
(cussed on payof) 72 412 T
(f-based \336tness in connection with the bucket-brigade algorithm \050e.g., Holland, ) 149.06 412 T
(1986\051.  ) 72 388 T
-0.3 (As noted earlier) 90 358 P
-0.3 (, Booker \0501982\051 introduced the idea of conducting the genetic algorithm in the ) 165.52 358 P
-0.41 (\322niches\323 de\336ned by classi\336er match sets. His reasoning was that the classi\336ers in a match set were ) 72 334 P
(relevant to the same or similar problems, so crossovers among them \050a form of \322restricted mat-) 72 310 T
(ing\323\051 were likely to be more fruitful than a panmictic regime that crossed classi\336ers drawn from ) 72 286 T
(the general population, that is, from probably quite unrelated niches.  Booker built on the niche ) 72 262 T
-0.21 (GA idea in several subsequent papers, culminating in Booker \0501989\051, in which he presented GOF-) 72 238 P
(ER-1, a classi\336er system that, via operators triggered in various circumstances, used non-payof) 72 214 T
(f ) 527.78 214 T
(as well as payof) 72 190 T
(f information in its discovery component.  T) 148.72 190 T
(wo aspects of this sophisticated sys-) 360.42 190 T
(tem seem most important here.  First \322ef) 72 166 T
(fectiveness\323, Booker) 265.66 166 T
(\325) 366.02 166 T
(s measure of classi\336er worth or) 369.35 166 T
(, ) 519.09 166 T
-0.17 (simplifying somewhat, \336tness, was the product of three factors: ) 72 142 P
7 F
-0.17 (p) 377.9 142 P
2 F
-0.17 ( \050\322impact\323\051, essentially a predic-) 384.49 142 P
-0.02 (tion of local \050i.e., bucket-brigade-like\051 payof) 72 118 P
-0.02 (f; ) 285.52 118 P
7 F
-0.02 (s) 295.82 118 P
2 F
-0.02 ( \050\322consistency\323\051, proportional to one minus nor-) 303.05 118 P
(malized mean-squared prediction error; and ) 72 94 T
7 F
(m) 284.82 94 T
2 F
( \050\322match score\323\051, a measure of the classi\336er) 291.73 94 T
(\325) 501.99 94 T
(s ) 505.32 94 T
FMENDPAGE
%%EndPage: "32" 31
%%Page: "31" 31
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(31) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
2 F
0 X
(Holds along the top of the block.) 90 712 T
(0## 0## 0## ### 000 ### #1# ### : 0  708 ) 90 682 T
(\322If there\325) 90 658 T
(s opacity to the W) 133.62 658 T
(, food is 2 steps N\323 \0503 places\051. ) 219.79 658 T
(Holds along the right side of the block.) 90 634 T
(0## 0## #1# ### ### 0## 0## ### : 1  502 ) 90 604 T
(\322If there\325) 90 580 T
(s opacity to the E, food is 3 steps NE\323 \0503 places\051. ) 133.62 580 T
(Holds along the left side of the block. ) 90 556 T
(### ### 0## 01# 00# 0## ### ### : 6  708 ) 90 526 T
(\322If there\325) 90 502 T
(s a rock to the SE and a blank to the S, food is 2 steps W\323  \0503 places\051. ) 133.62 502 T
(Holds in 3 cells NW of the left side of the block.) 90 478 T
(Lar) 90 448 T
(ge numbers of such generalizations can be found in the population. XCS gives the impres-) 106.43 448 T
(sion of tending to ferret out every possible grouping \050permitted by the coding\051 of situations hav-) 72 424 T
-0.39 (ing equal payof) 72 400 P
-0.39 (f.  The result is a network of overlapping generalizations covering the space of X x ) 145.61 400 P
-0.3 (A.  However) 72 376 P
-0.3 (, the cover is more than suf) 132.54 376 P
-0.3 (\336cient to solve the problem; that is, many classi\336ers could ) 260.79 376 P
(be removed without af) 72 352 T
(fecting the system\325) 180.04 352 T
(s performance.  Thus while the system\325) 270.65 352 T
(s generalization ) 458.85 352 T
(drive aids ef) 72 328 T
(\336ciency by grouping situations under single classi\336ers, the system may \336nd more ) 131.07 328 T
(generalizations than are actually needed, of) 72 304 T
(fsetting the gained ef) 279.61 304 T
(\336ciency) 380.32 304 T
(.  Nevertheless, XCS\325) 417.51 304 T
(s ) 521.1 304 T
(ability to arrive at numerous accurate generalizations is an advance compared with previous clas-) 72 280 T
(si\336er systems, which had no natural mechanism for producing them.    ) 72 256 T
3 F
(5.  Discussion) 72 220.67 T
2 F
(This paper has described and reported experimental results with a classi\336er system, XCS, in ) 72 194 T
-0.18 (which \336tness is based on the accuracy of a classi\336er) 72 170 P
-0.18 (\325) 320.27 170 P
-0.18 (s prediction, not the prediction itself, and the ) 323.6 170 P
(genetic algorithm is conducted in the match sets, instead of over the population as a whole.  The ) 72 146 T
-0.44 (results indicate that XCS is capable of forming complete X ) 72 122 P
4 F
-0.49 (x) 354.09 122 P
2 F
-0.44 ( A => P maps of its payof) 360.09 122 P
-0.44 (f landscape, ) 480.6 122 P
(and that classi\336ers that accurately generalize over sets of inputs are discovered and emphasized.  ) 72 98 T
FMENDPAGE
%%EndPage: "31" 30
%%Page: "30" 30
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(30) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
2 F
0 X
(er is more accurate and frequent in that situation, it survives.) 72 712 T
(The classi\336ers just examined match in exactly one position of the basic repeat pattern of ) 90 682 T
-0.22 (W) 72 658 P
-0.22 (oods2.  They generalize over the details of the 18 dif) 82.36 658 P
-0.22 (ferent versions of that pattern.  But they do ) 332.77 658 P
(not match at dif) 72 634 T
(ferent positions within the pattern.  W) 147.4 634 T
(e now give examples of classi\336ers that do ) 328.66 634 T
(match, and therefore generalize over) 72 610 T
(, several such positions.  They were identi\336able in the popu-) 247.02 610 T
(lation as classi\336ers with both high \336tness and high numerosity) 72 586 T
(.  Shown are the classi\336er) 370.06 586 T
(, its pre-) 492.83 586 T
(diction, an interpretation of the prediction, and the number of places in the basic pattern that the ) 72 562 T
-0.4 (classi\336er matches.  The phrase \322food is ) 72 538 P
1 F
-0.4 (x) 260.36 538 P
2 F
-0.4 ( steps\323 in a given direction means: if the system moves in ) 265.69 538 P
(that direction, the shortest path to food from there will be ) 72 514 T
1 F
(x) 349.82 514 T
2 F
(-1 steps long.  \050Note that XCS ) 355.14 514 T
1 F
(only) 503.05 514 T
2 F
( ) 523.71 514 T
(makes payof) 72 490 T
(f predictions and acts on them; the interpretations are strictly from the standpoint of ) 132.74 490 T
(an observer!\051) 72 466 T
(0## 0## 0## ### ### ### ### ### : 1  503 ) 90 436 T
(\322Food is 3 steps NW\323  \05016 places\051.   ) 90 412 T
(Holds everywhere.  Note that the three 0s are optional.  I.e., changing them to # does not in-) 90 388 T
(crease the number of matching situations.) 90 364 T
(### ### 0## 0## 000 ### ### ### : 2  497 ) 90 334 T
(\322If there\325) 90 310 T
(s a blank to the S, food is 3 steps E\323  \05013 places\051.   ) 133.62 310 T
(This covers all positions except the three along the top of the block.) 90 286 T
(### 0## 0## ### 00# 0## 0## 01# : 6  501 ) 90 256 T
(\322If there\325) 90 232 T
(s a rock NW) 133.62 232 T
(, food is 3 steps W\323  \0504 places\051.  ) 192.79 232 T
(Holds for four positions below and to the right of the block.) 90 208 T
(#1# 0## ### ### 000 ### ### ### : 3  710 ) 90 178 T
(\322If there\325) 90 154 T
(s opacity to the N, food is 2 steps SE\323  \0503 places\051. ) 133.62 154 T
(Holds along the bottom of the block.) 90 130 T
(### 0#0 #0# ### #1# ### 00# 0## : 0  503 ) 90 100 T
(\322If there\325) 90 76 T
(s opacity to the S, food is 3 steps N\323 \0503 places\051. ) 133.62 76 T
FMENDPAGE
%%EndPage: "30" 29
%%Page: "29" 29
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(29) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
2 F
0 X
(quires that the \322aroma\323 bit in direction 7 be a 1, indicating food.  Each also has a hash symbol in ) 72 712 T
-0.1 (most positions corresponding to the redundant right-hand sensor code bit.  However) 72 688 P
-0.1 (, a number of ) 473.46 688 P
(other positions contain 0, and there is even a 1 in the \322opacity\323 position in direction 5 in all but ) 72 664 T
-0 (one of the classi\336ers.  What is going on?  Why are not all of these positions hashed out, since the ) 72 640 P
(aroma bit in direction 7 is necessary and suf) 72 616 T
(\336cient for predicting 1000 with zero error?  The rea-) 282.96 616 T
(son is that each of the six classi\336ers matches in every cell for which food is in direction 7 and no ) 72 592 T
-0.27 (classi\336er obtained by changing one of these bits to a # would match \050and predict accurately\051 more ) 72 568 P
(often.  As a result they cannot be displaced by a classi\336er that is formally more general \050i.e., has ) 72 544 T
(more #s\051.  ) 72 520 T
(From the point of view of minimizing population size, it would be desirable to see these un-) 90 490 T
-0.31 (necessarily speci\336c bits\321let us call them \322optional\323\321 replaced by hashes.  But W) 72 466 P
-0.31 (oods2 provides ) 464.67 466 P
(no evolutionary pressure to do so.  The six classi\336ers are, so to speak, on an evolutionary plateau ) 72 442 T
(that is maximal in terms of accuracy and reproductive opportunity) 72 418 T
(.  If food objects, i.e., objects ) 388.66 418 T
(with aroma bit set, occurred in a greater variety of contexts, there would be pressure to hash out ) 72 394 T
(the optionals.  In the multiplexer environments, every input bit occurred in the context of every ) 72 370 T
-0.42 (other input bit value, so the system indeed \322drove\323 toward generalizations that were both formally ) 72 346 P
-0.04 (and pragmatically maximal.  But W) 72 322 P
-0.04 (oods2 is sparse in the sense that the input strings that actually ) 242.71 322 P
(occur form a minute fraction of those that are possible under the coding, with the result that win-) 72 298 T
(ning generalizations will very likely contain bits that could optionally be replaced by #s.  The ef-) 72 274 T
(fect contributes to making populations in sparse environments lar) 72 250 T
(ger than they might ideally be.  ) 385.58 250 T
(The six classi\336ers in Figure 8 with action 4 illustrate how the system can discover and main-) 90 220 T
(tain more than one \322concept\323 to describe a particular situation.  Note that three of them have aro-) 72 196 T
(ma bit 1 in direction 4, as might be expected.  But two of the others recognize the \322food to the ) 72 172 T
(south\323 situation via the combination of the opacity bit set to 1 in that direction \050which is not in it-) 72 148 T
(self suf) 72 124 T
(\336cient\051 plus the opacity bit set to 0 in direction 3 \050south-east\051.  Finally) 106.76 124 T
(, the sixth classi\336er ) 441.78 124 T
-0.43 (apparently achieves its accuracy through the combination of opacity bit set to 1 in directions 4 and ) 72 100 P
-0.15 (5, plus the aroma bit set to 0 in direction 3.  This \322concept\323 is rather complicated but since no oth-) 72 76 P
FMENDPAGE
%%EndPage: "29" 28
8 11 /Times-Roman FMDEFINEFONT
9 10 /Courier FMDEFINEFONT
10 10 /Courier-Oblique FMDEFINEFONT
11 10 /Symbol FMDEFINEFONT
%%Page: "28" 28
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(28) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 396.67 R
V
2 F
0 X
(rameter regimes will not trade of) 72 388.67 T
(f performance and population stability) 229.33 388.67 T
(.) 412.42 388.67 T
(The actual classi\336ers evolved by XCS turned out to be a rich source of information.  Unfortu-) 90 358.67 T
-0.43 (nately) 72 334.67 P
-0.43 (, space limitations preclude exhibiting more than a sample of them.  The general picture was ) 100.53 334.67 P
(that by 4,000 problems the vast majority predicted, with essentially zero error) 72 310.67 T
(, either 1000, 710, ) 444.26 310.67 T
-0.05 (or 504; that is, they predicted the values of ) 72 286.67 P
1 F
-0.05 (Q\050x,a\051) 279.4 286.67 P
2 F
-0.05 ( precisely) 310.36 286.67 P
-0.05 (. In addition, they covered all ) 355.83 286.67 P
1 F
-0.05 (\050x,a\051) 499.42 286.67 P
2 F
-0.05 ( sit-) 521.72 286.67 P
-0.13 (uations.  A second and surprising observation was that besides discovering and lar) 72 262.67 P
-0.13 (gely exploiting ) 464.96 262.67 P
(the generalization that we contrived for the right-hand sensor code bit, XCS discovered in ) 72 238.67 T
(W) 72 214.67 T
(oods2 dozens of generalizations that we had not suspected were present.  In fact, the landscape ) 82.36 214.67 T
(is crisscrossed with intersecting generalizations, some applying in many situations, some in just ) 72 190.67 T
(two.) 72 166.67 T
-0.03 (W) 90 136.67 P
-0.03 (e look \336rst at some classi\336ers predicting 1000.  Figure 8 shows the \336rst 13 macroclassi\336ers ) 100.36 136.67 P
(from a listing of the population in descending prediction order) 72 112.67 T
(.  They all match in positions adja-) 370.14 112.67 T
(cent to food. Look \336rst at the six macros \050with total numerosity 10\051 that have action 7. Each re-) 72 88.67 T
72 411.33 540 720 C
72 411.33 540 720 R
7 X
0 K
V
108 441 504 477 R
V
8 F
0 X
(Figure 8.  First 13 macroclassifiers from experiment of Figure 6 at 4,000 problems.) 108 469.67 T
108 495 504 702 R
7 X
V
9 F
0 X
(        Condition               Act.  Pred.  Error   Fitn.  Num. ) 108 695.33 T
(                                        ) 108 683.33 T
10 F
(p) 347.87 683.33 T
9 F
(      ) 353.86 683.33 T
11 F
(e) 389.85 683.33 T
9 F
(      ) 394.23 683.33 T
10 F
(F) 430.21 683.33 T
9 F
(      ) 436.21 683.33 T
10 F
(n) 472.19 683.33 T
9 F
(0## 00# 0## ### 000 #1# ### 1##  7    1000.   .00     73.    1) 108 659.33 T
(0## 0#0 #0# #0# #10 ### 0#0 ###  4    1000.   .00    102.    2) 108 647.33 T
(0## 0#0 #0# #0# #1# ### 0#0 ###  4    1000.   .00     84.    1) 108 635.33 T
(0## 0## 0## 000 110 ### 000 00#  4    1000.   .00     73.    1) 108 623.33 T
(0## 0## 0## 000 11# ### 000 00#  4    1000.   .00    384.    5) 108 611.33 T
(0## 0## 0## 000 11# ### 0#0 00#  4    1000.   .00     76.    1) 108 599.33 T
(0## 0## 0## 0## 0## 0## 1## ###  6    1000.   .00    119.    1) 108 587.33 T
(0## 0## 0## 0## #1# #1# 000 00#  4    1000.   .00     79.    1) 108 575.33 T
(0## 0## ### 0## 00# #1# 0## 1##  7    1000.   .00    158.    2) 108 563.33 T
(0## ### ### 0## 000 #1# 0## 1##  7    1000.   .00    250.    3) 108 551.33 T
(0## ### ### 0## 00# 0## 01# 1##  7    1000.   .00     73.    1) 108 539.33 T
(0## ### ### 0## 00# #1# 0## 1##  7    1000.   .00    155.    2) 108 527.33 T
(0## ### ### ### 0#0 #1# 0## 1##  7    1000.   .00     88.    1) 108 515.33 T
0 0 612 792 C
FMENDPAGE
%%EndPage: "28" 27
%%Page: "27" 27
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(27) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
2 F
0 X
-0.01 (That the X ) 90 712 P
4 F
-0.01 (x) 144.26 712 P
2 F
-0.01 ( A => P map has conver) 150.25 712 P
-0.01 (ged to ) 266.08 712 P
1 F
-0.01 (Q\050x,a\051) 298.7 712 P
2 F
-0.01 ( is suggested by the reduction in system er-) 329.67 712 P
(ror to a few percent, and, as will be seen, by the predictions of high-\336tness classi\336ers.  The map-) 72 688 T
(ping may be visualized in a dif) 72 664 T
(ferent way in Figure 7, which symbolizes, for each blank position ) 219.69 664 T
-0.23 (in the repeat pattern of W) 72 640 P
-0.23 (oods2, the system prediction associated with each of the eight directions ) 192.78 640 P
-0.09 (of movement at 4,000 problems in one run of the experiment.  The length of a line segment repre-) 72 616 P
(sents the prediction for the associated direction, and is scaled so that a prediction of 1000 equals ) 72 592 T
(half a cell side.  The diagram shows that the mapping is complete in that all actions are represent-) 72 568 T
-0.06 (ed in all cells.  It may be seen to be roughly accurate by noting that actions that are one step from ) 72 544 P
-0.12 (food have predictions of 1000, actions two steps away \050i.e., after taking the action, the shortest re-) 72 520 P
-0.35 (sulting path to food is one step long\051 have predictions roughly 1000 ) 72 496 P
7 F
-0.35 (g) 395.55 496 P
2 F
-0.35 (  = 710 in length, and actions ) 400.48 496 P
-0.06 (three steps away have predictions roughly 710 ) 72 472 P
7 F
-0.06 (g) 297.11 472 P
2 F
-0.06 ( = 504 in length.  Further evidence of accuracy is ) 302.04 472 P
-0.07 (given in the next section.  \050Figure 7 was computed by placing the system in 16 cells with O\325) 72 448 P
-0.07 (s and ) 512.16 448 P
(F as neighboring objects, so it does not represent predictions over all positions in W) 72 424 T
(oods2 and is ) 473.79 424 T
(strictly only suggestive of the mapping\325) 72 400 T
(s conver) 262.23 400 T
(gence.\051) 302.31 400 T
1 F
(4.3.3  Evidence of generalization in W) 72 366 T
(oods2) 254.78 366 T
2 F
(The population size result in Figure 6 is a \336rst indication of the system\325) 72 340 T
(s generalization ability in ) 414.14 340 T
(this kind of environment.  Note that 500 is less than the size of the table required by standard Q-) 72 316 T
-0.34 (learning for W) 72 292 P
-0.34 (oods2.  Since W) 140.97 292 P
-0.34 (oods2 produces 70 distinct inputs for the system and there are eight ) 217.61 292 P
(directions of movement, the table size would be 560.  This is not a dramatic dif) 72 268 T
(ference, but may ) 451.87 268 T
-0.1 (imply that XCS\325) 72 244 P
-0.1 (s advantage would be bigger in lar) 150.45 244 P
-0.1 (ger problems.  Recall that the 6-multiplexer re-) 314.85 244 P
(quired about 200 classi\336ers peak and settled to about 100.  The Q table size for that problem ) 72 220 T
(would be 64 x 2 = 128, again not a dramatic dif) 72 196 T
(ference.  However) 299.73 196 T
(, the 1) 387.49 196 T
(1-multiplexer required ) 416.69 196 T
(600 classi\336ers peak and settled to around 300.  For that problem, the Q table requires 2048 x 2 = ) 72 172 T
(4096 entries, suggesting an increasing advantage for the classi\336er system in lar) 72 148 T
(ger problems.  It ) 450.85 148 T
-0.17 (should be mentioned that not all experiments with W) 72 124 P
-0.17 (oods2 had a steady or falling population size ) 324.18 124 P
-0.42 (by 4,000 problems.  However) 72 100 P
-0.42 (, population sizes like that in Figure 6 were obtained by lowering the ) 212.39 100 P
(mutation and crossover rates. This in fact improved performance, suggesting that appropriate pa-) 72 76 T
FMENDPAGE
%%EndPage: "27" 26
12 11 /Times-Bold FMDEFINEFONT
13 24 /Times-Roman FMDEFINEFONT
%%Page: "26" 26
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(26) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 360 R
V
2 F
0 X
-0.01 (1,000 explore problems.  For W) 72 352 P
-0.01 (oods2, optimal performance is 1.7 steps to food. This is the aver-) 224.53 352 P
(age of the shortest path to food from every starting position; no system having the same actions ) 72 328 T
-0.25 (can do better in W) 72 304 P
-0.25 (oods2. Figure 6 shows performance \050in average steps to food\051, system error \050av-) 158.64 304 P
(erage absolute dif) 72 280 T
(ference between the system prediction for the chosen action, and ) 157.04 280 T
1 F
(P) 470.46 280 T
2 F
(\051, and popu-) 477.79 280 T
(lation size curves for the experiment with the best performance so far \050to show the curves on the ) 72 256 T
(same scale, performance and population size were divided by the factors indicated before plot-) 72 232 T
(ting\051.  The performance curve begins of) 72 208 T
(f-scale, with steps-to-food generally at least 27 \050the ran-) 262.62 208 T
(dom value\051, then falls rapidly within 500 problems \050or about 250 explore problems\051 to 2.0 and ) 72 184 T
-0.23 (gradually approaches the optimum over the next 500 problems. The system error) 72 160 P
-0.23 (, shown as a frac-) 456.68 160 P
(tion of the external reward value \0501000\051 is about 10% by 100 problems, then falls slowly to ) 72 136 T
(around 2%. The population size in macroclassi\336ers rises rapidly at the beginning to around 500, ) 72 112 T
(and stays near that value for the rest of the experiment.) 72 88 T
72 378 540 720 C
72 378 540 720 R
7 X
0 K
V
108 414 504 468 R
V
12 F
0 X
0.08 (Figure 7) 108 460.67 P
8 F
0.08 (.  Example of system predictions learned in Woods2.  Line length is proportional) 147.45 460.67 P
-0.4 (to the prediction in that direction, scaled so half the length of a cell edge equals the external) 108 447.67 P
(reward.) 108 434.67 T
202.97 495 414 702 C
0 X
0 K
%%BeginBinary:  5890     
251 245 240.96 235.2 0 188 480.9
/red <
00FF00FF00FF00FF000000000000000000000000000000000000000000000000
000810192129313A424A525B636B737C848C949DA5ADB5BEC6CED6DFE7EF00FF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000CCE0FFFF000000FF00FF
> store
/green <
00FF00F300F000F0000000000000000000000000000000000000000000000000
000810192129313A424A525B636B737C848C949DA5ADB5BEC6CED6DFE7EF00FF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000CCE000FFFF00FF0000FF
> store
/blue <
00FF00D700DC00DC000000000000000000000000000000000000000000000000
000810192129313A424A525B636B737C848C949DA5ADB5BEC6CED6DFE7EF00FF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000CCE0FF00FFFF000000FF
> store
 BEGINBITMAPCOLORc
J"J"J"J"J"J"
780G80G80G80G80G80



















z
S580Z"Z"Z"Z"Z"Z"Z
780G80G80G80G80G80;







J"J"J"J"J"
K80G80G80G80G80

J"C"J"C"J"C"J"C"J"C"
D808098080980809808098080J#A#J#A#J#A#J#A#J#A#
DFF8080FF9FF8080FF9FF8080FF9FF8080FF9FF8080FFJ#?#J#?#J#?#J#?#J#?#
EFF8080FF;FF8080FF;FF8080FF;FF8080FF;FF8080FFJ#=#J#=#J#=#J#=#J#=#
FFF8080FF=FF8080FF=FF8080FF=FF8080FF=FF8080FFJ#;#J#;#J#;#J#;#J#;#
GFF8080FF?FF8080FF?FF8080FF?FF8080FF?FF8080FFJ#9#J#9#J#9#J#9#J#9#
HFF8080FFAFF8080FFAFF8080FFAFF8080FFAFF8080FFJ&J&J&J&J&
IFF808080FFCFF808080FFCFF808080FFCFF808080FFCFF808080FFJt9tIt9tIt9tIt9tIt9t
A80808080808080808080JT9TIT9TIT9TIT9TIT9T
AJ&J&J&J&J&
I80FF80FF80C80FF80FF80C80FF80FF80C80FF80FF80C80FF80FF80J#9#J#9#J#9#J#9#J#9#
H80FFFF80A80FFFF80A80FFFF80A80FFFF80A80FFFF80J#;#J#;#J#;#J#;#J#;#
G80FFFF80?80FFFF80?80FFFF80?80FFFF80?80FFFF80J#=#J#=#J#=#J#=#J#=#
F80FFFF80=80FFFF80=80FFFF80=80FFFF80=80FFFF80J#?#J#?#J#?#J#?#J#?#
E80FFFF80;80FFFF80;80FFFF80;80FFFF80;80FFFF80J#A#J#A#J#A#J#A#J#A#
D80FFFF80980FFFF80980FFFF80980FFFF80980FFFF80J#C#J#C#J#C#J#C"J#C"
C80FFFF80780FFFF80780FFFF80780FFFF880FFFFJ"E#J#E#J#E#J#J#
CFFFF80580FFFF80580FFFF80580FFF80FFJ#J"G#I#G#I#J#
O&FF804FFFF8080FFFF8080FFF80FFJ"?"J"I"I"I"J"?"
KFFFFGFFFFFFFFGFFFF


J"J"J"
OEFFGFFGFF



z
S580Z"Z"Z"Z"Z"Z"Z
780G80G80G80G80G80;







J"J"J"J"J"
K80G80G80G80G80

J"C"J"C"J"C"J"C"J"C"
D808098080980809808098080J#A#J#A#J#A#J#A#J#A#
DFF8080FF9FF8080FF9FF8080FF9FF8080FF9FF8080FFJ#?#J#?#J#?#J#?#J#?#
EFF8080FF;FF8080FF;FF8080FF;FF8080FF;FF8080FFJ#=#J#=#J#=#J#=#J#=#
FFF8080FF=FF8080FF=FF8080FF=FF8080FF=FF8080FFJ#;#J#;#J#;#J#;#J#;#
GFF8080FF?FF8080FF?FF8080FF?FF8080FF?FF8080FFJ#9#J#9#J#9#J#9#J#9#
HFF8080FFAFF8080FFAFF8080FFAFF8080FFAFF8080FFJ&J&J&J&J&
IFF808080FFCFF808080FFCFF808080FFCFF808080FFCFF808080FFJt9xEt9xAx9xAx9tEx9t
A80808080808080808080JT9XET9XAX9XAX9TEX9T
AJ&J&J&J&J&
I80FF80FF80C80FF80FF80C80FF80FF80C80FF80FF80C80FF80FF80J#9#J#9#J#9#J#9#J#9#
H80FFFF80A80FFFF80A80FFFF80A80FFFF80A80FFFF80J#;#J#;#J#;#J#;#J#;#
G80FFFF80?80FFFF80?80FFFF80?80FFFF80?80FFFF80J#=#J#=#J#=#J#=#J#=#
F80FFFF80=80FFFF80=80FFFF80=80FFFF80=80FFFF80J#?#J#?#J#?#J#?#J#?#
E80FFFF80;80FFFF80;80FFFF80;80FFFF80;80FFFF80J#A#J#A#J#A#J#A#J#A#
D80FFFF80980FFFF80980FFFF80980FFFF80980FFFF80J"C"J#C#J#C#J#C"J#C"
DFFFF880FFFF80780FFFF80780FFFF880FFFFJ#E#J#E#J#J#
O<80FFFF80580FFFF80580FFF80FFJ#G#I#G#I#J#
O;80FFFF8080FFFF8080FFF80FFJ"J"I#H"I"H#J"?"
KFF=FFFF80FFFF80FFGFFFFJ#J#
P"FF80O)80FFJ#J#
P#FF80O'80FFJ#J"
P$FF80O&FFJ"C"J"
OEFFFFO3FF



z
S580Z"Z"Z"Z"Z"Z"Z
780G80G80G80G80G80;



J"
Q980


J"J"?"
Q/80G8080J#J#
Q/FF80FFF80J#J#
Q0FF80FFF80J#C"J#C"
Q1FF80808FF8080J#A#J#A#
Q2FF8080FF9FF8080FFJ#?#J#?#
Q3FF8080FF;FF8080FFJ#=#J#=#
Q4FF8080FF=FF8080FFJ#;#J#;#
Q5FF8080FF?FF8080FFJ#9#J#9#
Q6FF8080FFAFF8080FFJ&J&
Q7FF808080FFCFF808080FFJz9tEx9t
Q&280808080JZ9TEX9T
Q&2J&J&
Q780FF80FF80C80FF80FF80J#9#J#9#
Q680FFFF80A80FFFF80J#;#J#;#
Q580FFFF80?80FFFF80J#=#J#=#
Q480FFFF80=80FFFF80J#?#J#?#
Q380FFFF80;80FFFF80J#A#J#A#
Q280FFFF80980FFFF80J#C"J#C"
Q180FFFF880FFFFJ#J#
Q080FFF80FFJ#J#
Q/80FFF80FFJ"J"?"
Q/FFGFFFF


J"
Q9FF



z
S580Z"Z"Z"Z"Z"Z"Z
780G80G80G80G80G80;



J"C"
Q+8080J#
Q+FF80J#
Q,FF80J#
Q-FF80J#J"?"
Q.FF80G8080J#J#
Q/FF80FFF80J#J#
Q0FF80FFF80J#C"J#C"
Q1FF80808FF8080J#A#J#A#
Q2FF8080FF9FF8080FFJ#?#J#?#
Q3FF8080FF;FF8080FFJ#=#J#=#
Q4FF8080FF=FF8080FFJ#;#J#;#
Q5FF8080FF?FF8080FFJ#9#J#9#
Q6FF8080FFAFF8080FFJ&J&
Q7FF808080FFCFF808080FFJx9tFw9t
Q+80808080JX9TFW9T
Q+J&J&
Q780FF80FF80C80FF80FF80J#9#J#9#
Q680FFFF80A80FFFF80J#;#J#;#
Q580FFFF80?80FFFF80J#=#J#=#
Q480FFFF80=80FFFF80J#?#J#?#
Q380FFFF80;80FFFF80J#A#J#A#
Q280FFFF80980FFFF80J#C"J"C"
Q180FFFF9FFFFJ#
Q080FFJ#
Q/80FFJ"?"J"
Q/FFFFGFF







z
S580Z"Z"Z"Z"Z"Z"Z
780G80G80G80G80G80;



J"
Q980


J"?"
R)8080J#
R)FF80J#
R*FF80J"C"J#C"
Q280808FF8080J#A#J#A#
Q2FF8080FF9FF8080FFJ#?#J#?#
Q3FF8080FF;FF8080FFJ#=#J#=#
Q4FF8080FF=FF8080FFJ#;#J#;#
Q5FF8080FF?FF8080FFJ#9#J#9#
Q6FF8080FFAFF8080FFJ&J&
Q7FF808080FFCFF808080FFJt9tIt9t
Q/80808080JT9TIT9T
Q/J&J&
Q780FF80FF80C80FF80FF80J#9#J#9#
Q680FFFF80A80FFFF80J#;#J#;#
Q580FFFF80?80FFFF80J#=#J#=#
Q480FFFF80=80FFFF80J#?#J#?#
Q380FFFF80;80FFFF80J#A#J#A#
Q280FFFF80980FFFF80J#C"J"C"
Q180FFFF9FFFFJ"
Q1FF
J"J"
Q9FFGFF







z
S580Z"Z"Z"Z"Z"Z"Z
780G80G80G80G80G80;






















ENDBITMAP
%%EndBinary
13 F
(O) 221.65 590.21 T
(O) 259.97 590.01 T
(F) 300.97 590.01 T
(O) 221.97 554.01 T
(O) 258.97 554.01 T
(O) 299.97 554.01 T
(O) 221.97 515.01 T
(O) 259.97 515.01 T
(O) 298.97 515.01 T
72 378 540 720 C
0 0 612 792 C
FMENDPAGE
%%EndPage: "26" 25
13 10 /Times-Roman FMDEFINEFONT
14 11 /Times-Italic FMDEFINEFONT
15 9 /Times-Italic FMDEFINEFONT
%%Page: "25" 25
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(25) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 342 R
V
2 F
0 X
(be random \050explore\051 or deterministic \050exploit\051.  In explore mode, both the reinforcement and dis-) 72 334 T
(covery components operated normally) 72 310 T
(, but in the performance component, actions were selected ) 255.41 310 T
(at random from among those that had non-null predictions in the prediction array) 72 286 T
(.  In exploit ) 460.29 286 T
(mode, the performance component selected the action with the maximum prediction. The discov-) 72 262 T
-0.03 (ery component was turned of) 72 238 P
-0.03 (f \050except for covering\051, but in the reinforcement component updates ) 211.56 238 P
-0.08 (occurred normally for [A]) 72 214 P
13 F
-0.06 (-1) 196.66 211 P
2 F
-0.08 ( \050but not [A]\051.  Updates to [A]) 204.99 214 P
13 F
-0.06 (-1) 349.02 211 P
2 F
-0.08 ( were maintained to allow escape, via ) 357.34 214 P
(covering, from occasional loops early in a run.  T) 72 190 T
(o keep track of exploit mode performance, the ) 307.98 190 T
-0.35 (system kept a moving average, over the past 50 exploit problems, of the length of each problem in ) 72 166 P
(time-steps. As with the multiplexers, the population was initially empty) 72 142 T
(.   ) 414.7 142 T
(Experiments were typically run for several thousand problems.  Under a variety of parameter ) 90 112 T
(regimes and initializations, XCS quite reliably achieved optimal performance within roughly ) 72 88 T
72 351 540 720 C
72 351 540 720 R
7 X
0 K
V
0 0 0 387 246.5 681.12 433.84 -24.12 385.16 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 0 387.000000 246.500000
%%Creator: TempleGraph 2.4, Origin: /home/wilson@smith
%%CreationDate: Tue Apr 25 12:21:51 1995
%%EndComments
%%DocumentFonts: Times-Roman

/reencodedict 12 dict def
/ReEncode
 { reencodedict begin
  /newcodesandnames exch def
  /newfontname exch def
  /basefontname exch def
  /basefontdict basefontname findfont def
  /newfont basefontdict maxlength dict def
  basefontdict
   { exch dup /FID ne
    { dup /Encoding eq
     { exch dup length array copy newfont 3 1 roll put }
     { exch newfont 3 1 roll put }
    ifelse }
    { pop pop }
   ifelse
  } forall
 newfont /FontName newfontname put
  0 1 newcodesandnames length 1 sub
  { dup newfont /Encoding get 3 1 roll newcodesandnames exch get put}
  for
 newfontname newfont definefont pop
 end
} def


/ExtEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quoteright /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /quoteleft /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quotesingle /grave /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def

/Times-Roman /Times-Roman-Ext ExtEncoding ReEncode
0. setgray
0 246.000000 translate
0.500000 -0.500000 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
328 385 moveto
1 -1 scale
(Problems \(1000s\)) show
1 -1 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
199 382 moveto
1 setlinewidth
newpath
500 345 moveto
500 139 lineto
253 139 lineto
253 345 lineto
500 345 lineto
closepath
stroke
gsave
newpath
253 345 moveto
253 139 lineto
500 139 lineto
500 345 lineto
253 345 moveto
clip
[] 0 setdash
1 setlinewidth
newpath
259.175 158.435 moveto
265.35 274.301 lineto
271.525 282.953 lineto
277.7 296.631 lineto
283.875 300.751 lineto
290.05 302.152 lineto
296.225 306.107 lineto
302.4 306.437 lineto
308.575 305.613 lineto
314.75 308.579 lineto
320.925 309.238 lineto
327.1 309.733 lineto
333.275 309.98 lineto
339.45 309.898 lineto
345.625 306.519 lineto
351.8 308.909 lineto
357.975 308.332 lineto
364.15 309.898 lineto
370.325 309.403 lineto
376.5 308.414 lineto
382.675 309.815 lineto
388.85 309.98 lineto
395.025 308.991 lineto
401.2 310.062 lineto
407.375 309.568 lineto
413.55 310.474 lineto
419.725 309.733 lineto
425.9 310.392 lineto
432.075 311.546 lineto
438.25 311.381 lineto
444.425 310.722 lineto
450.6 311.298 lineto
456.775 311.216 lineto
462.95 308.579 lineto
469.125 308.332 lineto
475.3 308.497 lineto
481.475 309.238 lineto
487.65 309.156 lineto
493.825 308.826 lineto
500 309.486 lineto
stroke
[2] 0 setdash
1 setlinewidth
newpath
259.175 324.244 moveto
265.35 329.3 lineto
271.525 330.165 lineto
277.7 332.828 lineto
283.875 332.06 lineto
290.05 334.184 lineto
296.225 334.33 lineto
302.4 336.399 lineto
308.575 336.091 lineto
314.75 338.004 lineto
320.925 339.636 lineto
327.1 340.179 lineto
333.275 340.831 lineto
339.45 339.599 lineto
345.625 340.607 lineto
351.8 340.077 lineto
357.975 340.026 lineto
364.15 340.612 lineto
370.325 341.313 lineto
376.5 341.183 lineto
382.675 341.776 lineto
388.85 341.318 lineto
395.025 341.34 lineto
401.2 339.807 lineto
407.375 342.381 lineto
413.55 342.145 lineto
419.725 342.111 lineto
425.9 341.502 lineto
432.075 342.61 lineto
438.25 342.557 lineto
444.425 341.903 lineto
450.6 342.722 lineto
456.775 341.767 lineto
462.95 341.907 lineto
469.125 340.051 lineto
475.3 342.301 lineto
481.475 341.446 lineto
487.65 339.572 lineto
493.825 342.403 lineto
500 342.14 lineto
stroke
[6 2] 0 setdash
1 setlinewidth
newpath
259.175 272.612 moveto
265.35 252.094 lineto
271.525 246.82 lineto
277.7 244.925 lineto
283.875 243.566 lineto
290.05 242.659 lineto
296.225 242.577 lineto
302.4 242.33 lineto
308.575 240.476 lineto
314.75 240.64 lineto
320.925 237.756 lineto
327.1 238.539 lineto
333.275 239.652 lineto
339.45 239.198 lineto
345.625 238.828 lineto
351.8 239.94 lineto
357.975 238.745 lineto
364.15 240.434 lineto
370.325 238.622 lineto
376.5 239.816 lineto
382.675 240.476 lineto
388.85 240.476 lineto
395.025 241.341 lineto
401.2 241.423 lineto
407.375 241.67 lineto
413.55 241.341 lineto
419.725 240.146 lineto
425.9 241.712 lineto
432.075 243.524 lineto
438.25 241.217 lineto
444.425 242.412 lineto
450.6 242.453 lineto
456.775 242.206 lineto
462.95 245.42 lineto
469.125 246.079 lineto
475.3 245.584 lineto
481.475 244.884 lineto
487.65 242.742 lineto
493.825 242.906 lineto
500 243.524 lineto
stroke
[6 10 2 3 2 10] 0 setdash
1 setlinewidth
newpath
259.175 310.248 moveto
265.35 310.248 lineto
271.525 310.248 lineto
277.7 310.248 lineto
283.875 310.248 lineto
290.05 310.248 lineto
296.225 310.248 lineto
302.4 310.248 lineto
308.575 310.248 lineto
314.75 310.248 lineto
320.925 310.248 lineto
327.1 310.248 lineto
333.275 310.248 lineto
339.45 310.248 lineto
345.625 310.248 lineto
351.8 310.248 lineto
357.975 310.248 lineto
364.15 310.248 lineto
370.325 310.248 lineto
376.5 310.248 lineto
382.675 310.248 lineto
388.85 310.248 lineto
395.025 310.248 lineto
401.2 310.248 lineto
407.375 310.248 lineto
413.55 310.248 lineto
419.725 310.248 lineto
425.9 310.248 lineto
432.075 310.248 lineto
438.25 310.248 lineto
444.425 310.248 lineto
450.6 310.248 lineto
456.775 310.248 lineto
462.95 310.248 lineto
469.125 310.248 lineto
475.3 310.248 lineto
481.475 310.248 lineto
487.65 310.248 lineto
493.825 310.248 lineto
500 310.248 lineto
stroke
grestore
1 setlinewidth
[] 0 setdash
newpath
253 345 moveto
500 345 lineto
stroke
[] 0 setdash
.5 setlinewidth
newpath
253 345 moveto
253 339 lineto
stroke
newpath
314.75 345 moveto
314.75 339 lineto
stroke
newpath
376.5 345 moveto
376.5 339 lineto
stroke
newpath
438.25 345 moveto
438.25 339 lineto
stroke
newpath
500 345 moveto
500 339 lineto
stroke
newpath
253 345 moveto
253 339 lineto
stroke
newpath
314.75 345 moveto
314.75 339 lineto
stroke
newpath
376.5 345 moveto
376.5 339 lineto
stroke
newpath
438.25 345 moveto
438.25 339 lineto
stroke
newpath
500 345 moveto
500 339 lineto
stroke
newpath
253 139 moveto
253 145 lineto
stroke
newpath
314.75 139 moveto
314.75 145 lineto
stroke
newpath
376.5 139 moveto
376.5 145 lineto
stroke
newpath
438.25 139 moveto
438.25 145 lineto
stroke
newpath
500 139 moveto
500 145 lineto
stroke
newpath
253 345 moveto
253 341 lineto
stroke
newpath
283.875 345 moveto
283.875 341 lineto
stroke
newpath
314.75 345 moveto
314.75 341 lineto
stroke
newpath
253 345 moveto
253 341 lineto
stroke
newpath
283.875 345 moveto
283.875 341 lineto
stroke
newpath
314.75 345 moveto
314.75 341 lineto
stroke
newpath
253 139 moveto
253 143 lineto
stroke
newpath
283.875 139 moveto
283.875 143 lineto
stroke
newpath
314.75 139 moveto
314.75 143 lineto
stroke
newpath
314.75 345 moveto
314.75 341 lineto
stroke
newpath
345.625 345 moveto
345.625 341 lineto
stroke
newpath
376.5 345 moveto
376.5 341 lineto
stroke
newpath
314.75 345 moveto
314.75 341 lineto
stroke
newpath
345.625 345 moveto
345.625 341 lineto
stroke
newpath
376.5 345 moveto
376.5 341 lineto
stroke
newpath
314.75 139 moveto
314.75 143 lineto
stroke
newpath
345.625 139 moveto
345.625 143 lineto
stroke
newpath
376.5 139 moveto
376.5 143 lineto
stroke
newpath
376.5 345 moveto
376.5 341 lineto
stroke
newpath
407.375 345 moveto
407.375 341 lineto
stroke
newpath
438.25 345 moveto
438.25 341 lineto
stroke
newpath
376.5 345 moveto
376.5 341 lineto
stroke
newpath
407.375 345 moveto
407.375 341 lineto
stroke
newpath
438.25 345 moveto
438.25 341 lineto
stroke
newpath
376.5 139 moveto
376.5 143 lineto
stroke
newpath
407.375 139 moveto
407.375 143 lineto
stroke
newpath
438.25 139 moveto
438.25 143 lineto
stroke
newpath
438.25 345 moveto
438.25 341 lineto
stroke
newpath
469.125 345 moveto
469.125 341 lineto
stroke
newpath
500 345 moveto
500 341 lineto
stroke
newpath
438.25 345 moveto
438.25 341 lineto
stroke
newpath
469.125 345 moveto
469.125 341 lineto
stroke
newpath
500 345 moveto
500 341 lineto
stroke
newpath
438.25 139 moveto
438.25 143 lineto
stroke
newpath
469.125 139 moveto
469.125 143 lineto
stroke
newpath
500 139 moveto
500 143 lineto
stroke
1 setlinewidth
[] 0 setdash
newpath
253 345 moveto
253 139 lineto
stroke
[] 0 setdash
.5 setlinewidth
newpath
253 345 moveto
259 345 lineto
stroke
newpath
253 303.8 moveto
259 303.8 lineto
stroke
newpath
253 262.6 moveto
259 262.6 lineto
stroke
newpath
253 221.4 moveto
259 221.4 lineto
stroke
newpath
253 180.2 moveto
259 180.2 lineto
stroke
newpath
253 139 moveto
259 139 lineto
stroke
newpath
253 345 moveto
259 345 lineto
stroke
newpath
253 303.8 moveto
259 303.8 lineto
stroke
newpath
253 262.6 moveto
259 262.6 lineto
stroke
newpath
253 221.4 moveto
259 221.4 lineto
stroke
newpath
253 180.2 moveto
259 180.2 lineto
stroke
newpath
253 139 moveto
259 139 lineto
stroke
newpath
500 345 moveto
494 345 lineto
stroke
newpath
500 303.8 moveto
494 303.8 lineto
stroke
newpath
500 262.6 moveto
494 262.6 lineto
stroke
newpath
500 221.4 moveto
494 221.4 lineto
stroke
newpath
500 180.2 moveto
494 180.2 lineto
stroke
newpath
500 139 moveto
494 139 lineto
stroke
newpath
253 345 moveto
257 345 lineto
stroke
newpath
253 324.4 moveto
257 324.4 lineto
stroke
newpath
253 303.8 moveto
257 303.8 lineto
stroke
newpath
253 345 moveto
257 345 lineto
stroke
newpath
253 324.4 moveto
257 324.4 lineto
stroke
newpath
253 303.8 moveto
257 303.8 lineto
stroke
newpath
500 345 moveto
496 345 lineto
stroke
newpath
500 324.4 moveto
496 324.4 lineto
stroke
newpath
500 303.8 moveto
496 303.8 lineto
stroke
newpath
253 303.8 moveto
257 303.8 lineto
stroke
newpath
253 283.2 moveto
257 283.2 lineto
stroke
newpath
253 262.6 moveto
257 262.6 lineto
stroke
newpath
253 303.8 moveto
257 303.8 lineto
stroke
newpath
253 283.2 moveto
257 283.2 lineto
stroke
newpath
253 262.6 moveto
257 262.6 lineto
stroke
newpath
500 303.8 moveto
496 303.8 lineto
stroke
newpath
500 283.2 moveto
496 283.2 lineto
stroke
newpath
500 262.6 moveto
496 262.6 lineto
stroke
newpath
253 262.6 moveto
257 262.6 lineto
stroke
newpath
253 242 moveto
257 242 lineto
stroke
newpath
253 221.4 moveto
257 221.4 lineto
stroke
newpath
253 262.6 moveto
257 262.6 lineto
stroke
newpath
253 242 moveto
257 242 lineto
stroke
newpath
253 221.4 moveto
257 221.4 lineto
stroke
newpath
500 262.6 moveto
496 262.6 lineto
stroke
newpath
500 242 moveto
496 242 lineto
stroke
newpath
500 221.4 moveto
496 221.4 lineto
stroke
newpath
253 221.4 moveto
257 221.4 lineto
stroke
newpath
253 200.8 moveto
257 200.8 lineto
stroke
newpath
253 180.2 moveto
257 180.2 lineto
stroke
newpath
253 221.4 moveto
257 221.4 lineto
stroke
newpath
253 200.8 moveto
257 200.8 lineto
stroke
newpath
253 180.2 moveto
257 180.2 lineto
stroke
newpath
500 221.4 moveto
496 221.4 lineto
stroke
newpath
500 200.8 moveto
496 200.8 lineto
stroke
newpath
500 180.2 moveto
496 180.2 lineto
stroke
newpath
253 180.2 moveto
257 180.2 lineto
stroke
newpath
253 159.6 moveto
257 159.6 lineto
stroke
newpath
253 139 moveto
257 139 lineto
stroke
newpath
253 180.2 moveto
257 180.2 lineto
stroke
newpath
253 159.6 moveto
257 159.6 lineto
stroke
newpath
253 139 moveto
257 139 lineto
stroke
newpath
500 180.2 moveto
496 180.2 lineto
stroke
newpath
500 159.6 moveto
496 159.6 lineto
stroke
newpath
500 139 moveto
496 139 lineto
stroke
249 365 moveto
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
(0)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
310.75 365 moveto
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
(1)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
372.5 365 moveto
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
(2)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
434.25 365 moveto
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
(3)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
496 365 moveto
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
(4)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
221 350 moveto
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
(0.0)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
221 308.8 moveto
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
(0.2)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
221 267.6 moveto
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
(0.4)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
221 226.4 moveto
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
(0.6)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
221 185.2 moveto
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
(0.8)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
221 144 moveto
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
(1.0)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [20.000000 0 0 20.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
newpath
416 223 moveto
416 150 lineto
523 150 lineto
523 223 lineto
416 223 lineto
closepath
currentgray 1.0 setgray
fill
setgray
[] 0 setdash
1 setlinewidth
newpath
523 223 moveto
523 150 lineto
416 150 lineto
416 223 lineto
523 223 lineto
closepath
stroke
.686747 setlinewidth
[] 0 setdash
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
newpath
418 169 moveto
0
(Steps to food \(/10\)) stringwidth pop add
418 add
169 lineto
stroke
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
418 164 moveto
1 -1 scale
(Steps to food \(/10\)) show
1 -1 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
.686747 setlinewidth
[2] 0 setdash
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
newpath
418 186 moveto
0
(System error) stringwidth pop add
418 add
186 lineto
stroke
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
418 181 moveto
1 -1 scale
(System error) show
1 -1 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
.686747 setlinewidth
[6 2] 0 setdash
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
newpath
418 203 moveto
0
(Pop. size \(/1000\)) stringwidth pop add
418 add
203 lineto
stroke
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
418 198 moveto
1 -1 scale
(Pop. size \(/1000\)) show
1 -1 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
.686747 setlinewidth
[6 10 2 3 2 10] 0 setdash
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
newpath
418 220 moveto
0
(Optimum \(/10\)) stringwidth pop add
418 add
220 lineto
stroke
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
418 215 moveto
1 -1 scale
(Optimum \(/10\)) show
1 -1 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
showpage

%%EndDocument
FMENDEPSF
108 360 504 441 R
V
12 F
0 X
0.44 (Figure 6) 108 433.67 P
8 F
0.44 (.) 147.81 433.67 P
12 F
0.44 (  ) 150.55 433.67 P
8 F
0.44 ( Results in a Woods2 experiment.  Solid curve: Performance, average steps to) 156.93 433.67 P
0.28 (food in last 50 exploit problems \050divided by 10\051. Dotted curve: System error as a fraction) 108 420.67 P
0.63 (of external reward. Dashed curve: Population size in macroclassifiers \050divided by 1000\051.) 108 407.67 P
-0.07 (Dash-dot curve, Optimum performance \050divided by 10\051.  Parameters the same as in Figure) 108 394.67 P
(3 except ) 108 381.67 T
14 F
(N) 147.66 381.67 T
8 F
( = 800, ) 154.99 381.67 T
7 F
(m) 188.65 381.67 T
8 F
( = 0.01, and ) 195.56 381.67 T
14 F
(P) 250.58 381.67 T
15 F
(#) 257.29 378.92 T
8 F
( = 0.5.   Curves are averages of 10 runs. ) 261.79 381.67 T
0 0 612 792 C
FMENDPAGE
%%EndPage: "25" 24
16 10 /Times-Italic FMDEFINEFONT
%%Page: "24" 24
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(24) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
2 F
0 X
-0.25 (0000000000000000100101) 72 712 P
-0.25 (10.  The left-hand three bits are always those due to the object occupy-) 203.48 712 P
(ing the cell directly north of *, with the remainder corresponding to cells proceeding clockwise ) 72 688 T
(around it. The animat\325) 72 664 T
(s available actions consist of the eight one-step moves into adjacent cells, ) 178.6 664 T
-0.05 (with the move directions similarly coded from 0 for north clockwise to 7 for north-west.  If a cell ) 72 640 P
-0.24 (is blank, * simply moves there.  If the cell is occupied by a rock, the move is not permitted to take ) 72 616 P
(place, though one time-step still elapses.  If the cell contains food, * moves to the cell, \322eats\323 the ) 72 592 T
(food, and receives a reward \050) 72 568 T
1 F
(r) 211.2 568 T
16 F
(imm) 215.86 565 T
2 F
( = 1000\051.  ) 233.07 568 T
(W) 90 538 T
(oods2 was constructed by repeating a basic block of nine objects and 16 blanks, with F\325) 100.36 538 T
(s ) 520.74 538 T
-0.43 (and G\325) 72 514 P
-0.43 (s assigned at random to the food position in the upper) 103.88 514 P
-0.43 (-right corner of the block, and O\325) 356.55 514 P
-0.43 (s and ) 512.87 514 P
(Q\325) 72 490 T
(s assigned at random to the other positions.  The blank positions of the resulting environment ) 83.99 490 T
-0.32 (yield a total of 70 distinct input strings.  Due to the random assignment of symbols, the right-hand ) 72 466 P
(bit of the sensor code is not of much use to a food-seeking animat, since its value does not distin-) 72 442 T
-0.06 (guish between food and rock, and does not reliably distinguish between object and blank.  In con-) 72 418 P
(trast, the left-hand bit is completely suf) 72 394 T
(\336cient to determine whether or not an object is food; ) 260 394 T
(fancifully) 72 370 T
(, it might be termed the \322aroma\323 bit.  Similarly) 117.85 370 T
(, the middle bit reliably distinguishes be-) 341.94 370 T
-0.32 (tween object and blank; it could be called \322opacity\323.  W) 72 346 P
-0.32 (e added the right-hand bit to the code with ) 336.66 346 P
(the intention of introducing regions of the X ) 72 322 T
4 F
(x) 287.2 322 T
2 F
( A => P mapping that could be generalized over ) 293.19 322 T
-0.15 (without introducing errors.  The hypothesis was that high-\336tness classi\336ers would \322hash out\323 this ) 72 298 P
(bit, since an accurate classi\336er that did so would have more matching opportunities than an accu-) 72 274 T
(rate one that did not.  ) 72 250 T
1 F
(4.3.2  Experiments in W) 72 216 T
(oods2) 186.15 216 T
2 F
-0.24 (In an experiment, the animat repeatedly executed \322problems\323 each consisting of being placed in a ) 72 190 P
(randomly chosen blank cell of W) 72 166 T
(oods2 and then moving under control of the system until a food ) 230.59 166 T
-0.35 (object was eaten, at which point the food instantly re-grew and a new problem began.  As with the ) 72 142 P
-0.42 (multiplexers, the experiments used a 50-50 explore/exploit regime. At the start of a problem, XCS ) 72 118 P
(would decide with probability 0.5 whether or not action selection throughout the problem would ) 72 94 T
FMENDPAGE
%%EndPage: "24" 23
17 18 /Symbol FMDEFINEFONT
%%Page: "23" 23
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(23) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 396 R
V
2 F
0 X
(may be reasonable.  In Section 4.2, we observed XCS\325) 72 388 T
(s generalization ability in the multiplexer ) 333.14 388 T
(problem, a single-step environment.  W) 72 364 T
(e next test it in a multi-step one.) 261.24 364 T
1 F
(4.3.1  W) 72 330 T
(oods2) 110.87 330 T
2 F
(W) 72 304 T
(ilson \0501994\051 reported experiments in a two-dimensional, Class 1 environment called W) 82.84 304 T
(oods1.  ) 499.6 304 T
-0.07 (For experiments with XCS, we retained W) 72 280 P
-0.07 (oods1\325) 275.48 280 P
-0.07 (s basic pattern, but made it more challenging by ) 307.46 280 P
-0.1 (de\336ning W) 72 256 P
-0.1 (oods2, shown in Figure 5 \050the left and right edges of W) 124.58 256 P
-0.1 (oods2 are connected, as are the ) 388.38 256 P
(top and bottom\051.  W) 72 232 T
(oods2 has two kinds of \322food\323 and two kinds of \322rocks\323, compared with one ) 167.98 232 T
(kind of each in W) 72 208 T
(oods1.  F and G are the two kinds of food, with sensor codes 1) 156.97 208 T
(10 and 1) 456.33 208 T
(1) 497.19 208 T
(1, re-) 502.74 208 T
(spectively) 72 184 T
(.  O and Q are the two kinds of rocks, with sensor codes 010 and 01) 119.85 184 T
(1, respectively) 443.84 184 T
(. ) 513.01 184 T
(Blanks, denoted by \322.\323, have sensor code 000.  The system, here regarded as an ) 72 160 T
1 F
(animat) 455.69 160 T
2 F
( \050W) 489.01 160 T
(ilson, ) 506.85 160 T
(1985\051 or arti\336cial animal, is represented by *. T) 72 136 T
(o sense its environment, * is capable of detecting ) 300.33 136 T
(the sensor codes of objects occupying the eight nearest cells \050sensing 000 if the cell is a blank\051.  ) 72 112 T
(For example, in the position shown, *\325) 72 88 T
(s detector input is the 24-bit string ) 256.57 88 T
72 414 540 720 C
72 414 540 720 R
7 X
0 K
V
189 495 423 693 R
V
6 F
0 X
0.48 (..............................) 189 685 S
0.48 (.QQF..QQF..OQF..QQG..OQG..OQF.) 189 672 S
0.48 (.OOO..QOO..OQO..OOQ..QQO..QQQ.) 189 659 S
0.48 (.OOQ..OQQ..OQQ..QQO..OOO..QQO.) 189 646 S
0.48 (..............................) 189 633 S
0.48 (..............................) 189 620 S
0.48 (.QOF..QOG..QOF..OOF..OOG..QOG.) 189 607 S
0.48 (.QQO..QOO..OOO .OQO..QQO..QOO.) 189 594 S
0.48 (.QQQ..OOO..OQO..QOQ..QOQ..OQO.) 189 581 S
0.48 (..............................) 189 568 S
0.48 (..............................) 189 555 S
0.48 (.QOG..QOF..OOG..OQF..OOG..OOF.) 189 542 S
0.48 (.OOQ..OQQ..QQO..OQQ..QQO..OQQ.) 189 529 S
0.48 (.QQO..OOO..OQO..OOQ..OQQ..QQQ.) 189 516 S
0.48 (..............................) 189 503 S
17 F
(*) 297.12 588.99 T
108 432 504 468 R
7 X
V
12 F
0 X
(Figure 5) 108 460.67 T
8 F
(.  Environment \322Woods2\323 with animat.  Empty cells are indicated by \322.\323) 147.36 460.67 T
0 0 612 792 C
FMENDPAGE
%%EndPage: "23" 22
%%Page: "22" 22
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(22) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
2 F
0 X
(tion is distributed over sets of classi\336ers, sets that are subject to abrupt membership changes due ) 72 712 T
(to the GA.  In XCS, however) 72 688 T
(, the relation to Q-learning is closer and more stable because each ) 211.42 688 T
(classi\336er uses Q-learning to predict the payof) 72 664 T
(f directly) 289.62 664 T
(, independent of the other classi\336ers, and ) 332.47 664 T
(the system prediction is an average instead of a sum.) 72 640 T
(Recall that XCS, as shown in Figure 1, updates predictions ) 90 610 T
1 F
(p) 375.83 610 T
16 F
(j) 381.82 607 T
2 F
( of classi\336ers in [A]) 384.6 610 T
13 F
(-1) 479.87 607 T
2 F
( with a Q-) 488.19 610 T
(learning-like quantity ) 72 586 T
1 F
(P) 178.6 586 T
2 F
( that is based on the system predictions contained in the prediction array ) 185.93 586 T
-0.22 (\050and any prior) 72 562 P
-0.22 (-step external reward\051.  The system predictions are \336tness-weighted averages of the ) 139.27 562 P
(predictions of classi\336ers in [M], and as noted should be more accurate than the sums of strengths ) 72 538 T
-0.06 (in other classi\336er systems.  The update procedure is not quite identical with Q-learning, in that Q-) 72 514 P
(learning updates a single ) 72 490 T
1 F
(\050x,a\051) 204.57 490 T
2 F
( value \050stored in a table\051 and not a number of predictors \050classi\336-) 226.88 490 T
-0.31 (ers\051 whose predictions get averaged.  But the connection is close enough to suggest that the X) 72 466 P
4 F
-0.35 ( x) 516.99 466 P
2 F
-0.31 ( A ) 525.97 466 P
-0.19 (=> P map constructed by XCS should conver) 72 442 P
-0.19 (ge to predict ) 287.54 442 P
1 F
-0.19 (Q\050x,a\051) 349.93 442 P
2 F
-0.19 (. In single-step problems like the ) 380.89 442 P
-0.13 (multiplexers, the map conver) 72 418 P
-0.13 (ged to predict the external reward, as indicated both by conver) 211.29 418 P
-0.13 (gence ) 509.17 418 P
(of the predictions of high-\336tness classi\336ers, and the reduction of the system prediction error to ) 72 394 T
-0.3 (near zero.  In a multi-step problem, XCS adjusts classi\336er predictions to predict a payof) 72 370 P
-0.3 (f  ) 488.58 370 P
1 F
-0.3 (P) 497.97 370 P
2 F
-0.3 ( which ) 505.3 370 P
-0.44 (is in fact the Q-learning-like combination of the current reward and the next time-step\325) 72 346 P
-0.44 (s maximum ) 481.58 346 P
-0.05 (system prediction.  The question is whether the system predictions and the predictions of high-\336t-) 72 322 P
(ness classi\336ers conver) 72 298 T
(ge to the same values that Q-learning would conver) 178.37 298 T
(ge to.) 425.3 298 T
(If so, there is the further possibility that XCS\325) 90 268 T
(s generalization mechanism will cause it to ex-) 309.54 268 T
-0.43 (ploit any generalization possibilities in ) 72 244 P
1 F
-0.43 (Q\050x,a\051) 258.75 244 P
2 F
-0.43 (, i.e., to evolve classi\336ers that generalize over inputs ) 289.71 244 P
1 F
(x) 72 220 T
2 F
( having the same ) 77.32 220 T
1 F
(Q) 161.27 220 T
2 F
( value for a given ) 169.93 220 T
1 F
(a) 256.85 220 T
2 F
(.  Generalization using Q-learning in multi-step environ-) 262.85 220 T
-0.19 (ments has been dif) 72 196 P
-0.19 (\336cult to achieve.  Proofs of conver) 160.82 196 P
-0.19 (gence of the basic algorithm are known only ) 325.01 196 P
-0.41 (for systems that enumerate all input-action pairs ) 72 172 P
1 F
-0.41 (\050x,a\051) 303.27 172 P
2 F
-0.41 ( in a table and have no natural generalization ) 325.57 172 P
-0.02 (mechanism.  Some success has been reported by supplementing the table with statistical cluster-) 72 148 P
(ing methods \050Mahadevan & Connell, 1992\051, or by using neural networks \050Lin, 1993\051 which im-) 72 124 T
-0.26 (plicitly generalize but may learn slowly) 72 100 P
-0.26 (.  In contrast, XCS\325) 260.14 100 P
-0.26 (s generalization mechanism is intrinsic ) 351.73 100 P
(to the system, explicitly exhibits the generalizations found \050as classi\336ers\051, and the learning rate ) 72 76 T
193.91 486.53 204.57 503.05 C
1 F
0 X
0 K
(Q) 194.91 490 T
2 F
(\366) 197.25 492.67 T
0 0 612 792 C
FMENDPAGE
%%EndPage: "22" 21
%%Page: "21" 21
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(21) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
2 F
0 X
-0.19 (puts and its own actions that will lead to reward, even when\321as with food located sparsely in the ) 72 712 P
-0.05 (environment\321many actions will receive no immediate reward \050food\051.  This is the general setting ) 72 688 P
-0.35 (of the reinforcement learning problem, and has been studied using a variety of methods, including ) 72 664 P
-0.37 (classi\336er systems \050e.g., W) 72 640 P
-0.37 (ilson, 1985\051, neural networks \050e.g., Lin, 1993\051, and, especially formally) 195.67 640 P
-0.37 (, ) 534.37 640 P
(complete listings of state-action pairs and their outcomes \050e.g., Sutton, 1991, W) 72 616 T
(atkins & Dayan, ) 453.46 616 T
(1992\051.  ) 72 592 T
(In a basic kind of multi-step environment, the next input ) 90 562 T
1 F
(y) 363.5 562 T
2 F
( \050and the reward, if any\051 encoun-) 368.82 562 T
-0.42 (tered by the system depends only on the current input ) 72 538 P
1 F
-0.42 (x) 327.67 538 P
2 F
-0.42 ( and the current action ) 332.99 538 P
1 F
-0.42 (a) 441.15 538 P
2 F
-0.42 (; there is no further ) 447.15 538 P
(history dependence.  Such an environment is described as \322Markovian with delayed rewards\323 or) 72 514 T
(, ) 533.16 514 T
-0.36 (in the terminology of W) 72 490 P
-0.36 (ilson \0501991\051, it is a \322Class 1\323 environment.  The predictability of ) 186 490 P
1 F
-0.36 (y) 494.79 490 P
2 F
-0.36 ( given ) 500.12 490 P
1 F
-0.36 (x) 532.04 490 P
2 F
-0.36 ( ) 537.36 490 P
-0.35 (and ) 72 466 P
1 F
-0.35 (a) 91.96 466 P
2 F
-0.35 ( makes it possible for the widely used technique called Q-learning \050W) 97.96 466 P
-0.35 (atkins, 1989\051 to learn a) 428.52 466 P
1 F
-0.35 ( ) 537.36 466 P
(policy) 72 442 T
2 F
( \050i.e., which ) 101.31 442 T
1 F
(a) 161.27 442 T
2 F
( to choose for each ) 167.26 442 T
1 F
(x) 260.85 442 T
2 F
(\051 that is optimal in the sense that it maximizes the dis-) 266.17 442 T
-0.29 (counted sum of future rewards that the system receives.  In this paper we shall not review Q-learn-) 72 418 P
(ing except to note that the algorithm works by associating a quantity ) 72 394 T
( with every input-action ) 413.79 394 T
-0.35 (pair) 72 370 P
-0.35 (.  As experience occurs, the algorithm updates that value, using the W) 89.99 370 P
-0.35 (idrow-Hof) 420.71 370 P
-0.35 (f rule, with an ) 471.12 370 P
(adjustment equal to the sum of the current external reward, if any) 72 346 T
(, and the product of a discount ) 384.98 346 T
(factor ) 72 322 T
7 F
(g) 102.97 322 T
2 F
( \0500<) 107.9 322 T
7 F
( g) 127.65 322 T
2 F
( <1\051 and the lar) 135.58 322 T
(gest of the ) 208.74 322 T
( values associated with the following input ) 272.36 322 T
1 F
(y) 480.57 322 T
2 F
(.  W) 485.11 322 T
(atkins ) 504.47 322 T
(proved that in Class 1 environments this procedure, if done often enough for every input, would ) 72 298 T
(conver) 72 274 T
(ge to a function ) 104.42 274 T
1 F
(Q\050x,a\051) 182.36 274 T
2 F
( such that the policy that always executed the action with the maxi-) 213.33 274 T
(mum ) 72 250 T
1 F
(Q) 99.66 250 T
2 F
( for each ) 108.32 250 T
1 F
(x) 153.27 250 T
2 F
( would be optimal in the above sense.  ) 158.59 250 T
(Several articles \050e.g., Roberts, 1993; T) 90 220 T
(wardowski, 1993; Dorigo & Bersini, 1994; W) 274.03 220 T
(ilson, ) 494.08 220 T
-0.05 (1994\051 have drawn attention to the relationship between the Q-learning update procedure and vari-) 72 196 P
(ous versions of the classi\336er system bucket-brigade algorithm, especially a version in which the ) 72 172 T
-0.1 (payof) 72 148 P
-0.1 (f value is, as in Q-learning, a discounted sum of immediate reward and the sum of strengths ) 99.09 148 P
(of the maximum strength action in the next match set \050W) 72 124 T
(ilson, 1994\051.  The major dif) 345.34 124 T
(ference is ) 477.38 124 T
(precisely that it is this sum of strengths that represents the ) 72 100 T
( value, not a single number as in Q-) 363.48 100 T
-0.21 (learning.  That is, assuming sharing of strength as discussed in Section 2, the system\325) 72 76 P
-0.21 (s ) 477.14 76 P
-0.21 ( informa-) 495.25 76 P
403.13 390.53 413.79 407.05 C
1 F
0 X
0 K
(Q) 404.13 394 T
2 F
(\366) 406.46 396.67 T
0 0 612 792 C
261.7 318.53 272.36 335.05 C
1 F
0 X
0 K
(Q) 262.7 322 T
2 F
(\366) 265.03 324.67 T
0 0 612 792 C
352.83 96.53 363.48 113.05 C
1 F
0 X
0 K
(Q) 353.83 100 T
2 F
(\366) 356.16 102.68 T
0 0 612 792 C
484.59 72.53 495.25 89.05 C
1 F
0 X
0 K
(Q) 485.59 76 T
2 F
(\366) 487.92 78.68 T
0 0 612 792 C
FMENDPAGE
%%EndPage: "21" 20
%%Page: "20" 20
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(20) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
2 F
0 X
(maximally general classi\336ers, together with a residue of low-\336tness slight specializations of the ) 72 712 T
(generals. Figure 4 is a graph of the results.  Note its similarity in form to Figure 3, but note also ) 72 688 T
-0.23 (that the horizontal scale is dif) 72 664 P
-0.23 (ferent by a factor of two.  Broadly) 212.18 664 P
-0.23 (, it appears that the 1) 373.63 664 P
-0.23 (1-multiplexer ) 471.94 664 P
(is approximately 3 times as dif) 72 640 T
(\336cult as the 6-multiplexer) 219.36 640 T
(. For example, the performance reaches ) 342.3 640 T
(100% and system error reaches zero at about 12,000 problems instead of 4,000, the population ) 72 616 T
(peak is at about 600 macroclassi\336ers instead of 200, and the \336nal size is around 300 instead of ) 72 592 T
(100.  ) 72 568 T
-0.27 (This dif) 90 538 P
-0.27 (ference in dif) 127.16 538 P
-0.27 (\336culty would not be suggested by the dif) 190.34 538 P
-0.27 (ference in the search space sizes ) 383.78 538 P
(for the two problems.  The ratio of input space sizes is 2) 72 514 T
13 F
(11) 341.48 518.8 T
2 F
(/2) 351.47 514 T
13 F
(6) 360.8 518.8 T
2 F
( = 32.  The ratio of classi\336er space ) 365.8 514 T
(sizes is 2 x 3) 72 490 T
13 F
(11) 133.3 494.8 T
2 F
(/2 x 3) 143.29 490 T
13 F
(6) 170.61 494.8 T
2 F
( = 243.  At the same time, the ratio of the number of maximal generaliza-) 175.61 490 T
-0.31 (tions in the two problems is 2.  This suggests the hypothesis that the dif) 72 466 P
-0.31 (\336culty of learning a payof) 410.21 466 P
-0.31 (f ) 533.32 466 P
(landscape scales more according to the number of concepts \050generalizations\051 it contains than ex-) 72 442 T
(ponentially with its dimensionality\321at least for systems that can detect and exploit the generali-) 72 418 T
(zations, as XCS is apparently able to do.  W) 72 394 T
(e will test this hypothesis on the 20-multiplexer ) 282.57 394 T
(\050) 72 370 T
1 F
(k) 75.99 370 T
2 F
( = 4\051 in future experiments.) 81.32 370 T
3 F
(4.3  Multi-step envir) 72 334.67 T
(onments) 193.01 334.67 T
2 F
(The multiplexer problems of the previous two sections were) 72 308 T
1 F
( single-step) 360.46 308 T
2 F
( in that external reward ) 415.43 308 T
(was received on every time-step and the environmental input for each time-step was completely ) 72 284 T
(independent of that for the prior time-step.  Problems involving categorization of data examples ) 72 260 T
(are typically single-step, since a decision is made, and reinforcement as to the quality of the deci-) 72 236 T
-0.57 (sion is received, in a single time-step, and the examples to be categorized are usually independent.  ) 72 212 P
(In a) 72 188 T
1 F
( sequential) 90.31 188 T
2 F
(, or) 142.62 188 T
1 F
( multi-step) 158.6 188 T
2 F
( problem, reward may occur \050though not necessarily\051 on any time-) 209.58 188 T
(step, and the input on a time-step is dependent on at least the prior input and the system\325) 72 164 T
(s last ac-) 495.07 164 T
-0.07 (tion.  A major research use of sequential problems is to model, in part, the adaptive interaction of ) 72 140 P
(a system such as an animal or robot with its environment.  In this simpli\336ed view) 72 116 T
(, the system ) 460.99 116 T
(seeks to get as much reward as possible, and must learn associations between environmental in-) 72 92 T
FMENDPAGE
%%EndPage: "20" 19
%%Page: "19" 19
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(19) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 360 R
V
2 F
0 X
(range.) 72 352 T
(The system error falls to zero at about the point the performance reaches 100%.  Zero error ) 90 322 T
(means that the X ) 72 298 T
4 F
(x) 155.94 298 T
2 F
( A => P map is both complete and highly accurate.  The population size curve ) 161.94 298 T
(shows the change in the number of macroclassi\336ers, which grows from zero, then settles back to ) 72 274 T
(about half its peak value.  Informal observation suggests that the size grows until the system has ) 72 250 T
-0.24 (found accurate, though still fairly specialized, classi\336ers for all parts of its map, then \322condenses\323 ) 72 226 P
(as the population \336nds maximally general classi\336ers and eliminates many of the specialists.) 72 202 T
1 F
(4.2.2  The 1) 72 168 T
(1-multiplexer) 128.08 168 T
2 F
(A similar experiment was done using the 1) 72 142 T
(1-multiplexer function \050) 277.09 142 T
1 F
(l) 392.34 142 T
2 F
(=1) 395.68 142 T
(1\051. Because the 1) 407.99 142 T
(1-multi-) 490.15 142 T
-0.41 (plexer has 32 maximally general covering classi\336ers, the landscape was designed with 32  payof) 72 118 P
-0.41 (fs ) 528.75 118 P
(instead of 16. As in Figure 2, the population evolved to contain a complete set of high-\336tness ) 72 94 T
72 378 540 720 C
72 378 540 720 R
7 X
0 K
V
0 0 0 387 246.5 681.12 433.84 -18 385.16 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 0 387.000000 246.500000
%%Creator: TempleGraph 2.4, Origin: /home/wilson@smith
%%CreationDate: Tue Apr 25 12:17:55 1995
%%EndComments
%%DocumentFonts: Times-Roman

/reencodedict 12 dict def
/ReEncode
 { reencodedict begin
  /newcodesandnames exch def
  /newfontname exch def
  /basefontname exch def
  /basefontdict basefontname findfont def
  /newfont basefontdict maxlength dict def
  basefontdict
   { exch dup /FID ne
    { dup /Encoding eq
     { exch dup length array copy newfont 3 1 roll put }
     { exch newfont 3 1 roll put }
    ifelse }
    { pop pop }
   ifelse
  } forall
 newfont /FontName newfontname put
  0 1 newcodesandnames length 1 sub
  { dup newfont /Encoding get 3 1 roll newcodesandnames exch get put}
  for
 newfontname newfont definefont pop
 end
} def


/ExtEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quoteright /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /quoteleft /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quotesingle /grave /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def

/Times-Roman /Times-Roman-Ext ExtEncoding ReEncode
0. setgray
0 246.000000 translate
0.500000 -0.500000 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
328 385 moveto
1 -1 scale
(Problems \(1000s\)) show
1 -1 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
199 382 moveto
1 setlinewidth
newpath
500 345 moveto
500 139 lineto
253 139 lineto
253 345 lineto
500 345 lineto
closepath
stroke
gsave
newpath
253 345 moveto
253 139 lineto
500 139 lineto
500 345 lineto
253 345 moveto
clip
[] 0 setdash
1 setlinewidth
newpath
254.235 227.378 moveto
255.47 230.052 lineto
256.705 229.228 lineto
257.94 227.168 lineto
259.175 237.468 lineto
260.41 219.752 lineto
261.645 225.52 lineto
262.88 225.108 lineto
264.115 223.048 lineto
265.35 222.224 lineto
266.585 222.636 lineto
267.82 217.28 lineto
269.055 218.516 lineto
270.29 211.1 lineto
271.525 213.16 lineto
272.76 206.568 lineto
273.995 202.448 lineto
275.23 201.624 lineto
276.465 200.8 lineto
277.7 205.744 lineto
278.935 203.684 lineto
280.17 196.268 lineto
281.405 199.564 lineto
282.64 201.624 lineto
283.875 201.212 lineto
285.11 195.444 lineto
286.345 195.444 lineto
287.58 197.916 lineto
288.815 193.796 lineto
290.05 197.092 lineto
291.285 194.62 lineto
292.52 198.328 lineto
293.755 197.092 lineto
294.99 189.676 lineto
296.225 187.204 lineto
297.46 188.44 lineto
298.695 187.204 lineto
299.93 183.908 lineto
301.165 178.964 lineto
302.4 182.26 lineto
303.635 178.14 lineto
304.87 184.32 lineto
306.105 190.088 lineto
307.34 181.848 lineto
308.575 176.08 lineto
309.81 174.02 lineto
311.045 172.372 lineto
312.28 180.2 lineto
313.515 177.316 lineto
314.75 178.964 lineto
315.985 180.2 lineto
317.22 181.848 lineto
318.455 175.668 lineto
319.69 175.668 lineto
320.925 171.136 lineto
322.16 169.9 lineto
323.395 169.9 lineto
324.63 165.78 lineto
325.865 167.016 lineto
327.1 166.604 lineto
328.335 170.312 lineto
329.57 171.548 lineto
330.805 166.192 lineto
332.04 166.192 lineto
333.275 170.724 lineto
334.51 164.956 lineto
335.745 167.84 lineto
336.98 157.128 lineto
338.215 161.248 lineto
339.45 157.952 lineto
340.685 154.656 lineto
341.92 152.596 lineto
343.155 155.892 lineto
344.39 158.364 lineto
345.625 157.54 lineto
346.86 158.364 lineto
348.095 157.128 lineto
349.33 155.48 lineto
350.565 152.184 lineto
351.8 151.36 lineto
353.035 153.008 lineto
354.27 148.888 lineto
355.505 153.832 lineto
356.74 148.476 lineto
357.975 150.124 lineto
359.21 149.712 lineto
360.445 147.24 lineto
361.68 150.124 lineto
362.915 148.888 lineto
364.15 146.828 lineto
365.385 148.064 lineto
366.62 146.416 lineto
367.855 144.768 lineto
369.09 150.536 lineto
370.325 146.416 lineto
371.56 145.18 lineto
372.795 144.768 lineto
374.03 143.944 lineto
375.265 145.592 lineto
376.5 144.356 lineto
377.735 142.296 lineto
378.97 143.12 lineto
380.205 144.356 lineto
381.44 145.18 lineto
382.675 146.828 lineto
383.91 141.472 lineto
385.145 143.944 lineto
386.38 140.648 lineto
387.615 142.296 lineto
388.85 142.296 lineto
390.085 143.532 lineto
391.32 143.944 lineto
392.555 142.708 lineto
393.79 142.708 lineto
395.025 143.12 lineto
396.26 141.472 lineto
397.495 139.824 lineto
398.73 141.472 lineto
399.965 139.824 lineto
401.2 140.236 lineto
402.435 141.06 lineto
403.67 139 lineto
404.905 140.648 lineto
406.14 140.648 lineto
407.375 140.236 lineto
408.61 141.884 lineto
409.845 141.884 lineto
411.08 139 lineto
412.315 139 lineto
413.55 139 lineto
414.785 139 lineto
416.02 139.412 lineto
417.255 139.824 lineto
418.49 139 lineto
419.725 139 lineto
420.96 139 lineto
422.195 139 lineto
423.43 139 lineto
424.665 140.236 lineto
425.9 139.412 lineto
427.135 139.824 lineto
428.37 140.236 lineto
429.605 139 lineto
430.84 139.824 lineto
432.075 139.824 lineto
433.31 139.412 lineto
434.545 139.824 lineto
435.78 139 lineto
437.015 139.412 lineto
438.25 139 lineto
439.485 139 lineto
440.72 139 lineto
441.955 139 lineto
443.19 139 lineto
444.425 139 lineto
445.66 139.412 lineto
446.895 139 lineto
448.13 139 lineto
449.365 139 lineto
450.6 139 lineto
451.835 139.824 lineto
453.07 139 lineto
454.305 139 lineto
455.54 139 lineto
456.775 139 lineto
458.01 139 lineto
459.245 139 lineto
460.48 139 lineto
461.715 139 lineto
462.95 139 lineto
464.185 139 lineto
465.42 139 lineto
466.655 139 lineto
467.89 139 lineto
469.125 139 lineto
470.36 139 lineto
471.595 139 lineto
472.83 139 lineto
474.065 139 lineto
475.3 139 lineto
476.535 139 lineto
477.77 139 lineto
479.005 139 lineto
480.24 139 lineto
481.475 139 lineto
482.71 139 lineto
483.945 139 lineto
485.18 139 lineto
486.415 139 lineto
487.65 139 lineto
488.885 139 lineto
490.12 139 lineto
491.355 139 lineto
492.59 139 lineto
493.825 139 lineto
495.06 139 lineto
496.295 139 lineto
497.53 139 lineto
498.765 139 lineto
500 139 lineto
stroke
[2] 0 setdash
1 setlinewidth
newpath
254.235 293.417 moveto
255.47 303.141 lineto
256.705 304.71 lineto
257.94 308.432 lineto
259.175 308.422 lineto
260.41 311.22 lineto
261.645 312.66 lineto
262.88 314.252 lineto
264.115 315.974 lineto
265.35 315.853 lineto
266.585 317.766 lineto
267.82 318.899 lineto
269.055 317.812 lineto
270.29 319.873 lineto
271.525 318.391 lineto
272.76 318.013 lineto
273.995 320.011 lineto
275.23 319.018 lineto
276.465 319.583 lineto
277.7 320.255 lineto
278.935 320.743 lineto
280.17 321.939 lineto
281.405 321.26 lineto
282.64 319.137 lineto
283.875 322.239 lineto
285.11 322.582 lineto
286.345 323.14 lineto
287.58 322.37 lineto
288.815 322.948 lineto
290.05 323.903 lineto
291.285 323.896 lineto
292.52 323.664 lineto
293.755 324.534 lineto
294.99 324.746 lineto
296.225 324.586 lineto
297.46 325.415 lineto
298.695 325.575 lineto
299.93 325.832 lineto
301.165 325.643 lineto
302.4 325.294 lineto
303.635 325.532 lineto
304.87 326.408 lineto
306.105 324.811 lineto
307.34 326.27 lineto
308.575 328.017 lineto
309.81 328.928 lineto
311.045 328.22 lineto
312.28 327.281 lineto
313.515 328.234 lineto
314.75 327.252 lineto
315.985 328.842 lineto
317.22 329.925 lineto
318.455 329.101 lineto
319.69 328.804 lineto
320.925 327.02 lineto
322.16 329.357 lineto
323.395 330.733 lineto
324.63 331.086 lineto
325.865 329.88 lineto
327.1 330.757 lineto
328.335 330.214 lineto
329.57 331.187 lineto
330.805 331.223 lineto
332.04 331.195 lineto
333.275 331.402 lineto
334.51 332.111 lineto
335.745 331.642 lineto
336.98 332.741 lineto
338.215 332.167 lineto
339.45 332.448 lineto
340.685 334.359 lineto
341.92 334.583 lineto
343.155 333.842 lineto
344.39 332.734 lineto
345.625 334.426 lineto
346.86 334.705 lineto
348.095 334.811 lineto
349.33 335.732 lineto
350.565 334.737 lineto
351.8 336.447 lineto
353.035 336.991 lineto
354.27 336.823 lineto
355.505 338.047 lineto
356.74 337.77 lineto
357.975 337.155 lineto
359.21 337.366 lineto
360.445 338.328 lineto
361.68 338.443 lineto
362.915 338.962 lineto
364.15 339.227 lineto
365.385 339.355 lineto
366.62 339.447 lineto
367.855 339.162 lineto
369.09 339.638 lineto
370.325 339.908 lineto
371.56 339.693 lineto
372.795 340.033 lineto
374.03 340.063 lineto
375.265 340 lineto
376.5 340.72 lineto
377.735 340.672 lineto
378.97 341.056 lineto
380.205 341.366 lineto
381.44 341.489 lineto
382.675 340.34 lineto
383.91 342.1 lineto
385.145 341.353 lineto
386.38 342.694 lineto
387.615 341.797 lineto
388.85 342.124 lineto
390.085 342.221 lineto
391.32 342.15 lineto
392.555 342.248 lineto
393.79 342.255 lineto
395.025 342.754 lineto
396.26 342.904 lineto
397.495 343.084 lineto
398.73 343.365 lineto
399.965 343.229 lineto
401.2 343.51 lineto
402.435 343.432 lineto
403.67 343.563 lineto
404.905 343.78 lineto
406.14 343.79 lineto
407.375 344.033 lineto
408.61 343.435 lineto
409.845 343.313 lineto
411.08 343.934 lineto
412.315 344.056 lineto
413.55 343.936 lineto
414.785 343.976 lineto
416.02 343.696 lineto
417.255 344.113 lineto
418.49 344.191 lineto
419.725 344.17 lineto
420.96 344.064 lineto
422.195 344.13 lineto
423.43 344.168 lineto
424.665 343.554 lineto
425.9 344.215 lineto
427.135 343.912 lineto
428.37 344.117 lineto
429.605 344.257 lineto
430.84 344.267 lineto
432.075 343.965 lineto
433.31 344.397 lineto
434.545 344.425 lineto
435.78 344.203 lineto
437.015 344.218 lineto
438.25 344.38 lineto
439.485 344.293 lineto
440.72 344.385 lineto
441.955 344.419 lineto
443.19 344.388 lineto
444.425 344.45 lineto
445.66 344.535 lineto
446.895 344.499 lineto
448.13 344.476 lineto
449.365 344.491 lineto
450.6 344.306 lineto
451.835 344.234 lineto
453.07 344.53 lineto
454.305 344.611 lineto
455.54 344.598 lineto
456.775 344.628 lineto
458.01 344.715 lineto
459.245 344.648 lineto
460.48 344.665 lineto
461.715 344.65 lineto
462.95 344.719 lineto
464.185 344.664 lineto
465.42 344.726 lineto
466.655 344.705 lineto
467.89 344.665 lineto
469.125 344.676 lineto
470.36 344.689 lineto
471.595 344.662 lineto
472.83 344.786 lineto
474.065 344.655 lineto
475.3 344.67 lineto
476.535 344.676 lineto
477.77 344.621 lineto
479.005 344.688 lineto
480.24 344.666 lineto
481.475 344.635 lineto
482.71 344.577 lineto
483.945 344.666 lineto
485.18 344.606 lineto
486.415 344.666 lineto
487.65 344.633 lineto
488.885 344.585 lineto
490.12 344.665 lineto
491.355 344.723 lineto
492.59 344.745 lineto
493.825 344.76 lineto
495.06 344.651 lineto
496.295 344.67 lineto
497.53 344.691 lineto
498.765 344.643 lineto
500 344.512 lineto
stroke
[6 2] 0 setdash
1 setlinewidth
newpath
254.235 318.241 moveto
255.47 306.045 lineto
256.705 294.798 lineto
257.94 284.003 lineto
259.175 274.63 lineto
260.41 265.566 lineto
261.645 257.677 lineto
262.88 250.796 lineto
264.115 246.367 lineto
265.35 242.989 lineto
266.585 240.125 lineto
267.82 237.468 lineto
269.055 236.15 lineto
270.29 234.151 lineto
271.525 233.327 lineto
272.76 232.442 lineto
273.995 231.473 lineto
275.23 231.37 lineto
276.465 230.299 lineto
277.7 229.805 lineto
278.935 228.322 lineto
280.17 227.724 lineto
281.405 227.765 lineto
282.64 227.518 lineto
283.875 227.209 lineto
285.11 226.756 lineto
286.345 226.035 lineto
287.58 226.076 lineto
288.815 226.344 lineto
290.05 227.23 lineto
291.285 227.621 lineto
292.52 227.312 lineto
293.755 227.724 lineto
294.99 227.168 lineto
296.225 228.095 lineto
297.46 228.074 lineto
298.695 228.692 lineto
299.93 228.795 lineto
301.165 229.022 lineto
302.4 228.713 lineto
303.635 229.31 lineto
304.87 229.187 lineto
306.105 228.486 lineto
307.34 228.631 lineto
308.575 228.96 lineto
309.81 228.837 lineto
311.045 229.022 lineto
312.28 229.455 lineto
313.515 229.908 lineto
314.75 229.805 lineto
315.985 230.155 lineto
317.22 230.052 lineto
318.455 230.752 lineto
319.69 230.897 lineto
320.925 231.37 lineto
322.16 231.803 lineto
323.395 232.38 lineto
324.63 232.812 lineto
325.865 233.781 lineto
327.1 234.316 lineto
328.335 235.223 lineto
329.57 235.799 lineto
330.805 235.902 lineto
332.04 236.335 lineto
333.275 237.427 lineto
334.51 238.148 lineto
335.745 238.601 lineto
336.98 239.404 lineto
338.215 239.404 lineto
339.45 239.198 lineto
340.685 240.187 lineto
341.92 240.62 lineto
343.155 240.929 lineto
344.39 240.702 lineto
345.625 240.558 lineto
346.86 241.403 lineto
348.095 242.021 lineto
349.33 242.968 lineto
350.565 243.71 lineto
351.8 244.081 lineto
353.035 244.225 lineto
354.27 244.843 lineto
355.505 244.884 lineto
356.74 246.079 lineto
357.975 246.511 lineto
359.21 248.077 lineto
360.445 248.695 lineto
361.68 249.025 lineto
362.915 249.437 lineto
364.15 251.002 lineto
365.385 251.764 lineto
366.62 252.382 lineto
367.855 253.845 lineto
369.09 254.278 lineto
370.325 255.72 lineto
371.56 256.873 lineto
372.795 257.059 lineto
374.03 258.006 lineto
375.265 258.336 lineto
376.5 259.016 lineto
377.735 259.86 lineto
378.97 260.89 lineto
380.205 262.6 lineto
381.44 262.332 lineto
382.675 262.497 lineto
383.91 262.765 lineto
385.145 263.795 lineto
386.38 264.001 lineto
387.615 264.495 lineto
388.85 264.928 lineto
390.085 265.34 lineto
391.32 265.505 lineto
392.555 265.299 lineto
393.79 265.69 lineto
395.025 265.834 lineto
396.26 266.72 lineto
397.495 267.111 lineto
398.73 268.162 lineto
399.965 268.265 lineto
401.2 268.574 lineto
402.435 268.842 lineto
403.67 269.295 lineto
404.905 269.233 lineto
406.14 269.542 lineto
407.375 270.037 lineto
408.61 271.149 lineto
409.845 271.602 lineto
411.08 272.117 lineto
412.315 273.188 lineto
413.55 273.333 lineto
414.785 274.321 lineto
416.02 274.033 lineto
417.255 274.363 lineto
418.49 274.63 lineto
419.725 275.187 lineto
420.96 275.64 lineto
422.195 275.681 lineto
423.43 275.331 lineto
424.665 276.072 lineto
425.9 276.505 lineto
427.135 276.402 lineto
428.37 277.267 lineto
429.605 277.762 lineto
430.84 277.102 lineto
432.075 277.617 lineto
433.31 277.782 lineto
434.545 276.979 lineto
435.78 277.638 lineto
437.015 277.947 lineto
438.25 278.338 lineto
439.485 278.565 lineto
440.72 278.647 lineto
441.955 278.771 lineto
443.19 278.441 lineto
444.425 278.215 lineto
445.66 278.421 lineto
446.895 278.503 lineto
448.13 278.338 lineto
449.365 278.153 lineto
450.6 277.617 lineto
451.835 277.803 lineto
453.07 278.812 lineto
454.305 278.338 lineto
455.54 277.844 lineto
456.775 278.029 lineto
458.01 277.535 lineto
459.245 278.05 lineto
460.48 277.7 lineto
461.715 277.267 lineto
462.95 276.917 lineto
464.185 277.164 lineto
465.42 277.288 lineto
466.655 277.617 lineto
467.89 277.535 lineto
469.125 277.144 lineto
470.36 277.082 lineto
471.595 277.885 lineto
472.83 277.968 lineto
474.065 278.071 lineto
475.3 278.4 lineto
476.535 278.812 lineto
477.77 279.41 lineto
479.005 280.069 lineto
480.24 279.883 lineto
481.475 280.048 lineto
482.71 280.316 lineto
483.945 279.904 lineto
485.18 280.275 lineto
486.415 279.78 lineto
487.65 279.43 lineto
488.885 280.089 lineto
490.12 279.945 lineto
491.355 280.419 lineto
492.59 280.254 lineto
493.825 279.616 lineto
495.06 280.089 lineto
496.295 279.595 lineto
497.53 280.419 lineto
498.765 280.275 lineto
500 280.089 lineto
stroke
grestore
1 setlinewidth
[] 0 setdash
newpath
253 345 moveto
500 345 lineto
stroke
[] 0 setdash
.5 setlinewidth
newpath
253 345 moveto
253 339 lineto
stroke
newpath
302.4 345 moveto
302.4 339 lineto
stroke
newpath
351.8 345 moveto
351.8 339 lineto
stroke
newpath
401.2 345 moveto
401.2 339 lineto
stroke
newpath
450.6 345 moveto
450.6 339 lineto
stroke
newpath
500 345 moveto
500 339 lineto
stroke
newpath
253 345 moveto
253 339 lineto
stroke
newpath
302.4 345 moveto
302.4 339 lineto
stroke
newpath
351.8 345 moveto
351.8 339 lineto
stroke
newpath
401.2 345 moveto
401.2 339 lineto
stroke
newpath
450.6 345 moveto
450.6 339 lineto
stroke
newpath
500 345 moveto
500 339 lineto
stroke
newpath
253 139 moveto
253 145 lineto
stroke
newpath
302.4 139 moveto
302.4 145 lineto
stroke
newpath
351.8 139 moveto
351.8 145 lineto
stroke
newpath
401.2 139 moveto
401.2 145 lineto
stroke
newpath
450.6 139 moveto
450.6 145 lineto
stroke
newpath
500 139 moveto
500 145 lineto
stroke
newpath
253 345 moveto
253 341 lineto
stroke
newpath
277.7 345 moveto
277.7 341 lineto
stroke
newpath
302.4 345 moveto
302.4 341 lineto
stroke
newpath
253 345 moveto
253 341 lineto
stroke
newpath
277.7 345 moveto
277.7 341 lineto
stroke
newpath
302.4 345 moveto
302.4 341 lineto
stroke
newpath
253 139 moveto
253 143 lineto
stroke
newpath
277.7 139 moveto
277.7 143 lineto
stroke
newpath
302.4 139 moveto
302.4 143 lineto
stroke
newpath
302.4 345 moveto
302.4 341 lineto
stroke
newpath
327.1 345 moveto
327.1 341 lineto
stroke
newpath
351.8 345 moveto
351.8 341 lineto
stroke
newpath
302.4 345 moveto
302.4 341 lineto
stroke
newpath
327.1 345 moveto
327.1 341 lineto
stroke
newpath
351.8 345 moveto
351.8 341 lineto
stroke
newpath
302.4 139 moveto
302.4 143 lineto
stroke
newpath
327.1 139 moveto
327.1 143 lineto
stroke
newpath
351.8 139 moveto
351.8 143 lineto
stroke
newpath
351.8 345 moveto
351.8 341 lineto
stroke
newpath
376.5 345 moveto
376.5 341 lineto
stroke
newpath
401.2 345 moveto
401.2 341 lineto
stroke
newpath
351.8 345 moveto
351.8 341 lineto
stroke
newpath
376.5 345 moveto
376.5 341 lineto
stroke
newpath
401.2 345 moveto
401.2 341 lineto
stroke
newpath
351.8 139 moveto
351.8 143 lineto
stroke
newpath
376.5 139 moveto
376.5 143 lineto
stroke
newpath
401.2 139 moveto
401.2 143 lineto
stroke
newpath
401.2 345 moveto
401.2 341 lineto
stroke
newpath
425.9 345 moveto
425.9 341 lineto
stroke
newpath
450.6 345 moveto
450.6 341 lineto
stroke
newpath
401.2 345 moveto
401.2 341 lineto
stroke
newpath
425.9 345 moveto
425.9 341 lineto
stroke
newpath
450.6 345 moveto
450.6 341 lineto
stroke
newpath
401.2 139 moveto
401.2 143 lineto
stroke
newpath
425.9 139 moveto
425.9 143 lineto
stroke
newpath
450.6 139 moveto
450.6 143 lineto
stroke
newpath
450.6 345 moveto
450.6 341 lineto
stroke
newpath
475.3 345 moveto
475.3 341 lineto
stroke
newpath
500 345 moveto
500 341 lineto
stroke
newpath
450.6 345 moveto
450.6 341 lineto
stroke
newpath
475.3 345 moveto
475.3 341 lineto
stroke
newpath
500 345 moveto
500 341 lineto
stroke
newpath
450.6 139 moveto
450.6 143 lineto
stroke
newpath
475.3 139 moveto
475.3 143 lineto
stroke
newpath
500 139 moveto
500 143 lineto
stroke
1 setlinewidth
[] 0 setdash
newpath
253 345 moveto
253 139 lineto
stroke
[] 0 setdash
.5 setlinewidth
newpath
253 345 moveto
259 345 lineto
stroke
newpath
253 303.8 moveto
259 303.8 lineto
stroke
newpath
253 262.6 moveto
259 262.6 lineto
stroke
newpath
253 221.4 moveto
259 221.4 lineto
stroke
newpath
253 180.2 moveto
259 180.2 lineto
stroke
newpath
253 139 moveto
259 139 lineto
stroke
newpath
253 345 moveto
259 345 lineto
stroke
newpath
253 303.8 moveto
259 303.8 lineto
stroke
newpath
253 262.6 moveto
259 262.6 lineto
stroke
newpath
253 221.4 moveto
259 221.4 lineto
stroke
newpath
253 180.2 moveto
259 180.2 lineto
stroke
newpath
253 139 moveto
259 139 lineto
stroke
newpath
500 345 moveto
494 345 lineto
stroke
newpath
500 303.8 moveto
494 303.8 lineto
stroke
newpath
500 262.6 moveto
494 262.6 lineto
stroke
newpath
500 221.4 moveto
494 221.4 lineto
stroke
newpath
500 180.2 moveto
494 180.2 lineto
stroke
newpath
500 139 moveto
494 139 lineto
stroke
newpath
253 345 moveto
257 345 lineto
stroke
newpath
253 324.4 moveto
257 324.4 lineto
stroke
newpath
253 303.8 moveto
257 303.8 lineto
stroke
newpath
253 345 moveto
257 345 lineto
stroke
newpath
253 324.4 moveto
257 324.4 lineto
stroke
newpath
253 303.8 moveto
257 303.8 lineto
stroke
newpath
500 345 moveto
496 345 lineto
stroke
newpath
500 324.4 moveto
496 324.4 lineto
stroke
newpath
500 303.8 moveto
496 303.8 lineto
stroke
newpath
253 303.8 moveto
257 303.8 lineto
stroke
newpath
253 283.2 moveto
257 283.2 lineto
stroke
newpath
253 262.6 moveto
257 262.6 lineto
stroke
newpath
253 303.8 moveto
257 303.8 lineto
stroke
newpath
253 283.2 moveto
257 283.2 lineto
stroke
newpath
253 262.6 moveto
257 262.6 lineto
stroke
newpath
500 303.8 moveto
496 303.8 lineto
stroke
newpath
500 283.2 moveto
496 283.2 lineto
stroke
newpath
500 262.6 moveto
496 262.6 lineto
stroke
newpath
253 262.6 moveto
257 262.6 lineto
stroke
newpath
253 242 moveto
257 242 lineto
stroke
newpath
253 221.4 moveto
257 221.4 lineto
stroke
newpath
253 262.6 moveto
257 262.6 lineto
stroke
newpath
253 242 moveto
257 242 lineto
stroke
newpath
253 221.4 moveto
257 221.4 lineto
stroke
newpath
500 262.6 moveto
496 262.6 lineto
stroke
newpath
500 242 moveto
496 242 lineto
stroke
newpath
500 221.4 moveto
496 221.4 lineto
stroke
newpath
253 221.4 moveto
257 221.4 lineto
stroke
newpath
253 200.8 moveto
257 200.8 lineto
stroke
newpath
253 180.2 moveto
257 180.2 lineto
stroke
newpath
253 221.4 moveto
257 221.4 lineto
stroke
newpath
253 200.8 moveto
257 200.8 lineto
stroke
newpath
253 180.2 moveto
257 180.2 lineto
stroke
newpath
500 221.4 moveto
496 221.4 lineto
stroke
newpath
500 200.8 moveto
496 200.8 lineto
stroke
newpath
500 180.2 moveto
496 180.2 lineto
stroke
newpath
253 180.2 moveto
257 180.2 lineto
stroke
newpath
253 159.6 moveto
257 159.6 lineto
stroke
newpath
253 139 moveto
257 139 lineto
stroke
newpath
253 180.2 moveto
257 180.2 lineto
stroke
newpath
253 159.6 moveto
257 159.6 lineto
stroke
newpath
253 139 moveto
257 139 lineto
stroke
newpath
500 180.2 moveto
496 180.2 lineto
stroke
newpath
500 159.6 moveto
496 159.6 lineto
stroke
newpath
500 139 moveto
496 139 lineto
stroke
249 365 moveto
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
(0)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
298.4 365 moveto
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
(4)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
347.8 365 moveto
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
(8)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
393.2 365 moveto
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
(12)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
442.6 365 moveto
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
(16)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
492 365 moveto
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
(20)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
221 350 moveto
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
(0.0)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
221 308.8 moveto
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
(0.2)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
221 267.6 moveto
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
(0.4)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
221 226.4 moveto
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
(0.6)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
221 185.2 moveto
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
(0.8)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
221 144 moveto
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
(1.0)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [20.000000 0 0 20.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
newpath
417 228 moveto
417 172 lineto
515 172 lineto
515 228 lineto
417 228 lineto
closepath
currentgray 1.0 setgray
fill
setgray
[] 0 setdash
1 setlinewidth
newpath
515 228 moveto
515 172 lineto
417 172 lineto
417 228 lineto
515 228 lineto
closepath
stroke
.686747 setlinewidth
[] 0 setdash
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
newpath
419 191 moveto
0
(Performance) stringwidth pop add
419 add
191 lineto
stroke
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
419 186 moveto
1 -1 scale
(Performance) show
1 -1 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
.686747 setlinewidth
[2] 0 setdash
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
newpath
419 208 moveto
0
(System error) stringwidth pop add
419 add
208 lineto
stroke
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
419 203 moveto
1 -1 scale
(System error) show
1 -1 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
.686747 setlinewidth
[6 2] 0 setdash
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
newpath
419 225 moveto
0
(Pop. size \(/1000\)) stringwidth pop add
419 add
225 lineto
stroke
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
419 220 moveto
1 -1 scale
(Pop. size \(/1000\)) show
1 -1 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
showpage

%%EndDocument
FMENDEPSF
0 0 612 792 C
108 387 504 441 R
7 X
0 K
V
12 F
0 X
-0.22 (Figure 4) 108 433.67 P
8 F
-0.22 (.) 147.15 433.67 P
12 F
-0.22 (  ) 149.9 433.67 P
8 F
-0.22 ( Results in an 11-multiplexer experiment.  Curves have same meaning as in Fig.) 154.96 433.67 P
(3.  Parameters the same as in Figure 3, except ) 108 420.67 T
14 F
(N) 311.82 420.67 T
8 F
( = 800.   Curves are averages of 10 runs. ) 319.15 420.67 T
FMENDPAGE
%%EndPage: "19" 18
%%Page: "18" 18
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(18) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 360 R
V
2 F
0 X
(mally general classi\336ers that drive out all other classi\336ers except for a few that are slight special-) 72 352 T
(izations of the generals.) 72 328 T
-0.04 (Figure 3 shows performance, system error) 90 298 P
-0.04 (, and macroclassi\336er population size averaged over ) 291.82 298 P
-0.01 (10 runs of the experiment.  ) 72 274 P
1 F
-0.01 (Performance) 204.16 274 P
2 F
-0.01 ( is the fraction of the last 50 exploit trials that were cor-) 266.78 274 P
-0.21 (rect.  ) 72 250 P
1 F
-0.21 (System err) 98.56 250 P
-0.21 (or) 148.87 250 P
2 F
-0.21 ( is the absolute dif) 159.53 250 P
-0.21 (ference between the system prediction \050Sect. 3.1\051 for the cho-) 246.44 250 P
(sen action and the actual external payof) 72 226 T
(f, divided by the total payof) 261.63 226 T
(f range \0501000\051 and averaged ) 394.66 226 T
(over the last 50 exploit trials.  ) 72 202 T
1 F
(Population size) 217.91 202 T
2 F
( is ) 292.21 202 T
1 F
(M) 306.21 202 T
2 F
(, the number of macroclassi\336ers.  Note that ) 316.2 202 T
(since XCS was in pure explore during about half of the total number of trials, the graph indicates ) 72 178 T
(that essentially 100% performance was reached within approximately 2000 explore trials.  Since ) 72 154 T
-0.21 (the system only adjusted parameters and performed the GA during explore trials, one can say that ) 72 130 P
(XCS \322learned the 6-multiplexer\323 within about 2000 explore trials, and in a situation where the ) 72 106 T
(payof) 72 82 T
(f dif) 99.09 82 T
(ference between correct and incorrect dif) 119.19 82 T
(fered by just a fraction of the total payof) 315.78 82 T
(f ) 509.41 82 T
72 378 540 720 C
72 378 540 720 R
7 X
0 K
V
0 0 0 387 246.5 681.12 433.84 -18 387 FMBEGINEPSF
%%BeginDocument: <inline>
%!PS-Adobe-2.0 EPSF-1.2
%%BoundingBox: 0 0 387.000000 246.500000
%%Creator: TempleGraph 2.4, Origin: /home/wilson@smith
%%CreationDate: Tue Apr 25 12:14:06 1995
%%EndComments
%%DocumentFonts: Times-Roman

/reencodedict 12 dict def
/ReEncode
 { reencodedict begin
  /newcodesandnames exch def
  /newfontname exch def
  /basefontname exch def
  /basefontdict basefontname findfont def
  /newfont basefontdict maxlength dict def
  basefontdict
   { exch dup /FID ne
    { dup /Encoding eq
     { exch dup length array copy newfont 3 1 roll put }
     { exch newfont 3 1 roll put }
    ifelse }
    { pop pop }
   ifelse
  } forall
 newfont /FontName newfontname put
  0 1 newcodesandnames length 1 sub
  { dup newfont /Encoding get 3 1 roll newcodesandnames exch get put}
  for
 newfontname newfont definefont pop
 end
} def


/ExtEncoding [
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /space /exclam /quotedbl
/numbersign /dollar /percent /ampersand /quoteright /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon
/less /equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash
/bracketright /asciicircum /underscore /quoteleft /a /b /c /d /e /f /g /h
/i /j /k /l /m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar
/braceright /asciitilde /.notdef /Adieresis /Aring /Ccedilla /Eacute
/Ntilde /Odieresis /Udieresis /aacute /agrave /acircumflex /adieresis
/atilde /aring /ccedilla /eacute /egrave /ecircumflex /edieresis
/iacute /igrave /icircumflex /idieresis /ntilde /oacute /ograve
/ocircumflex /odieresis /otilde /uacute /ugrave /ucircumflex
/udieresis /dagger /.notdef /cent /sterling /section /bullet
/paragraph /germandbls /registered /copyright /trademark /acute
/dieresis /.notdef /AE /Oslash /.notdef /.notdef /.notdef /.notdef
/yen /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/ordfeminine /ordmasculine /.notdef /ae /oslash /questiondown
/exclamdown /logicalnot /.notdef /florin /.notdef /.notdef
/guillemotleft /guillemotright /ellipsis /.notdef /Agrave /Atilde
/Otilde /OE /oe /endash /emdash /quotedblleft /quotedblright
/quotesingle /grave /.notdef /.notdef /ydieresis /Ydieresis
/fraction /currency /guilsinglleft /guilsinglright /fi /fl /daggerdbl
/periodcentered /quotesinglbase /quotedblbase /perthousand
/Acircumflex /Ecircumflex /Aacute /Edieresis /Egrave /Iacute
/Icircumflex /Idieresis /Igrave /Oacute /Ocircumflex /.notdef /Ograve
/Uacute /Ucircumflex /Ugrave /dotlessi /circumflex /tilde /macron
/breve /dotaccent /ring /cedilla /hungarumlaut /ogonek /caron
] def

/Times-Roman /Times-Roman-Ext ExtEncoding ReEncode
0. setgray
0 246.000000 translate
0.500000 -0.500000 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
328 385 moveto
1 -1 scale
(Problems \(1000s\)) show
1 -1 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
199 382 moveto
1 setlinewidth
newpath
500 345 moveto
500 139 lineto
253 139 lineto
253 345 lineto
500 345 lineto
closepath
stroke
gsave
newpath
253 345 moveto
253 139 lineto
500 139 lineto
500 345 lineto
253 345 moveto
clip
[] 0 setdash
1 setlinewidth
newpath
255.47 232.305 moveto
257.94 228.404 lineto
260.41 231.7 lineto
262.88 216.868 lineto
265.35 209.04 lineto
267.82 200.388 lineto
270.29 203.272 lineto
272.76 197.504 lineto
275.23 193.384 lineto
277.7 190.088 lineto
280.17 181.436 lineto
282.64 176.904 lineto
285.11 175.668 lineto
287.58 168.252 lineto
290.05 168.664 lineto
292.52 170.312 lineto
294.99 167.016 lineto
297.46 168.252 lineto
299.93 164.544 lineto
302.4 157.952 lineto
304.87 153.42 lineto
307.34 155.892 lineto
309.81 157.952 lineto
312.28 154.244 lineto
314.75 154.656 lineto
317.22 153.008 lineto
319.69 150.536 lineto
322.16 148.888 lineto
324.63 146.416 lineto
327.1 149.3 lineto
329.57 146.828 lineto
332.04 142.708 lineto
334.51 143.12 lineto
336.98 142.296 lineto
339.45 139.412 lineto
341.92 139.824 lineto
344.39 140.648 lineto
346.86 141.06 lineto
349.33 139.412 lineto
351.8 140.648 lineto
354.27 140.236 lineto
356.74 139.412 lineto
359.21 140.236 lineto
361.68 140.236 lineto
364.15 139.824 lineto
366.62 139.824 lineto
369.09 139.824 lineto
371.56 139.412 lineto
374.03 139 lineto
376.5 139.412 lineto
378.97 139.824 lineto
381.44 139 lineto
383.91 140.236 lineto
386.38 139 lineto
388.85 139 lineto
391.32 139 lineto
393.79 139 lineto
396.26 139 lineto
398.73 139 lineto
401.2 139 lineto
403.67 139 lineto
406.14 139 lineto
408.61 139 lineto
411.08 139 lineto
413.55 139.412 lineto
416.02 139 lineto
418.49 139 lineto
420.96 139.412 lineto
423.43 140.648 lineto
425.9 139.412 lineto
428.37 140.236 lineto
430.84 139 lineto
433.31 139 lineto
435.78 139 lineto
438.25 139 lineto
440.72 139 lineto
443.19 139 lineto
445.66 139 lineto
448.13 139 lineto
450.6 139 lineto
453.07 139 lineto
455.54 139 lineto
458.01 139 lineto
460.48 139 lineto
462.95 139 lineto
465.42 139 lineto
467.89 139 lineto
470.36 139 lineto
472.83 139 lineto
475.3 139 lineto
477.77 139 lineto
480.24 139 lineto
482.71 139 lineto
485.18 139 lineto
487.65 139 lineto
490.12 139 lineto
492.59 139 lineto
495.06 139 lineto
497.53 139 lineto
500 139 lineto
stroke
[2] 0 setdash
1 setlinewidth
newpath
255.47 303.73 moveto
257.94 305.724 lineto
260.41 308.594 lineto
262.88 311.722 lineto
265.35 312.09 lineto
267.82 316.928 lineto
270.29 317.062 lineto
272.76 319.256 lineto
275.23 321.661 lineto
277.7 320.797 lineto
280.17 322.621 lineto
282.64 325.399 lineto
285.11 326.141 lineto
287.58 325.469 lineto
290.05 325.239 lineto
292.52 327.452 lineto
294.99 327.023 lineto
297.46 328.617 lineto
299.93 329.64 lineto
302.4 332 lineto
304.87 333.371 lineto
307.34 330.622 lineto
309.81 332.294 lineto
312.28 333.908 lineto
314.75 334.622 lineto
317.22 334.541 lineto
319.69 335.338 lineto
322.16 335.949 lineto
324.63 336.091 lineto
327.1 337.717 lineto
329.57 338.939 lineto
332.04 339.529 lineto
334.51 340.356 lineto
336.98 340.787 lineto
339.45 341.862 lineto
341.92 342.555 lineto
344.39 342.278 lineto
346.86 342.336 lineto
349.33 342.83 lineto
351.8 343.037 lineto
354.27 343.375 lineto
356.74 343.532 lineto
359.21 343.502 lineto
361.68 343.522 lineto
364.15 344.164 lineto
366.62 344.343 lineto
369.09 344.252 lineto
371.56 344.129 lineto
374.03 344.505 lineto
376.5 344.1 lineto
378.97 344.539 lineto
381.44 344.444 lineto
383.91 344.615 lineto
386.38 344.49 lineto
388.85 344.598 lineto
391.32 344.633 lineto
393.79 344.655 lineto
396.26 344.637 lineto
398.73 344.517 lineto
401.2 344.525 lineto
403.67 344.661 lineto
406.14 344.712 lineto
408.61 344.695 lineto
411.08 344.666 lineto
413.55 344.707 lineto
416.02 344.476 lineto
418.49 344.508 lineto
420.96 344.485 lineto
423.43 344.643 lineto
425.9 344.753 lineto
428.37 344.654 lineto
430.84 344.781 lineto
433.31 344.771 lineto
435.78 344.84 lineto
438.25 344.814 lineto
440.72 344.819 lineto
443.19 344.851 lineto
445.66 344.84 lineto
448.13 344.823 lineto
450.6 344.846 lineto
453.07 344.816 lineto
455.54 344.859 lineto
458.01 344.888 lineto
460.48 344.866 lineto
462.95 344.765 lineto
465.42 344.719 lineto
467.89 344.82 lineto
470.36 344.797 lineto
472.83 344.805 lineto
475.3 344.748 lineto
477.77 344.831 lineto
480.24 344.822 lineto
482.71 344.897 lineto
485.18 344.865 lineto
487.65 344.814 lineto
490.12 344.773 lineto
492.59 344.816 lineto
495.06 344.805 lineto
497.53 344.757 lineto
500 344.729 lineto
stroke
[6 2] 0 setdash
1 setlinewidth
newpath
255.47 339.088 moveto
257.94 335.998 lineto
260.41 332.537 lineto
262.88 329.941 lineto
265.35 327.202 lineto
267.82 324.359 lineto
270.29 321.784 lineto
272.76 319.806 lineto
275.23 317.211 lineto
277.7 315.027 lineto
280.17 313.564 lineto
282.64 312.143 lineto
285.11 310.66 lineto
287.58 309.918 lineto
290.05 308.95 lineto
292.52 308.456 lineto
294.99 307.776 lineto
297.46 306.931 lineto
299.93 306.746 lineto
302.4 306.643 lineto
304.87 306.21 lineto
307.34 306.499 lineto
309.81 306.808 lineto
312.28 306.89 lineto
314.75 307.034 lineto
317.22 306.808 lineto
319.69 306.972 lineto
322.16 307.055 lineto
324.63 307.508 lineto
327.1 307.652 lineto
329.57 307.364 lineto
332.04 308.023 lineto
334.51 308.641 lineto
336.98 308.682 lineto
339.45 309.321 lineto
341.92 310.371 lineto
344.39 310.866 lineto
346.86 311.628 lineto
349.33 312.37 lineto
351.8 312.967 lineto
354.27 313.42 lineto
356.74 313.358 lineto
359.21 314.265 lineto
361.68 314.574 lineto
364.15 315.109 lineto
366.62 315.789 lineto
369.09 316.201 lineto
371.56 317.252 lineto
374.03 317.396 lineto
376.5 318.179 lineto
378.97 318.673 lineto
381.44 319.003 lineto
383.91 319.044 lineto
386.38 319.209 lineto
388.85 320.012 lineto
391.32 320.486 lineto
393.79 321.104 lineto
396.26 320.939 lineto
398.73 321.289 lineto
401.2 321.763 lineto
403.67 321.907 lineto
406.14 321.784 lineto
408.61 321.887 lineto
411.08 322.361 lineto
413.55 322.258 lineto
416.02 322.505 lineto
418.49 322.69 lineto
420.96 322.979 lineto
423.43 322.958 lineto
425.9 323.226 lineto
428.37 323.452 lineto
430.84 323.555 lineto
433.31 323.617 lineto
435.78 323.741 lineto
438.25 323.864 lineto
440.72 323.7 lineto
443.19 323.72 lineto
445.66 323.906 lineto
448.13 323.947 lineto
450.6 324.194 lineto
453.07 324.173 lineto
455.54 324.05 lineto
458.01 324.359 lineto
460.48 324.503 lineto
462.95 324.688 lineto
465.42 324.668 lineto
467.89 324.956 lineto
470.36 324.771 lineto
472.83 324.956 lineto
475.3 324.771 lineto
477.77 325.059 lineto
480.24 325.389 lineto
482.71 325.265 lineto
485.18 325.245 lineto
487.65 325.245 lineto
490.12 325.183 lineto
492.59 325.306 lineto
495.06 325.348 lineto
497.53 325.265 lineto
500 325.203 lineto
stroke
grestore
1 setlinewidth
[] 0 setdash
newpath
253 345 moveto
500 345 lineto
stroke
[] 0 setdash
.5 setlinewidth
newpath
253 345 moveto
253 339 lineto
stroke
newpath
302.4 345 moveto
302.4 339 lineto
stroke
newpath
351.8 345 moveto
351.8 339 lineto
stroke
newpath
401.2 345 moveto
401.2 339 lineto
stroke
newpath
450.6 345 moveto
450.6 339 lineto
stroke
newpath
500 345 moveto
500 339 lineto
stroke
newpath
253 345 moveto
253 339 lineto
stroke
newpath
302.4 345 moveto
302.4 339 lineto
stroke
newpath
351.8 345 moveto
351.8 339 lineto
stroke
newpath
401.2 345 moveto
401.2 339 lineto
stroke
newpath
450.6 345 moveto
450.6 339 lineto
stroke
newpath
500 345 moveto
500 339 lineto
stroke
newpath
253 139 moveto
253 145 lineto
stroke
newpath
302.4 139 moveto
302.4 145 lineto
stroke
newpath
351.8 139 moveto
351.8 145 lineto
stroke
newpath
401.2 139 moveto
401.2 145 lineto
stroke
newpath
450.6 139 moveto
450.6 145 lineto
stroke
newpath
500 139 moveto
500 145 lineto
stroke
newpath
253 345 moveto
253 341 lineto
stroke
newpath
277.7 345 moveto
277.7 341 lineto
stroke
newpath
302.4 345 moveto
302.4 341 lineto
stroke
newpath
253 345 moveto
253 341 lineto
stroke
newpath
277.7 345 moveto
277.7 341 lineto
stroke
newpath
302.4 345 moveto
302.4 341 lineto
stroke
newpath
253 139 moveto
253 143 lineto
stroke
newpath
277.7 139 moveto
277.7 143 lineto
stroke
newpath
302.4 139 moveto
302.4 143 lineto
stroke
newpath
302.4 345 moveto
302.4 341 lineto
stroke
newpath
327.1 345 moveto
327.1 341 lineto
stroke
newpath
351.8 345 moveto
351.8 341 lineto
stroke
newpath
302.4 345 moveto
302.4 341 lineto
stroke
newpath
327.1 345 moveto
327.1 341 lineto
stroke
newpath
351.8 345 moveto
351.8 341 lineto
stroke
newpath
302.4 139 moveto
302.4 143 lineto
stroke
newpath
327.1 139 moveto
327.1 143 lineto
stroke
newpath
351.8 139 moveto
351.8 143 lineto
stroke
newpath
351.8 345 moveto
351.8 341 lineto
stroke
newpath
376.5 345 moveto
376.5 341 lineto
stroke
newpath
401.2 345 moveto
401.2 341 lineto
stroke
newpath
351.8 345 moveto
351.8 341 lineto
stroke
newpath
376.5 345 moveto
376.5 341 lineto
stroke
newpath
401.2 345 moveto
401.2 341 lineto
stroke
newpath
351.8 139 moveto
351.8 143 lineto
stroke
newpath
376.5 139 moveto
376.5 143 lineto
stroke
newpath
401.2 139 moveto
401.2 143 lineto
stroke
newpath
401.2 345 moveto
401.2 341 lineto
stroke
newpath
425.9 345 moveto
425.9 341 lineto
stroke
newpath
450.6 345 moveto
450.6 341 lineto
stroke
newpath
401.2 345 moveto
401.2 341 lineto
stroke
newpath
425.9 345 moveto
425.9 341 lineto
stroke
newpath
450.6 345 moveto
450.6 341 lineto
stroke
newpath
401.2 139 moveto
401.2 143 lineto
stroke
newpath
425.9 139 moveto
425.9 143 lineto
stroke
newpath
450.6 139 moveto
450.6 143 lineto
stroke
newpath
450.6 345 moveto
450.6 341 lineto
stroke
newpath
475.3 345 moveto
475.3 341 lineto
stroke
newpath
500 345 moveto
500 341 lineto
stroke
newpath
450.6 345 moveto
450.6 341 lineto
stroke
newpath
475.3 345 moveto
475.3 341 lineto
stroke
newpath
500 345 moveto
500 341 lineto
stroke
newpath
450.6 139 moveto
450.6 143 lineto
stroke
newpath
475.3 139 moveto
475.3 143 lineto
stroke
newpath
500 139 moveto
500 143 lineto
stroke
1 setlinewidth
[] 0 setdash
newpath
253 345 moveto
253 139 lineto
stroke
[] 0 setdash
.5 setlinewidth
newpath
253 345 moveto
259 345 lineto
stroke
newpath
253 303.8 moveto
259 303.8 lineto
stroke
newpath
253 262.6 moveto
259 262.6 lineto
stroke
newpath
253 221.4 moveto
259 221.4 lineto
stroke
newpath
253 180.2 moveto
259 180.2 lineto
stroke
newpath
253 139 moveto
259 139 lineto
stroke
newpath
253 345 moveto
259 345 lineto
stroke
newpath
253 303.8 moveto
259 303.8 lineto
stroke
newpath
253 262.6 moveto
259 262.6 lineto
stroke
newpath
253 221.4 moveto
259 221.4 lineto
stroke
newpath
253 180.2 moveto
259 180.2 lineto
stroke
newpath
253 139 moveto
259 139 lineto
stroke
newpath
500 345 moveto
494 345 lineto
stroke
newpath
500 303.8 moveto
494 303.8 lineto
stroke
newpath
500 262.6 moveto
494 262.6 lineto
stroke
newpath
500 221.4 moveto
494 221.4 lineto
stroke
newpath
500 180.2 moveto
494 180.2 lineto
stroke
newpath
500 139 moveto
494 139 lineto
stroke
newpath
253 345 moveto
257 345 lineto
stroke
newpath
253 324.4 moveto
257 324.4 lineto
stroke
newpath
253 303.8 moveto
257 303.8 lineto
stroke
newpath
253 345 moveto
257 345 lineto
stroke
newpath
253 324.4 moveto
257 324.4 lineto
stroke
newpath
253 303.8 moveto
257 303.8 lineto
stroke
newpath
500 345 moveto
496 345 lineto
stroke
newpath
500 324.4 moveto
496 324.4 lineto
stroke
newpath
500 303.8 moveto
496 303.8 lineto
stroke
newpath
253 303.8 moveto
257 303.8 lineto
stroke
newpath
253 283.2 moveto
257 283.2 lineto
stroke
newpath
253 262.6 moveto
257 262.6 lineto
stroke
newpath
253 303.8 moveto
257 303.8 lineto
stroke
newpath
253 283.2 moveto
257 283.2 lineto
stroke
newpath
253 262.6 moveto
257 262.6 lineto
stroke
newpath
500 303.8 moveto
496 303.8 lineto
stroke
newpath
500 283.2 moveto
496 283.2 lineto
stroke
newpath
500 262.6 moveto
496 262.6 lineto
stroke
newpath
253 262.6 moveto
257 262.6 lineto
stroke
newpath
253 242 moveto
257 242 lineto
stroke
newpath
253 221.4 moveto
257 221.4 lineto
stroke
newpath
253 262.6 moveto
257 262.6 lineto
stroke
newpath
253 242 moveto
257 242 lineto
stroke
newpath
253 221.4 moveto
257 221.4 lineto
stroke
newpath
500 262.6 moveto
496 262.6 lineto
stroke
newpath
500 242 moveto
496 242 lineto
stroke
newpath
500 221.4 moveto
496 221.4 lineto
stroke
newpath
253 221.4 moveto
257 221.4 lineto
stroke
newpath
253 200.8 moveto
257 200.8 lineto
stroke
newpath
253 180.2 moveto
257 180.2 lineto
stroke
newpath
253 221.4 moveto
257 221.4 lineto
stroke
newpath
253 200.8 moveto
257 200.8 lineto
stroke
newpath
253 180.2 moveto
257 180.2 lineto
stroke
newpath
500 221.4 moveto
496 221.4 lineto
stroke
newpath
500 200.8 moveto
496 200.8 lineto
stroke
newpath
500 180.2 moveto
496 180.2 lineto
stroke
newpath
253 180.2 moveto
257 180.2 lineto
stroke
newpath
253 159.6 moveto
257 159.6 lineto
stroke
newpath
253 139 moveto
257 139 lineto
stroke
newpath
253 180.2 moveto
257 180.2 lineto
stroke
newpath
253 159.6 moveto
257 159.6 lineto
stroke
newpath
253 139 moveto
257 139 lineto
stroke
newpath
500 180.2 moveto
496 180.2 lineto
stroke
newpath
500 159.6 moveto
496 159.6 lineto
stroke
newpath
500 139 moveto
496 139 lineto
stroke
249 365 moveto
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
(0)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
298.4 365 moveto
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
(2)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
347.8 365 moveto
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
(4)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
397.2 365 moveto
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
(6)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
446.6 365 moveto
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
(8)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
492 365 moveto
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
(10)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
221 350 moveto
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
(0.0)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
221 308.8 moveto
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
(0.2)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
221 267.6 moveto
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
(0.4)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
221 226.4 moveto
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
(0.6)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
221 185.2 moveto
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
(0.8)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
221 144 moveto
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
(1.0)
dup
1 -1 scale
currentpoint
currentgray 1.0 setgray
4 -1 roll
 true charpath
flattenpath
pathbbox
2 copy moveto
3 index exch lineto
1 index 4 2 roll
lineto lineto
closepath fill
setgray
moveto show
1 -1 scale
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [16.000000 0 0 16.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [20.000000 0 0 20.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
newpath
417 228 moveto
417 172 lineto
515 172 lineto
515 228 lineto
417 228 lineto
closepath
currentgray 1.0 setgray
fill
setgray
[] 0 setdash
1 setlinewidth
newpath
515 228 moveto
515 172 lineto
417 172 lineto
417 228 lineto
515 228 lineto
closepath
stroke
.686747 setlinewidth
[] 0 setdash
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
newpath
419 191 moveto
0
(Performance) stringwidth pop add
419 add
191 lineto
stroke
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
419 186 moveto
1 -1 scale
(Performance) show
1 -1 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
.686747 setlinewidth
[2] 0 setdash
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
newpath
419 208 moveto
0
(System error) stringwidth pop add
419 add
208 lineto
stroke
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
419 203 moveto
1 -1 scale
(System error) show
1 -1 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
.686747 setlinewidth
[6 2] 0 setdash
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
newpath
419 225 moveto
0
(Pop. size \(/1000\)) stringwidth pop add
419 add
225 lineto
stroke
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
419 220 moveto
1 -1 scale
(Pop. size \(/1000\)) show
1 -1 scale
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
/Times-Roman-Ext findfont [14.000000 0 0 14.000000 0 0] makefont setfont
showpage

%%EndDocument
FMENDEPSF
108 387 504 450 R
V
12 F
0 X
0.23 (Figure 3) 108 442.67 P
8 F
0.23 (.) 147.6 442.67 P
12 F
0.23 (  ) 150.35 442.67 P
8 F
0.23 ( Results in a 6-multiplexer experiment.  Solid curve: Performance, the fraction) 156.31 442.67 P
-0.12 (of last 50 exploit problems correct. Dotted curve: System error as a fraction of total payoff) 108 429.67 P
-0.36 (range. Dashed curve: Population size in macroclassifiers \050divided by 1000\051.  Parameters: ) 108 416.67 P
14 F
-0.36 (N) 496.67 416.67 P
8 F
0.04 (= 400, ) 108 403.67 P
7 F
0.04 (b) 138.99 403.67 P
8 F
0.04 ( = 0.2, ) 145.58 403.67 P
7 F
0.04 (g) 176.61 403.67 P
8 F
0.04 ( = 0.71, ) 181.54 403.67 P
7 F
0.04 (q) 218.07 403.67 P
8 F
0.04 ( = 25, ) 224.32 403.67 P
7 F
0.04 (e) 252.61 403.67 P
15 F
0.03 (0) 257.87 400.92 P
8 F
0.04 ( = 0.01, ) 262.37 403.67 P
7 F
0.04 (a) 298.89 403.67 P
8 F
0.04 ( = 0.1, ) 306.46 403.67 P
7 F
0.04 (c) 337.5 403.67 P
8 F
0.04 ( = 0.8, ) 344.08 403.67 P
7 F
0.04 (m) 375.11 403.67 P
8 F
0.04 ( = 0.04, ) 382.02 403.67 P
7 F
0.04 (d) 418.55 403.67 P
8 F
0.04 ( = 0.1, ) 424.48 403.67 P
7 F
0.04 (f) 455.51 403.67 P
8 F
0.04 ( = 0.5) 461.76 403.67 P
14 F
0.04 (, P) 487.26 403.67 P
15 F
0.03 (#) 499.51 400.92 P
8 F
(= 0.33, ) 108 390.67 T
14 F
(p) 141.66 390.67 T
15 F
(I ) 147.15 387.92 T
8 F
(= 10.0, ) 152.4 390.67 T
7 F
(e) 186.06 390.67 T
15 F
(I) 191.32 387.92 T
8 F
( = 0.0, ) 194.32 390.67 T
14 F
(F) 225.23 390.67 T
15 F
(I) 231.94 387.92 T
8 F
( = 10.0,.   Curves are averages of 10 runs. ) 234.94 390.67 T
0 0 612 792 C
FMENDPAGE
%%EndPage: "18" 17
%%Page: "17" 17
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(17) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 270 R
V
2 F
0 X
(are its condition, action, prediction ) 72 262 T
1 F
(p) 242.22 262 T
2 F
(, prediction error ) 248.22 262 T
7 F
(e) 332.15 262 T
2 F
(, \336tness ) 337.41 262 T
1 F
(F) 377.06 262 T
2 F
(, and numerosity ) 383.43 262 T
1 F
(n) 466.71 262 T
2 F
(. The predic-) 472.71 262 T
(tion error is expressed as a fraction of the total payof) 72 238 T
(f range, 1000.  The \336tness is multiplied by ) 324.92 238 T
(the payof) 72 214 T
(f range. The list is in ascending prediction order) 116.75 214 T
(.  ) 346.25 214 T
(Notice that high \336tness, high numerosity macroclassi\336ers correspond to maximal generaliza-) 90 184 T
-0.04 (tions.  Note also that classi\336ers with non-zero errors have low \336tness\321so they contribute little in ) 72 160 P
(the prediction array calculation.  The remaining 69 macroclassi\336ers in [P] exhibit the same pat-) 72 136 T
(tern, with a dominant macroclassi\336er for each of the 16 levels of the payof) 72 112 T
(f landscape.  Thus in ) 429.51 112 T
-0.03 (this experiment\321Fig. 2 is typical of all runs\321 XCS not only maps the landscape, but \336nds maxi-) 72 88 P
72 288 540 720 C
72 288 540 720 R
7 X
0 K
V
108 306 504 333 R
V
12 F
0 X
(Figure 2) 108 325.67 T
8 F
(.   Macroclassifiers from a 6-multiplexer experiment.) 147.36 325.67 T
72 288 540 720 R
7 X
V
108 306 504 324 R
V
12 F
0 X
(Figure 2) 108 316.67 T
8 F
(.   Macroclassifiers from a 6-multiplexer experiment.) 147.36 316.67 T
180 342 432 702 R
7 X
V
9 F
0 X
(  Cond.  Act    Pred.   Error  Fitn.  Num.) 180 695.33 T
(                 ) 180 683.33 T
10 F
(p        ) 281.94 683.33 T
11 F
(e             ) 335.91 683.33 T
10 F
(F     n) 372.78 683.33 T
9 F
( ) 180 671.33 T
(00 01 ##  1       0.    .00     57.    1 ) 180 659.33 T
(00 00 ##  1       0.    .00    109.    2 ) 180 647.33 T
(00 0# 0#  1       0.    .00     43.    1 ) 180 635.33 T
(00 0# ##  1       0.    .00    637.   14 ) 180 623.33 T
(00 11 ##  0     100.    .00     48.    1 ) 180 611.33 T
(00 10 ##  0     100.    .00     43.    1 ) 180 599.33 T
(00 1# 1#  0     100.    .00     47.    1 ) 180 587.33 T
(00 1# #1  0     100.    .00     43.    1 ) 180 575.33 T
(00 1# ##  0     100.    .00    725.   16 ) 180 563.33 T
(#0 0# #1  1     133.    .22      4.    1 ) 180 551.33 T
(01 00 #0  1     200.    .15     14.    1 ) 180 539.33 T
(01 00 ##  1     200.    .00     43.    1 ) 180 527.33 T
(01 #0 #0  1     200.    .00     48.    1 ) 180 515.33 T
(01 #0 ##  1     200.    .00    760.   18 ) 180 503.33 T
(            \050...69 others...\051) 180 487.33 T
(10 #0 1#  1     800.    .00     38.    1 ) 180 471.33 T
(11 #0 ##  0     800.    .10     28.    1 ) 180 459.33 T
(10 ## 1#  1     800.    .00    782.   23 ) 180 447.33 T
(1# 0# #0  0     809.    .11      0.    1 ) 180 435.33 T
(11 #0 00  0     900.    .00     30.    1 ) 180 423.33 T
(11 #1 #0  0     900.    .00    128.    3 ) 180 411.33 T
(11 #0 #0  0     900.    .00     68.    2 ) 180 399.33 T
(11 ## #0  0     900.    .00    638.   19 ) 180 387.33 T
(11 #0 #1  1    1000.    .00     77.    2 ) 180 375.33 T
(11 ## 01  1    1000.    .00     38.    1 ) 180 363.33 T
(11 ## #1  1    1000.    .00    719.   20 ) 180 351.33 T
0 0 612 792 C
FMENDPAGE
%%EndPage: "17" 16
%%Page: "16" 16
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(16) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
2 F
0 X
(dicting the payof) 72 712 T
(f associated with each X ) 153.06 712 T
4 F
(x) 273.3 712 T
2 F
( A pair and will it evolve the above eight general clas-) 279.29 712 T
-0.08 (si\336ers, together with the eight classi\336ers \050for the \322wrong\323 answers\051 that are identical to the above ) 72 688 P
(except that their actions are complemented?) 72 664 T
(In the experiment, input strings were randomly presented to XCS, which would choose an ac-) 90 634 T
-0.04 (tion, receive the associated payof) 72 610 P
-0.04 (f from the environment, make its internal adjustments including ) 231.18 610 P
(the GA, and go on to the next random string.  The population was initially empty) 72 586 T
(, so that the \336rst ) 459.99 586 T
(classi\336ers were created through covering.  V) 72 562 T
(alues of the basic system parameters are given in the ) 284.82 562 T
(caption to Figure 3.) 72 538 T
(Since our aim in the experiment was to test the generalization hypothesis, we were not imme-) 90 508 T
(diately concerned with the system\325) 72 484 T
(s ability to chose the \322right\323 answer) 238.55 484 T
(.  Rather) 409.77 484 T
(, we wanted to ) 450.26 484 T
-0.22 (know if it could form a complete payof) 72 460 P
-0.22 (f map expressed in terms of the 16 maximally general clas-) 258.43 460 P
(si\336ers.  At the same time, we were of course curious as to whether XCS could in fact learn to ) 72 436 T
-0.4 (choose the right answer if it had to! T) 72 412 P
-0.4 (o address both purposes, we set the system\325) 248.48 412 P
-0.4 (s action-selection ) 454.2 412 P
(regime so that, given an input, it would with probability 0.5 choose an action \0501 or 0\051 at random, ) 72 388 T
-0.08 (or it would choose the action that in the prediction array had the higher prediction \050note that high-) 72 364 P
-0.24 (er payof) 72 340 P
-0.24 (f was always associated with the right answer\051.  Thus the system either acted randomly to ) 111.17 340 P
-0.49 (gain information, or acted deterministically to gain maximum payof) 72 316 P
-0.49 (f.  The action selection regime ) 394.03 316 P
(thus alternated probabilistically between what one might term \322pure explore\323 and \322pure exploit\323 ) 72 292 T
(modes.  In pure exploit mode classi\336er parameter adjustments and the GA did not occur) 72 268 T
(.  T) 493.38 268 T
(o de-) 508.86 268 T
(termine how well the system was doing at getting the right answer) 72 244 T
(, we simply kept track of the ) 389.64 244 T
-0.07 (fraction of its decisions that were correct over the preceding 50 exploit trials.  \050XCS has been run ) 72 220 P
(successfully in a variety of other action-selection regimes.\051) 72 196 T
(Figure 2 shows a portion of the macroclassi\336er population after 10,000 trials, or \322problems\323, ) 90 166 T
-0.16 (from one run of the experiment.  Each line represents a macroclassi\336er) 72 142 P
-0.16 (.  The total number of mac-) 409.36 142 P
(roclassi\336ers in the population was 94; the total of their numerosities, and thus ) 72 118 T
1 F
(N) 447.11 118 T
2 F
(, the number of ) 455.11 118 T
(regular classi\336ers represented by the macroclassi\336ers, was 400.  Shown for each macroclassi\336er ) 72 94 T
FMENDPAGE
%%EndPage: "16" 15
%%Page: "15" 15
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(15) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
2 F
0 X
(value may be determined by treating the \336rst ) 72 712 T
1 F
(k) 289.85 712 T
2 F
( bits as an address that indexes into the remaining ) 295.17 712 T
(2) 72 688 T
16 F
(k) 78 692.8 T
2 F
( bits, and returning the indexed bit.  For example, in the 6-multiplexer \050) 82.43 688 T
1 F
(l) 424.88 688 T
2 F
(=6\051, the value for the ) 428.22 688 T
(input string 100010 is 1, since the \322address\323, 10, indexes bit 2 of the remaining four bits.  In dis-) 72 664 T
(junctive normal form, the 6-multiplexer is fairly complicated \050the primes indicate negation\051:) 72 640 T
1 F
(F) 90 610 T
16 F
(6) 97.33 607 T
1 F
( = x) 102.32 610 T
16 F
(0) 121.74 607 T
1 F
('x) 126.74 610 T
16 F
(1) 134.63 607 T
1 F
('x) 139.63 610 T
16 F
(2) 147.52 607 T
1 F
( + x) 152.52 610 T
16 F
(0) 171.93 607 T
1 F
('x) 176.93 610 T
16 F
(1) 184.82 607 T
1 F
(x) 189.82 610 T
16 F
(3) 195.15 607 T
1 F
( + x) 200.14 610 T
16 F
(0) 219.56 607 T
1 F
(x) 224.56 610 T
16 F
(1) 229.88 607 T
1 F
('x) 234.88 610 T
16 F
(4) 242.77 607 T
1 F
( + x) 247.77 610 T
16 F
(0) 267.19 607 T
1 F
(x) 272.18 610 T
16 F
(1) 277.51 607 T
1 F
(x) 282.51 610 T
16 F
(5) 287.83 607 T
1 F
(.) 292.83 610 T
2 F
(There are exactly eight classi\336ers that would give the right answer for the example string ) 90 580 T
-0.15 (above.  The most speci\336c is 100010:1 and the most general is 10##1#:1 \050the other six replace one ) 72 556 P
(or more of the #s in the latter by 0s\051.  Notice that 10##1#:1 is correct for all \050eight\051 inputs it can ) 72 532 T
-0.1 (match; in fact, it is maximally general in the sense that no further #s can be added to its condition ) 72 508 P
(without producing an error) 72 484 T
(.) 200.25 484 T
-0.05 (The 64-string input space can be covered by exactly eight such maximally general classi\336ers, ) 90 454 P
(each having three #s in its condition so it matches eight strings.  They are) 72 430 T
(000###:0 ) 90 394 T
(001###:1 ) 90 380 T
(01#0##:0 ) 90 366 T
(01#1##:1 ) 90 352 T
(10##0#:0 ) 90 338 T
(10##1#:1 ) 90 324 T
(1) 90 310 T
(1###0:0 ) 95.55 310 T
(1) 90 296 T
(1###1:1.) 95.55 296 T
(T) 72 266 T
(o construct our payof) 78.49 266 T
(f landscape, we associated two payof) 180.53 266 T
(f values, 300 and 0, with the eight ) 358.16 266 T
(strings matched by the \336rst classi\336er above: payof) 72 242 T
(f 300 was for the right answer) 312.62 242 T
(, 0; payof) 456.03 242 T
(f 0 was ) 501.45 242 T
-0.13 (for the wrong answer) 72 218 P
-0.13 (, 1.  Thus for that part of the landscape, X ) 173.37 218 P
4 F
-0.15 (x) 375.09 218 P
2 F
-0.13 ( 0 => 300, and X ) 381.09 218 P
4 F
-0.15 (x) 464.78 218 P
2 F
-0.13 ( 1 => 0.  W) 470.77 218 P
-0.13 (ith ) 524.47 218 P
-0.33 (the eight strings matched by the second classi\336er) 72 194 P
-0.33 (, we similarly associated payof) 304.04 194 P
-0.33 (fs 400 and 100 for ) 450.73 194 P
(right and wrong answers, respectively) 72 170 T
(.  The payof) 253.41 170 T
(fs continued to rise in 100 point increments, ) 311.15 170 T
(ending with 1000 and 700 for strings matched by the last classi\336er in the list.  The result was a ) 72 146 T
(landscape in which the mapping X ) 72 122 T
4 F
(x) 241.21 122 T
2 F
( A => P had 16 levels each associated with a generalization ) 247.21 122 T
-0.04 (over eight input strings.  The question then was: can XCS learn this landscape in the sense of pre-) 72 98 P
FMENDPAGE
%%EndPage: "15" 14
%%Page: "14" 14
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(14) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
2 F
0 X
-0.06 (Suppose that C1 and C2 are equally accurate in that their values of ) 72 712 P
7 F
-0.06 (e) 393.96 712 P
2 F
-0.06 ( are the same.  Whenever C1 ) 399.22 712 P
(and C2 occur in the same action set, their \336tness values will be updated by the same amounts. ) 72 688 T
(However) 72 664 T
(, since C2 is a generalization of C1, it will tend to occur in more match sets than C1.  ) 115.48 664 T
(Since the GA occurs in match sets, C2 would have more reproductive opportunities and thus its ) 72 640 T
-0.2 (number of exemplars would tend to grow with respect to C1\325) 72 616 P
-0.2 (s \050or) 362.48 616 P
-0.2 (, in macroclassi\336er terms, the ra-) 383.45 616 P
(tio of C2\325) 72 592 T
(s numerosity to C1\325) 117.98 592 T
(s would increase\051.  Consequently) 212.27 592 T
(, when C1 and C2 next meet in the ) 370.38 592 T
-0.19 (same action set, a lar) 72 568 P
-0.19 (ger fraction of the constant \336tness update amount would be \322steered\323 toward ) 171.26 568 P
(exemplars of C2, resulting through the GA in yet more exemplars of C2 relative to C1. Eventual-) 72 544 T
(ly) 72 520 T
(, it was hypothesized, C2 would displace C1 from the population.) 80.55 520 T
-0.14 (The generalization process should continue as long as more-general classi\336ers \050strictly) 90 490 P
-0.14 (, classi-) 503.5 490 P
(\336ers with more matching opportunities\051 can be formed without losing accuracy; otherwise, it ) 72 466 T
(should stop.  The stopping point should be controllable in the accuracy function.  Indeed, this is ) 72 442 T
(the role of ) 72 418 T
7 F
(e) 124.29 418 T
16 F
(0) 129.56 415 T
2 F
( in the function of Section 3.4:  classi\336ers with error greater than ) 134.55 418 T
7 F
(e) 447.67 418 T
16 F
(0) 452.93 415 T
2 F
( have sharply ) 457.93 418 T
-0.02 (lower \336tness.  So classi\336ers should evolve that are as general as possible while still having errors ) 72 394 P
(less than ) 72 370 T
7 F
(e) 116.64 370 T
16 F
(0) 121.9 367 T
2 F
(\321the \322accuracy criterion\323 referred to earlier) 126.9 370 T
(.  \050Naturally) 339.69 370 T
(, there is the possibility of ) 397.2 370 T
(tradeof) 72 346 T
(f in which it is some function of both accuracy and generality\321for instance their prod-) 105.75 346 T
(uct\321that determines the point of maximum generalization.\051) 72 322 T
5 F
(4.2  T) 72 288 T
(ests on a single-step pr) 99.89 288 T
(oblem) 214.94 288 T
2 F
-0.26 (T) 72 262 P
-0.26 (o test the generalization hypothesis, we sought a problem having a payof) 78.49 262 P
-0.26 (f landscape that \0501\051 con-) 424.48 262 P
-0.13 (tained potential generalizations, and \0502\051 the generalizations were expressible in the syntax of clas-) 72 238 P
(si\336er conditions.  W) 72 214 T
(e also wanted to start with a single-step problem to avoid any complications ) 168.32 214 T
(that might result from deferred external payof) 72 190 T
(f.  W) 291.61 190 T
(e designed a modi\336ed form of the Boolean ) 314.96 190 T
(multiplexer function in which dif) 72 166 T
(ferent payof) 231.02 166 T
(fs were associated with dif) 289.08 166 T
(ferent parts of the func-) 416.76 166 T
(tion\325) 72 142 T
(s domain.) 94 142 T
1 F
(4.2.1   The 6-multiplexer) 72 108 T
2 F
(Boolean multiplexer functions are de\336ned for binary strings of length ) 72 82 T
1 F
(l) 408.44 82 T
2 F
( = ) 411.77 82 T
1 F
(k) 424.53 82 T
2 F
( + 2) 429.86 82 T
16 F
(k) 448.62 86.8 T
2 F
(.  The function\325) 453.05 82 T
(s ) 527.01 82 T
FMENDPAGE
%%EndPage: "14" 13
%%Page: "13" 13
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(13) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
7 F
0 X
(d) 90 712 T
2 F
(V) 126 712 T
(alue of the fraction used in the second deletion method of Section 3.3.) 133.33 712 T
7 F
(f) 90 682 T
2 F
(If the total prediction of [M] is less than ) 126 682 T
7 F
(f) 320.87 682 T
2 F
( times the mean ) 327.12 682 T
(prediction of [P], covering ) 405.73 682 T
(occurs.) 126 658 T
1 F
(P) 90 628 T
16 F
(#) 97.33 625 T
2 F
(Probability of a # at an allele position in the condition of a ) 126 628 T
(classi\336er created through ) 408.83 628 T
(covering, and in the conditions of ) 126 604 T
(classi\336ers in an initial randomly generated popula-) 290.23 604 T
(tion. ) 126 580 T
1 F
(p) 90 550 T
16 F
(I) 96 547 T
1 F
(, ) 99.32 550 T
7 F
(e) 105.32 550 T
16 F
(I) 110.59 547 T
2 F
(, and ) 113.92 550 T
1 F
(F) 140.23 550 T
16 F
(I) 147.56 547 T
2 F
(     ) 150.88 550 T
-0.32 (Prediction, prediction error) 165.88 550 P
-0.32 (, and \336tness assigned to each ) 295 550 P
-0.32 (classi\336er in the initial ) 434.66 550 P
(population. ) 126 526 T
3 F
(4.  Experiments with XCS) 72 490.67 T
5 F
(4.1  Generalization hypothesis) 72 464 T
2 F
(As noted in Section 2, our intention with XCS was to form accurate maps of the X) 72 438 T
4 F
( x) 467.41 438 T
2 F
( A => P ) 476.74 438 T
(space, or payof) 72 414 T
(f landscape, of the problem. W) 144.72 414 T
(e also hoped by basing \336tness on accuracy to sup-) 291.97 414 T
(press over) 72 390 T
(general classi\336ers.  However) 120.74 390 T
(, it appeared that the interaction of accuracy based \336tness ) 258.81 390 T
(and the use of a niche GA could result in evolutionary pressure toward classi\336ers that would be ) 72 366 T
-0.02 (not only accurate, but both accurate and maximally general.  That is, given an accuracy criterion, ) 72 342 P
(classi\336ers would evolve to be as general as possible while still satisfying the criterion.  In this ) 72 318 T
(way) 72 294 T
(, niches of the \322landscape\323 that had the same payof) 91.2 294 T
(f to within the accuracy criterion, but pre-) 336.12 294 T
(sented dif) 72 270 T
(ferent sensory inputs to the system, might be mer) 118.75 270 T
(ged into a single niche through evolu-) 354.72 270 T
(tion of classi\336ers that generalized over the dif) 72 246 T
(ferences.  The resulting population would be ) 291.29 246 T
-0.05 (ef) 72 222 P
-0.05 (\336cient in the sense of minimizing the number of separate \322concepts\323 represented by the classi\336-) 81.1 222 P
(ers\325 conditions.  In terms of macroclassi\336ers, the population\325) 72 198 T
(s physical size would be minimized ) 363.14 198 T
(as well. ) 72 174 T
-0.03 (The hypothesized mechanism was as follows.  Consider two classi\336ers C1 and C2 having the ) 90 144 P
-0.14 (same action, where C2\325) 72 120 P
-0.14 (s condition is a generalization of C1\325) 184.17 120 P
-0.14 (s.  That is, C2\325) 359.89 120 P
-0.14 (s condition can be gen-) 429.3 120 P
(erated from C1\325) 72 96 T
(s by changing one or more of C1\325) 147.94 96 T
(s speci\336ed \0501 or 0\051 alleles to don\325) 308.83 96 T
(t cares \050#\051.  ) 468.84 96 T
FMENDPAGE
%%EndPage: "13" 12
%%Page: "12" 12
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(12) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
2 F
0 X
(ity times its match set size estimate, as described in Section 3.3.  If it is selected for deletion and ) 72 712 T
-0.22 (its numerosity is greater than one, the numerosity is simply decremented; if not, the macroclassi\336-) 72 688 P
-0.05 (er is entirely deleted.  The population as a whole is always treated as though it contains ) 72 664 P
1 F
-0.05 (N) 492.14 664 P
2 F
-0.05 ( regular ) 500.14 664 P
(classi\336ers, though the actual number of macroclassi\336ers, ) 72 640 T
1 F
(M) 346.8 640 T
2 F
(, may be substantially less than ) 356.8 640 T
1 F
(N) 509.04 640 T
2 F
(\321) 517.04 640 T
(which gives the computational advantage.) 72 616 T
-0.42 (A potential question is whether in fact a population of macroclassi\336ers, even when treated like ) 90 586 P
(the equivalent regular classi\336ers, in fact behaves the same way) 72 562 T
(.  W) 372.32 562 T
(e have conducted informal ex-) 391.67 562 T
-0.47 (periments to test this and found no apparent dif) 72 538 P
-0.47 (ference.  Consequently) 294.57 538 P
-0.47 (, our recent classi\336er system ) 403.1 538 P
(work, including that reported here, was done with macroclassi\336ers. However) 72 514 T
(, classi\336er system ) 440.57 514 T
-0.13 (mechanics and theory appear to be more easily communicated and understood in terms of regular ) 72 490 P
(classi\336ers, so that language will be used in most of this paper) 72 466 T
(, and the term \322classi\336er\323 will have ) 365.33 466 T
-0.25 (the standard meaning.  The term macroclassi\336er will be reserved for the few situations in which it ) 72 442 P
(makes the explanation clearer) 72 418 T
(.) 214.22 418 T
5 F
(3.6  Parameter list) 72 384 T
2 F
-0.25 (The foregoing description of XCS has mentioned most of the system\325) 72 358 P
-0.25 (s parameters.  They are sum-) 402.68 358 P
(marized below) 72 334 T
(.  Some typical values can be seen in the captions to Figs. 3, 4, and 6.) 142.16 334 T
1 F
(N) 90 304 T
2 F
(Population size. ) 126 304 T
7 F
(b) 90 274 T
2 F
(Learning rate for prediction, prediction error) 126 274 T
(, and \336tness ) 339.34 274 T
(updates. ) 399.31 274 T
7 F
(g) 90 244 T
2 F
(Discount factor) 126 244 T
(. ) 199.62 244 T
7 F
(q) 90 214 T
2 F
(Do a GA in this [M] if the average number of time-steps since the last ) 126 214 T
(GA is greater ) 464.75 214 T
(than ) 126 190 T
7 F
(q) 149.65 190 T
2 F
(.) 155.9 190 T
7 F
(e) 90 160 T
16 F
(0) 95.26 157 T
2 F
(, ) 100.26 160 T
7 F
(a) 106.26 160 T
2 F
( ) 113.83 160 T
(Parameters of the accuracy function. ) 126 160 T
7 F
(c) 90 130 T
2 F
(Probability of crossover per invocation of the GA. ) 126 130 T
7 F
(m) 90 100 T
2 F
(Probability of mutation per allele in an of) 126 100 T
(fspring.  Mutation ) 324.66 100 T
(takes 0,1,# equiprobably ) 414.61 100 T
(into one of the other allowed alleles.) 126 76 T
FMENDPAGE
%%EndPage: "12" 11
%%Page: "11" 11
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(1) 306 749.33 T
(1) 310.45 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
2 F
0 X
(Since the relative accuracies sum to 1, the total of the \336tness adjustments to the members of ) 90 712 T
([A]) 72 688 T
13 F
(-1) 88.65 685 T
2 F
( is constant.  The ef) 96.97 688 T
(fect is that the various action sets within a given match set [M] have ap-) 190.69 688 T
(proximately the same total \336tness.  Because reproduction depends on \336tness, approximately the ) 72 664 T
(same number of classi\336ers will be associated with each action that is represented in [M], support-) 72 640 T
(ing the general goal of assigning equal resources to all parts of the X ) 72 616 T
4 F
(x) 404.42 616 T
2 F
( A => P map.  ) 410.42 616 T
(However) 90 586 T
(, ) 133.48 586 T
1 F
(within) 139.47 586 T
2 F
( a given action set, the more accurate classi\336ers will have higher \336tnesses ) 169.47 586 T
(than the less accurate ones.  They will consequently have more of) 72 562 T
(fspring.  But by becoming rela-) 386.88 562 T
(tively more numerous, those classi\336ers will gain a lar) 72 538 T
(ger fraction of the total relative accuracy ) 327.95 538 T
(\050which always equals 1\051, and so will have yet more of) 72 514 T
(fspring compared to their less accurate ) 330.59 514 T
(brethren.  Eventually) 72 490 T
(, the most accurate classi\336ers in the action set will drive out the others, in ) 172.15 490 T
-0.19 (principle leaving the X ) 72 466 P
4 F
-0.21 (x) 184.51 466 P
2 F
-0.19 ( A => P map with the best classi\336er \050assuming the GA has discovered it\051 ) 190.5 466 P
(for each situation-action combination. ) 72 442 T
5 F
(3.5  Macr) 72 408 T
(oclassi\336ers) 120.74 408 T
2 F
(Whenever XCS generates a new classi\336er) 90 382 T
(, either at system initialization or later) 290.35 382 T
(, the popula-) 472.09 382 T
-0.2 (tion is scanned to see if the new classi\336er has the same condition and action as any existing classi-) 72 358 P
(\336er) 72 334 T
(.  If so, the new classi\336er is not actually added to the population, but a) 87.33 334 T
1 F
( numer) 423.11 334 T
(osity) 456.3 334 T
2 F
( \336eld in the ) 478.96 334 T
(existing classi\336er is incremented by one.  If, instead, there is no existing classi\336er with identical ) 72 310 T
(condition and action, the new classi\336er is added to the population with its own numerosity \336eld ) 72 286 T
-0.02 (initialized to one. W) 72 262 P
-0.02 (e term such classi\336ers ) 168.92 262 P
1 F
-0.02 (macr) 277.43 262 P
-0.02 (oclassi\336ers) 301.63 262 P
2 F
-0.02 (.  They are essentially a programming ) 355.6 262 P
(technique that speeds up matching [P] against an input \050and speeds other aspects of processing\051, ) 72 238 T
(since one macroclassi\336er with numerosity ) 72 214 T
1 F
(n) 276.86 214 T
2 F
( is the structural equivalent of ) 282.86 214 T
1 F
(n) 428.76 214 T
2 F
( regular classi\336ers.  ) 434.75 214 T
-0.33 (T) 90 184 P
-0.33 (o be sure that the system still behaves as though it consists of ) 96.49 184 P
1 F
-0.33 (N) 389.07 184 P
2 F
-0.33 ( regular classi\336ers, all system ) 397.07 184 P
(functions are written so as to be sensitive to the numerosities, if that is relevant.  For example, in ) 72 160 T
(calculating the relative accuracy shares of the last section, a macroclassi\336er with numerosity ) 72 136 T
1 F
(n) 518.32 136 T
2 F
( ) 524.32 136 T
-0 (will be treated as though it is ) 72 112 P
1 F
-0 (n) 213.57 112 P
2 F
-0 ( separate classi\336ers; i.e., it will get a share ) 219.57 112 P
1 F
-0 (n) 424.74 112 P
2 F
-0 ( times bigger than if it ) 430.74 112 P
-0.13 (had numerosity 1.  Similarly) 72 88 P
-0.13 (, a macroclassi\336er) 207.63 88 P
-0.13 (\325) 294.74 88 P
-0.13 (s probability of suf) 298.08 88 P
-0.13 (fering a deletion is its numeros-) 388.42 88 P
FMENDPAGE
%%EndPage: "11" 10
%%Page: "10" 10
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(10) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
2 F
0 X
-0.11 (use in two special circumstances.  First, it sometimes happens that no classi\336ers match a given in-) 72 712 P
-0.32 (put\321[M] is null.  In this case, XCS simply creates a classi\336er with a condition matching the input ) 72 688 P
-0.25 (and a randomly chosen action.  The new classi\336er is inserted into [P], and a classi\336er is deleted as ) 72 664 P
(in the GA.  Then the system forms a new [M] and proceeds as usual.  Covering is also used as a ) 72 640 T
(way of escaping if the system seems to be stuck in a loop\321for example if the action selection ) 72 616 T
-0.05 (mechanism causes the system persistently to go back and forth between two positions in the envi-) 72 592 P
(ronment.  The situation is detectable because the system\325) 72 568 T
(s discounting mechanism will cause the ) 344.81 568 T
(predictions of the classi\336ers involved to fall steadily) 72 544 T
(.  The creation of a new matching classi\336er ) 322.06 544 T
(with a random action can usually be relied upon to break the loop; if it doesn\325) 72 520 T
(t, another round of ) 444.53 520 T
(covering will do so, etc.  In practice, loops are rare, and break as soon as the discounting mecha-) 72 496 T
(nism causes one of the current actions\325 predictions to fall below that for some other action.  Cov-) 72 472 T
(ering has only been needed occasionally at the beginning of a run when alternative classi\336ers ) 72 448 T
(were not yet available.) 72 424 T
5 F
(3.4  The \336tness calculation) 72 390 T
2 F
(As noted earlier) 72 364 T
(, a classi\336er) 148.12 364 T
(\325) 205.52 364 T
(s \336tness is updated every time it belongs to [A]) 208.86 364 T
13 F
(-1) 435.05 361 T
2 F
( \050or [A], in single-) 443.38 364 T
-0.04 (step problems\051.  Broadly) 72 340 P
-0.04 (, the \336tness is updated by a quantity that depends on the classi\336er) 189.68 340 P
-0.04 (\325) 503.08 340 P
-0.04 (s accu-) 506.41 340 P
-0.01 (racy relative to the accuracies of the other classi\336ers in the set.  There are three steps in the calcu-) 72 316 P
-0.02 (lation.  First, each classi\336er) 72 292 P
-0.02 (\325) 204.28 292 P
-0.02 (s ) 207.61 292 P
1 F
-0.02 (accuracy) 215.26 292 P
2 F
-0.02 (, ) 258.43 292 P
7 F
-0.02 (k) 264.41 292 P
16 F
-0.02 (j) 270.99 289 P
2 F
-0.02 (, is computed. ) 273.77 292 P
1 F
-0.02 ( ) 344.01 292 P
2 F
-0.02 (Accuracy) 346.98 292 P
-0.02 ( is de\336ned as a function of the ) 392.93 292 P
(current value of ) 72 268 T
7 F
(e) 150.93 268 T
16 F
(j) 156.19 265 T
2 F
(.  W) 158.97 268 T
(e have experimented with a number of functional forms.  The best one so ) 178.33 268 T
-0.15 (far is ) 72 244 P
7 F
-0.15 (k) 99.01 244 P
16 F
-0.12 (j) 105.59 241 P
2 F
-0.15 ( = exp[\050ln ) 108.37 244 P
7 F
-0.15 (a) 158.32 244 P
2 F
-0.15 (\051\050) 165.89 244 P
7 F
-0.15 (e) 173.87 244 P
16 F
-0.12 (j) 179.14 241 P
2 F
-0.15 ( - ) 181.92 244 P
7 F
-0.15 (e) 191.61 244 P
16 F
-0.12 (0) 196.87 241 P
2 F
-0.15 (\051/) 201.87 244 P
7 F
-0.15 (e) 209.2 244 P
16 F
-0.12 (0) 214.46 241 P
2 F
-0.15 (\051] for ) 219.46 244 P
7 F
-0.15 (e) 247.13 244 P
16 F
-0.12 (j) 252.39 241 P
2 F
-0.15 ( > ) 255.17 244 P
7 F
-0.15 (e) 267.63 244 P
16 F
-0.12 (0) 272.9 241 P
2 F
-0.15 (, otherwise 1.  This function falls of) 277.9 244 P
-0.15 (f exponentially for ) 448.18 244 P
7 F
(e) 72 220 T
16 F
(j) 77.26 217 T
2 F
( > ) 80.04 220 T
7 F
(e) 92.81 220 T
16 F
(0) 98.07 217 T
2 F
(.  The rate is such that the accuracy at ) 103.07 220 T
7 F
(e) 286.58 220 T
16 F
(j) 291.84 217 T
2 F
( = 2) 294.62 220 T
7 F
(e) 313.38 220 T
16 F
(0) 318.64 217 T
2 F
( equals) 323.64 220 T
7 F
( a) 357.28 220 T
2 F
( \0500 < ) 367.85 220 T
7 F
(a) 393.6 220 T
2 F
( < 1\051, so smaller ) 401.17 220 T
7 F
(a) 481.88 220 T
2 F
( means a ) 489.45 220 T
-0.16 (steeper fallof) 72 196 P
-0.16 (f.  Next, a) 134.57 196 P
1 F
-0.16 ( r) 181.73 196 P
-0.16 (elative accuracy) 188.79 196 P
2 F
-0.16 ( ) 267.56 196 P
7 F
-0.16 (k) 270.41 196 P
2 F
-0.16 (') 276.99 196 P
16 F
-0.13 (j) 279.15 193 P
2 F
-0.16 ( is computed for each classi\336er by dividing its accura-) 281.93 196 P
-0.04 (cy by the total of the accuracies in the set.  Finally) 72 172 P
-0.04 (, the relative accuracy is used to adjust the clas-) 311.9 172 P
(si\336er) 72 148 T
(\325) 96.43 148 T
(s) 99.76 148 T
1 F
( ) 104.43 148 T
2 F
(fitness) 107.43 148 T
( ) 138.74 148 T
1 F
(F) 141.74 148 T
16 F
(j) 149.07 145 T
2 F
( using the MAM procedure.  If the \336tness has been adjusted at least 1/) 151.85 148 T
7 F
(b) 487.28 148 T
2 F
( times, ) 493.86 148 T
(.  Otherwise, ) 183.2 124 T
1 F
(F) 247.48 124 T
16 F
(j) 254.81 121 T
2 F
( is set to the average of the current and previous values of ) 257.59 124 T
7 F
(k) 72 100 T
16 F
(j) 78.58 97 T
2 F
('.) 81.36 100 T
72 115.6 183.2 133.21 C
1 F
0 X
0 K
(F) 73 124 T
16 F
(j) 80.79 119.53 T
1 F
(F) 101.4 124 T
16 F
(j) 109.19 119.53 T
7 F
(b) 124.56 124 T
(k) 138.95 124 T
16 F
(j) 145.99 118.66 T
7 F
(\242) 149.48 124 T
1 F
(F) 165.03 124 T
16 F
(j) 172.82 119.53 T
7 F
(-) 155.44 124 T
(\050) 133.85 124 T
(\051) 176.2 124 T
(+) 114.97 124 T
(\254) 86.57 124 T
0 0 612 792 C
FMENDPAGE
%%EndPage: "10" 9
%%Page: "9" 9
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(9) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
2 F
0 X
(compensating deletion occurs.  Otherwise, two classi\336ers are deleted stochastically from [P] to ) 72 712 T
(make room.  W) 72 688 T
(e have experimented with two methods of selecting the classi\336ers to be deleted:) 145.65 688 T
(1.   Every classi\336er keeps an estimate of the size of the match sets in which it occurs.  The es-) 90 658 T
(timate is updated every time the classi\336er takes part in an [M], using the MAM technique with ) 72 634 T
(rate ) 72 610 T
7 F
(b) 92.98 610 T
2 F
(.  A classi\336er) 99.56 610 T
(\325) 163.29 610 T
(s deletion probability is set proportional to the match set size estimate, which ) 166.63 610 T
(tends to make all match sets have about the same size, so that classi\336er resources are allocated ) 72 586 T
(more or less equally to all niches \050match sets\051.  This deletion technique is similar to one intro-) 72 562 T
(duced in Booker \0501989\051 for the same purpose.) 72 538 T
(2.   A classi\336er) 90 508 T
(\325) 162.73 508 T
(s deletion probability is as in \0501\051, except if its \336tness is less than a small frac-) 166.06 508 T
(tion ) 72 484 T
7 F
(d) 93.66 484 T
2 F
( of the population mean \336tness. Then the probability from \0501\051 is multiplied by the mean \336t-) 99.58 484 T
(ness divided by the classi\336er) 72 460 T
(\325) 210.36 460 T
(s \336tness.  If for example ) 213.69 460 T
7 F
(d) 332.61 460 T
2 F
( is 0.1, the result is to delete such low-) 338.53 460 T
(\336tness classi\336ers with a probability 10 times that of the others.  ) 72 436 T
-0.04 (Like the basic deletion technique of \0501\051, the rate of incidence of the GA is controlled with the ) 90 406 P
(aim of allocating classi\336er resources approximately equally to the dif) 72 382 T
(ferent match sets  \050such an ) 403.88 382 T
-0.29 (allocation being consistent with the purpose of forming a relatively complete mapping\051.  This can-) 72 358 P
(not in general be achieved  if the GA simply occurs with a certain probability in each match set.  ) 72 334 T
(Depending on the environment, some match sets \050niches\051 may occur much more often than oth-) 72 310 T
(ers.  Instead, the GA is run in a match set if the number of time-steps since the last GA in that ) 72 286 T
(match set exceeds a threshold.  As a result, the rate of reproduction per match set per unit time is ) 72 262 T
(approximately constant\321except in the most rarely occurring match sets.  T) 72 238 T
(o implement this re-) 432.57 238 T
(gime, each classi\336er is time-stamped at birth with the reading of a counter that is incremented on ) 72 214 T
-0.23 (every time-step.  When a match set is formed, XCS computes the average time-stamp of its classi-) 72 190 P
(\336ers and executes the GA if the dif) 72 166 T
(ference between that average and the current counter reading ) 239.32 166 T
-0.22 (exceeds a threshold ) 72 142 P
7 F
-0.22 (q) 168.27 142 P
2 F
-0.22 (.  This technique and the deletion algorithm result in approximately equal al-) 174.52 142 P
(location of classi\336ers to the various niches.) 72 118 T
-0.07 (Besides the GA, the discovery component contains a) 90 88 P
1 F
-0.07 ( covering) 342.69 88 P
2 F
-0.07 ( mechanism \050W) 387.59 88 P
-0.07 (ilson, 1985\051 for ) 462.92 88 P
FMENDPAGE
%%EndPage: "9" 8
%%Page: "8" 8
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(8) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
2 F
0 X
(However) 90 712 T
(, for each classi\336er in [A]) 133.48 712 T
13 F
(-1) 256.04 709 T
2 F
(, the update in fact begins by \336rst re-calculating the \336t-) 264.36 712 T
-0.06 (ness ) 72 688 P
1 F
-0.06 (F) 95.59 688 P
16 F
-0.05 (j) 102.92 685 P
2 F
-0.06 ( using the current value of) 105.7 688 P
7 F
-0.06 ( e) 230.96 688 P
16 F
-0.05 (j) 239.17 685 P
2 F
-0.06 (, according to a technique to be described in Section 3.4.  Sec-) 241.95 688 P
-0.31 (ond,) 72 664 P
7 F
-0.31 ( e) 92.99 664 P
16 F
-0.26 (j) 100.94 661 P
2 F
-0.31 ( is itself adjusted using ) 103.72 664 P
1 F
-0.31 (P) 215.12 664 P
2 F
-0.31 ( and the current value of ) 222.45 664 P
1 F
-0.31 (p) 340.5 664 P
16 F
-0.26 (j) 346.49 661 P
2 F
-0.31 ( .  For this, the W) 349.27 664 P
-0.31 (idrow-Hof) 430.9 664 P
-0.31 (f technique  ) 481.3 664 P
(is used to adjust ) 72 640 T
7 F
(e) 151.96 640 T
16 F
(j) 157.23 637 T
2 F
( toward the absolute dif) 160 640 T
(ference |) 273.04 640 T
1 F
(P - p) 313.72 640 T
16 F
(j) 337.04 637 T
2 F
(|.   That is,  ) 339.82 640 T
(.  ) 522.85 640 T
(Finally) 72 616 T
(, ) 105.21 616 T
1 F
(p) 111.21 616 T
16 F
(j) 117.2 613 T
2 F
( is adjusted as described above.  \050The adjustment of ) 119.98 616 T
1 F
(F) 370.8 616 T
2 F
( and ) 378.13 616 T
7 F
(e) 401.44 616 T
2 F
( makes the term \322reinforce-) 406.71 616 T
(ment component\323 something of a misnomer) 72 592 T
(, but we shall stick with this traditional usage for the ) 282.39 592 T
(component that modi\336es classi\336er parameters.\051) 72 568 T
(The W) 90 538 T
(idrow-Hof) 122.49 538 T
(f procedure is used for ) 172.9 538 T
1 F
(p) 283.8 538 T
2 F
(, ) 289.8 538 T
7 F
(e) 295.8 538 T
2 F
(, and as part of the adjustment of ) 301.06 538 T
1 F
(F) 461.28 538 T
2 F
( only after a ) 468.61 538 T
-0.35 (classi\336er has been adjusted at least 1/) 72 514 P
7 F
-0.35 (b) 249.13 514 P
2 F
-0.35 ( times.  Prior to that, the new values in each case are simple ) 255.71 514 P
-0.25 (averages of the previous values and the current one.  For example, the value of ) 72 490 P
1 F
-0.25 (p) 448.95 490 P
16 F
-0.21 (j) 454.95 487 P
2 F
-0.25 ( on the fourth ad-) 457.73 490 P
(justment will be just one-fourth of the sum of the \336rst four ) 72 466 T
1 F
(P) 355.16 466 T
2 F
( values, if 1/) 362.49 466 T
7 F
(b) 421.79 466 T
2 F
( > 4.  This two-phase ) 428.37 466 T
-0.02 (technique causes the early parameter values to move more quickly to their \322true\323 average values, ) 72 442 P
(and makes the system less sensitive to initial, possibly arbitrary) 72 418 T
(, settings of the parameters.  The ) 375.71 418 T
(technique, called \322MAM\323  \050\322moyenne adaptive modi\336\216e\323\051, was introduced in V) 72 394 T
(enturini \0501994\051.  ) 455.7 394 T
(T) 72 370 T
(o keep track of the number of updates, a classi\336er maintains an) 78.49 370 T
1 F
( experience) 380.93 370 T
2 F
( parameter that is in-) 435.87 370 T
(cremented every time the classi\336er belongs to [A].) 72 346 T
(Finally) 90 316 T
(, we note that in single-step problems such as the Boolean multiplexer the updates oc-) 123.21 316 T
(cur as described, but in the set [A], since each problem involves just a single action set.  In addi-) 72 292 T
-0.18 (tion, ) 72 268 P
1 F
-0.18 (P) 96.48 268 P
2 F
-0.18 ( consists only of the current reward.  Similarly) 103.81 268 P
-0.18 (, if a multi-step problem happens to take just ) 324.43 268 P
(one step \050e.g., food is found within one step and that de\336nes the end of the current problem\051, the ) 72 244 T
(updates occur in [A] and ) 72 220 T
1 F
(P) 193.57 220 T
2 F
( is just the current reward.) 200.89 220 T
5 F
(3.3  Discovery component) 72 186 T
2 F
(As can be seen in Figure 1, the genetic algorithm acts on the match set [M].  It selects two classi-) 72 160 T
(\336ers from [M] with probabilities proportional to their \336tnesses, copies the classi\336ers, performs ) 72 136 T
-0.26 (crossover on the copies with probability ) 72 112 P
7 F
-0.26 (c) 265.63 112 P
2 F
-0.26 (, and with probability ) 272.22 112 P
7 F
-0.26 (m) 377.44 112 P
2 F
-0.26 ( per allele performs mutation on ) 384.35 112 P
(them.  If [P] contains less than ) 72 88 T
1 F
(N) 221.23 88 T
2 F
( members, the copies are inserted into the population and no ) 229.23 88 T
396.19 631.6 522.85 649.2 C
7 F
0 X
0 K
(e) 397.19 640 T
16 F
(j) 402.91 634.66 T
7 F
(e) 423.53 640 T
16 F
(j) 429.26 634.66 T
7 F
(b) 444.62 640 T
1 F
(P) 462.01 640 T
(p) 481.92 640 T
16 F
(j) 488.38 635.53 T
7 F
(-) 472.34 640 T
(e) 506.74 640 T
16 F
(j) 512.47 634.66 T
7 F
(-) 497.16 640 T
(\050) 453.91 640 T
(\051) 515.85 640 T
(+) 435.03 640 T
(\254) 408.69 640 T
460.01 634.47 460.01 648.2 2 L
0.33 H
0 Z
N
492.16 634.47 492.16 648.2 2 L
N
0 0 612 792 C
FMENDPAGE
%%EndPage: "8" 7
%%Page: "7" 7
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(7) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
2 F
0 X
(little ef) 72 712 T
(fect on performance.) 106.1 712 T
5 F
(3.1  Performance component) 72 678 T
2 F
(Given an input, a) 72 652 T
1 F
( match set) 154.61 652 T
2 F
( [M] is formed in the usual way \050W) 203.24 652 T
(ilson, 1994\051.  The system then ) 372.64 652 T
(forms a) 72 628 T
1 F
( system pr) 108.3 628 T
(ediction) 156.49 628 T
2 F
( ) 195.14 628 T
1 F
(P\050a) 198.13 628 T
16 F
(i) 215.45 625 T
1 F
(\051 ) 218.23 628 T
2 F
(for each action ) 225.22 628 T
1 F
(a) 299.49 628 T
16 F
(i) 305.48 625 T
2 F
( represented in [M].  There are several reason-) 308.26 628 T
-0.45 (able ways to determine ) 72 604 P
1 F
-0.45 (P\050a) 184.1 604 P
16 F
-0.38 (i) 201.42 601 P
1 F
-0.45 (\051) 204.2 604 P
2 F
-0.45 (.  W) 208.2 604 P
-0.45 (e have experimented primarily with a \336tness-weighted average of ) 226.65 604 P
(the predictions of classi\336ers advocating ) 72 580 T
1 F
(a) 264.87 580 T
16 F
(i) 270.86 577 T
2 F
(.  Presumably) 273.64 580 T
(, one wants a method that yields the sys-) 338.49 580 T
-0.05 (tem\325) 72 556 P
-0.05 (s \322best guess\323 as to the payof) 93.32 556 P
-0.05 (f\321internal and/or external\321to be received if ) 233.36 556 P
1 F
-0.05 (a) 453.54 556 P
16 F
-0.04 (i) 459.53 553 P
2 F
-0.05 ( is chosen.  The ) 462.31 556 P
1 F
-0.37 (P\050a) 72 532 P
16 F
-0.31 (i) 89.32 529 P
1 F
-0.37 (\051 ) 92.1 532 P
2 F
-0.37 (values are placed in a) 98.72 532 P
1 F
-0.37 ( pr) 200.49 532 P
-0.37 (ediction array) 213.34 532 P
2 F
-0.37 ( \050some of whose slots will receive no values if there is ) 281.26 532 P
(no corresponding action in [M]\051, and an action is selected.  ) 72 508 T
(Many action-selection methods are possible. The system may simply pick the action with the ) 90 478 T
(lar) 72 454 T
(gest prediction; for brevity) 84.44 454 T
(, we shall call this ) 211.9 454 T
(deterministic) 301.18 454 T
( action selection.  Alternatively) 363.81 454 T
(, the ) 513.26 454 T
-0.38 (action may be selected probabilistically) 72 430 P
-0.38 (, with the probability of selection proportional to ) 259.56 430 P
1 F
-0.38 (P\050a) 493.36 430 P
16 F
-0.32 (i) 510.68 427 P
1 F
-0.38 (\051) 513.46 430 P
2 F
-0.38 (; we ) 517.45 430 P
-0.11 (shall call this roulette-wheel action selection.  In some cases the action may be selected complete-) 72 406 P
(ly at random \050from actions with non-null predictions\051, ignoring the ) 72 382 T
1 F
(P\050a) 395.46 382 T
16 F
(i) 412.78 379 T
1 F
(\051) 415.56 382 T
2 F
(.  There are of course ad-) 419.55 382 T
-0.13 (ditional schemes. Once an action is selected, the system forms an) 72 358 P
1 F
-0.13 (  action set) 383.81 358 P
2 F
-0.13 ( [A] consisting of the ) 435.72 358 P
-0.09 (classi\336ers in [M] advocating the chosen action. That action is then sent to the ef) 72 334 P
-0.09 (fectors and an im-) 453.33 334 P
(mediate reward ) 72 310 T
1 F
(r) 149.26 310 T
16 F
(imm) 153.93 307 T
2 F
( may \050or may not\051 be returned by the environment.) 171.14 310 T
5 F
(3.2  Reinfor) 72 276 T
(cement component) 132.07 276 T
2 F
(XCS\325) 90 250 T
(s reinforcement component consists in updating the ) 116.66 250 T
1 F
(p) 366.83 250 T
2 F
(,) 372.83 250 T
7 F
( e) 375.83 250 T
2 F
(, and ) 384.09 250 T
1 F
(F) 410.4 250 T
2 F
( parameters of classi\336ers ) 417.73 250 T
-0.33 (in the previous time step\325) 72 226 P
-0.33 (s action set [A]) 191.93 226 P
13 F
-0.28 (-1) 263.87 223 P
2 F
-0.33 (, as shown in Figure 1.  The ) 272.2 226 P
1 F
-0.33 (p) 406.11 226 P
2 F
-0.33 ( values are adjusted by the ) 412.1 226 P
(technique of Q-learning \050W) 72 202 T
(atkins, 1989\051, which is implemented as shown in the \336gure by the ) 203.93 202 T
-0.19 (combination of taking the maximum ) 72 178 P
1 F
-0.19 (P\050a) 249.26 178 P
16 F
-0.16 (i) 266.58 175 P
1 F
-0.19 (\051) 269.36 178 P
2 F
-0.19 ( of the prediction array) 273.36 178 P
-0.19 (, \322discounting\323 it by multiplying ) 381.71 178 P
(by a factor ) 72 154 T
7 F
(g) 126.28 154 T
2 F
( \0500 <) 131.21 154 T
7 F
( g) 153.96 154 T
2 F
( ) 161.89 154 T
7 F
( \243) 164.89 154 T
2 F
( 1\051, and adding in any external reward from the previous time-step.  The re-) 174.47 154 T
-0.41 (sulting quantity) 72 130 P
-0.41 (, called simply ) 145.78 130 P
1 F
-0.41 (P) 217.84 130 P
2 F
-0.41 (, is used to adjust the predictions ) 223.84 130 P
1 F
-0.41 (p) 380.87 130 P
16 F
-0.34 (j) 386.87 127 P
2 F
-0.41 ( of the classi\336ers in [A]) 389.64 130 P
13 F
-0.34 (-1) 500.51 127 P
2 F
-0.41 ( using ) 508.83 130 P
(the standard W) 72 106 T
(idrow-Hof) 144.13 106 T
(f delta rule \050W) 194.54 106 T
(ilson, 1994\051 with learning rate parameter ) 264.33 106 T
7 F
(b) 463.18 106 T
2 F
( \0500 < ) 469.76 106 T
7 F
(b \243) 495.51 106 T
2 F
( 1\051.  ) 511.68 106 T
(That is,  ) 72 82 T
(.) 215.01 82 T
113.98 74.47 215.01 91.21 C
1 F
0 X
0 K
(p) 114.98 82 T
16 F
(j) 121.43 77.53 T
1 F
(p) 142.05 82 T
16 F
(j) 148.51 77.53 T
7 F
(b) 163.87 82 T
1 F
(P) 178.26 82 T
(p) 198.18 82 T
16 F
(j) 204.63 77.53 T
7 F
(-) 188.59 82 T
(\050) 173.16 82 T
(\051) 208.02 82 T
(+) 154.29 82 T
(\254) 127.21 82 T
0 0 612 792 C
FMENDPAGE
%%EndPage: "7" 6
5 9 /Times-Roman FMDEFINEFONT
6 14 /Times-Roman FMDEFINEFONT
9 14 /Times-Italic FMDEFINEFONT
10 8 /Helvetica FMDEFINEFONT
11 9 /Helvetica FMDEFINEFONT
13 9 /Symbol FMDEFINEFONT
%%Page: "6" 6
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(6) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 288.67 R
V
2 F
0 X
(in the de\336nition of classi\336er \336tness, the GA mechanism, and the more sophisticated action selec-) 72 280.67 T
(tion that accuracy-based \336tness makes possible.) 72 256.67 T
(The box labeled [P] contains the classi\336er population, and shows some example classi\336ers.  ) 90 226.67 T
-0.39 (The left side of each classi\336er consists of a single condition; the right side codes an environmental ) 72 202.67 P
(action.  Associated with each classi\336er are prediction, prediction error) 72 178.67 T
(, and \336tness parameters, ) 407.59 178.67 T
-0.01 (symbolized by ) 72 154.67 P
1 F
-0.01 (p) 145.27 154.67 P
2 F
-0.01 (, ) 151.26 154.67 P
7 F
-0.01 (e) 157.25 154.67 P
2 F
-0.01 (, and ) 162.51 154.67 P
1 F
-0.01 (F) 188.8 154.67 P
2 F
-0.01 (, respectively) 195.17 154.67 P
-0.01 (.  The population has a \336xed maximum size ) 258.33 154.67 P
1 F
-0.01 (N) 470.76 154.67 P
2 F
-0.01 ( and may be ) 478.76 154.67 P
(initialized in a variety of ways: with ) 72 130.67 T
1 F
(N) 248.22 130.67 T
2 F
( randomly generated classi\336ers; with potentially useful ) 256.22 130.67 T
(\322seed\323 classi\336ers; with no classi\336ers; or with one general \050condition consisting of #\325) 72 106.67 T
(s\051 classi\336er ) 475.73 106.67 T
(for each action; etc.  The initial values of  ) 72 82.67 T
1 F
(p) 274.85 82.67 T
7 F
(,  e) 280.84 82.67 T
2 F
(, and ) 295.1 82.67 T
1 F
(F) 321.42 82.67 T
2 F
( can be set more or less arbitrarily; there is ) 328.74 82.67 T
72.67 309.33 540 719.33 C
72.67 309.33 540 719.33 R
7 X
0 K
V
116.63 542.41 224.63 632.56 18 RR
V
0.5 H
2 Z
0 X
N
251.63 481.36 327.23 497.56 R
7 X
V
0 X
N
359.02 469.79 467.02 507.59 R
7 X
V
0 X
N
99.93 687.55 504.02 703.75 R
7 X
V
0 X
N
138.23 654.16 203.03 664.96 R
7 X
V
0 X
N
386.65 654.9 451.45 665.7 R
7 X
V
0 X
N
360.39 381.11 468.39 418.91 R
7 X
V
0 X
N
255.43 478.12 282.73 468.96 2 L
N
322.39 478.12 296.73 468.96 2 L
N
277.04 454.02 303.46 467.73 R
N
7 X
90 450 6.7 6.7 412.12 447.32 G
0 X
90 450 6.7 6.7 412.12 447.32 A
419.01 646.24 421.49 654.9 423.97 646.24 421.49 646.24 4 Y
V
421.49 507.59 421.49 646.48 2 L
N
493.61 464.4 491.13 455.75 488.65 464.4 491.13 464.4 4 Y
V
491.13 687.25 491.13 464.16 2 L
N
470.06 442.05 512.73 455.45 R
N
427.46 445.68 418.81 448.16 427.46 450.64 427.46 448.16 4 Y
V
469.13 448.55 469.13 448.16 427.22 448.16 3 L
N
322.39 441.31 364.03 455.52 R
N
313.74 451.14 322.39 448.66 313.74 446.18 313.74 448.66 4 Y
V
290.25 454.02 290.25 448.66 313.98 448.66 3 L
N
396.77 451.14 405.42 448.66 396.77 446.18 396.77 448.66 4 Y
V
365.23 448.66 397.01 448.66 2 L
N
414.71 427.4 412.23 418.75 409.75 427.4 412.23 427.4 4 Y
V
412.23 440.25 412.23 427.16 2 L
N
153.55 674.23 150.97 665.61 148.59 674.29 151.07 674.26 4 Y
V
151.23 688.25 151.07 674.02 2 L
N
196.31 674.26 193.83 665.61 191.35 674.26 193.83 674.26 4 Y
V
193.83 686.75 193.83 674.02 2 L
N
395.4 679.6 397.89 688.25 400.37 679.6 397.89 679.6 4 Y
V
397.89 665.7 397.89 679.84 2 L
N
438.26 679.6 440.74 688.25 443.22 679.6 440.74 679.6 4 Y
V
440.74 665.7 440.74 679.84 2 L
N
174.6 641.91 169.73 633.47 164.85 641.91 169.73 641.91 4 Y
8 X
V
169.73 652.22 169.73 641.67 2 L
2.5 H
N
177.28 521.39 172.4 512.94 167.53 521.39 172.4 521.39 4 Y
V
172.4 542.41 172.4 521.15 2 L
N
241.63 493.71 250.08 488.84 241.63 483.96 241.63 488.84 4 Y
V
225.97 488.84 241.87 488.84 2 L
N
350.33 493.45 358.72 488.47 350.22 483.7 350.28 488.57 4 Y
V
327.75 488.84 350.53 488.56 2 L
N
350.77 405.04 359.21 400.17 350.77 395.29 350.77 400.17 4 Y
V
340.46 400.17 351.01 400.17 2 L
N
0.5 H
0 X
90 450 18.75 14.73 142.94 425.9 A
116.13 459.77 224.13 513.76 R
7 X
V
0 X
N
1 F
(Environment) 255.73 693.25 T
8 F
([P]) 116.73 638.25 T
([M]) 117.73 519.75 T
(Match Set) 117.23 530.25 T
(Prediction) 252.73 514.25 T
(Array) 252.73 504.25 T
(Action Set) 360.23 524.75 T
([A]) 361.23 512.75 T
(Previous Action Set) 370.23 404.25 T
([A]) 371.23 392.25 T
5 F
(-1) 386.48 389.5 T
0.27 (Detectors) 153.23 656.75 S
0.27 (Effectors) 403.73 656.75 S
15 F
0.27 (\322left\323) 409.23 674.25 S
5 F
0.27 (delay = 1) 473.73 445.75 S
0.27 (discount) 326.73 446.25 S
0.27 (max) 281.73 458.75 S
15 F
(match) 184.23 641.25 T
(action) 330.73 499.75 T
(selection) 324.23 474.25 T
6 F
(GA) 133.23 422.25 T
(+) 408.23 443.75 T
9 F
(P) 419.73 427.75 T
126.73 550.75 213.73 618.75 R
7 X
V
10 F
0 X
-0.4 (#011 : 01      43    .01    99) 126.73 613.42 P
(11## : 00     32   .13     9) 126.73 603.42 T
(#0## : 11     14   .05   52) 126.73 593.42 T
(001# : 01     27   .24     3) 126.73 583.42 T
(#0#1 : 11     18   .02   92) 126.73 573.42 T
(1#01 : 10     24   .17   15) 126.73 563.42 T
(                  ...) 126.73 553.42 T
5 F
(etc.) 173.41 553.42 T
126.73 470.25 215.23 509.25 R
7 X
V
10 F
0 X
-0.3 (#011 : 01      43    .01    99) 126.73 503.92 P
-0.03 (#0## : 11     14    .05   52) 126.73 493.92 P
-0.16 (001# : 01      27    .24     3) 126.73 483.92 P
-0.3 (#0#1 : 11      18    .02    92) 126.73 473.92 P
138.07 461.65 142.94 470.09 147.82 461.65 142.94 461.65 4 Y
3 X
V
142.94 437.95 142.94 461.89 2 L
2.5 H
N
255.23 483.75 323.73 494.25 R
7 X
V
0 X
-0.28 (nil   42.5    nil    16.6) 255.23 488.92 P
369.23 474.75 456.73 501.75 R
7 X
V
0 X
-0.24 (#011 : 01      43    .01   99) 369.23 496.42 P
-0.21 (001# : 01      27    .24     3) 369.23 486.42 P
295.23 372.25 338.73 418.75 R
7 X
V
5 F
0 X
(Update:) 295.23 412.75 T
(  fitnesses,) 295.23 402.75 T
(  errors,) 295.23 392.75 T
-0.47 (  predictions) 295.23 382.75 P
(\050Reward\051) 451.23 539.75 T
10 F
(01) 428.23 594.25 T
11 F
( ) 169.23 624.25 T
15 F
0.27 (p     ) 171.73 624.25 S
13 F
0.27 (e) 189.08 624.25 S
15 F
0.27 (     F) 193.29 624.25 S
10 F
(0011) 166.23 692.75 T
108 325.33 504 346.67 R
7 X
V
12 F
0 X
(Figure 1) 108 339.33 T
8 F
(.  Schematic illustration of XCS.) 147.36 339.33 T
0 0 612 792 C
FMENDPAGE
%%EndPage: "6" 5
%%Page: "5" 5
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(5) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
2 F
0 X
(eral rules would be suppressed.) 72 712 T
(A second source of inspiration came from reinforcement learning \050Sutton, 1991\051, which em-) 90 682 T
(phasizes the formation of relatively complete mappings X ) 72 658 T
4 F
(x) 353.14 658 T
2 F
( A => P from the product set of situa-) 359.13 658 T
(tions and actions to payof) 72 634 T
(fs.  In contrast, the general classi\336er system philosophy \050see, e.g., ) 195.04 634 T
(Holland, Holyoak, Nisbett, & Thagard, 1986\051 attempts more pragmatically to discover the best ) 72 610 T
(rule in each niche without worrying too much about knowing the payof) 72 586 T
(f consequences of every ) 413.88 586 T
(possible action.  However) 72 562 T
(, should a suboptimal rule be conver) 196.1 562 T
(ged upon as a consequence of in-) 370.1 562 T
-0.24 (complete exploration, it may be dif) 72 538 P
-0.24 (\336cult for the standard system to discover and switch to a better ) 239.12 538 P
-0.12 (one.  If, on the other hand\321as in reinforcement learning\321the system were oriented toward learn-) 72 514 P
(ing relatively complete maps of the consequences of each action in each niche, then determining ) 72 490 T
-0.15 (the most remunerative action would be straightforward.  For this, it seemed logical to base \336tness ) 72 466 P
(on some measure of accuracy) 72 442 T
(.) 213.09 442 T
(Out of the above considerations, it was decided to investigate systems in which the classi\336er ) 90 412 T
(strength parameter would be replaced by three new ones: \0501\051 ) 72 388 T
1 F
(pr) 365.76 388 T
(ediction) 375.97 388 T
2 F
(, an average of the payof) 414.62 388 T
(f ) 532.96 388 T
-0.18 (received\321internal or external\321when that classi\336er) 72 364 P
-0.18 (\325) 320.18 364 P
-0.18 (s action controlled the system; \0502\051) 323.52 364 P
1 F
-0.18 ( pr) 485.51 364 P
-0.18 (ediction ) 498.54 364 P
-0.12 (err) 72 340 P
-0.12 (or) 86.21 340 P
2 F
-0.12 (, an average of a measure of the error in the prediction parameter; and \0503\051 ) 96.39 340 P
1 F
-0.12 ( \336tness) 449.56 340 P
2 F
-0.12 (, an inverse ) 482.42 340 P
-0.08 (function of the prediction error) 72 316 P
-0.08 (.  The prediction \050and possibly the prediction error\051 would be used ) 219.56 316 P
-0.35 (in the performance component\321that is, in selecting actions.  The \336tness parameter would be used ) 72 292 P
(in the genetic algorithm, which would occur in the niches de\336ned by the match sets.) 72 268 T
3 F
(3.  Description of XCS) 72 232.67 T
2 F
-0.41 (Figure 1 gives an overall picture of the system, which is shown in interaction with an environment ) 72 206 P
(via detectors for sensory input and ef) 72 182 T
(fectors for motor actions.  In addition, the environment at ) 249.65 182 T
-0.43 (times provides a scalar reinforcement, here termed reward.  Many aspects of XCS are copied from ) 72 158 P
(ZCS \050W) 72 134 T
(ilson, 1994\051, a \322zeroth level\323 classi\336er system intended to simplify Holland\325) 111.83 134 T
(s canonical ) 476.93 134 T
-0.07 (framework while retaining the essence of the classi\336er system idea.  Some descriptive material is ) 72 110 P
-0.28 (omitted here because it can be found in the ZCS paper) 72 86 P
-0.28 (. The dif) 328.98 86 P
-0.28 (ferences between XCS and ZCS lie ) 369.16 86 P
FMENDPAGE
%%EndPage: "5" 4
%%Page: "4" 4
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(4) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
2 F
0 X
(en classi\336er) 72 712 T
(, with its single strength value, is often involved in numerous distinct matching sets, ) 128.48 712 T
(so that the meaning of the strength value becomes unclear) 72 688 T
(.) 349.47 688 T
-0.07 (3.   Moreover) 90 658 P
-0.07 (, it is still the case under sharing that more remunerative niches will get more re-) 154.6 658 P
(sources \050classi\336ers\051 than less remunerative ones.  That may be reasonable in single-step decision ) 72 634 T
(problems.  But classi\336er systems dealing with sequential problems involving deferred reward of-) 72 610 T
-0.03 (ten employ some form of payof) 72 586 P
-0.03 (f discounting so as to encourage expeditious behavior) 223.2 586 P
-0.03 (.  The result ) 479.83 586 P
-0.24 (is that early-matching classi\336ers that \322set up\323 later ones in a chain will, due to the discounting, ap-) 72 562 P
(pear inherently less \336t, so that long chains cannot be sustained \050W) 72 538 T
(ilson & Goldber) 388.64 538 T
(g, 1989\051.  ) 466.38 538 T
(The last problem can be alleviated by conducting the genetic algorithm using populations re-) 90 508 T
(stricted to the match sets \050Booker) 72 484 T
(, 1982\051, instead of panmictically using the population as a ) 232.41 484 T
-0.15 (whole.  Dif) 72 460 P
-0.15 (ferences in payof) 125.77 460 P
-0.15 (f between match sets will thus not af) 207.84 460 P
-0.15 (fect a given classi\336er) 382.1 460 P
-0.15 (\325) 483.67 460 P
-0.15 (s selection ) 487.01 460 P
-0.09 (chances.  Competition will be restricted to classi\336ers within \050i.e., matching\051 a niche \050sharing may ) 72 436 P
(or may not be maintained\051.  However) 72 412 T
(, even with such a ) 251.05 412 T
1 F
(niche GA) 340.32 412 T
2 F
(, there remain at least two prob-) 385.28 412 T
(lems:) 72 388 T
(4.   The GA cannot distinguish an accurate classi\336er with moderate payof) 90 358 T
(f from an overly ) 442.52 358 T
(general classi\336er having the same payof) 72 334 T
(f on the average.  Thus over) 263.97 334 T
(generals\321 \322guessers\323\321will ) 397.97 334 T
(be unduly encouraged, and in fact may proliferate since they occur in many match sets and \050espe-) 72 310 T
(cially under a niche GA\051 have many chances to reproduce.) 72 286 T
(5.   Classi\336er systems employ a \322don\325) 90 256 T
(t care\323 \050#\051 symbol in the syntax of their conditions and ) 271.68 256 T
-0.02 (thus permit the formation of generalizations.  However) 72 232 P
-0.02 (, under payof) 335.18 232 P
-0.02 (f-based \336tness, there appears ) 398.54 232 P
(to be no clear tendency or) 72 208 T
(, indeed, theoretical reason, for accurate generalizations to evolve.) 195.75 208 T
(Given the above problems, it seemed reasonable to inquire whether there might exist a more ) 90 178 T
-0.44 (appropriate basis for classi\336er \336tness than expected payof) 72 154 P
-0.44 (f.  A \336rst hint was provided by problems ) 346.12 154 P
-0.04 (4 and 5 above: if estimated payof) 72 130 P
-0.04 (f does not distinguish between accurate and over) 231.43 130 P
-0.04 (general classi\336-) 464.43 130 P
-0.4 (ers, why not base \336tness on accuracy itself?  The system might need to be bigger since the number ) 72 106 P
(of accurate classi\336ers could exceed the number of highly remunerative ones.  However) 72 82 T
(, over) 488.84 82 T
(gen-) 515.94 82 T
FMENDPAGE
%%EndPage: "4" 3
%%Page: "3" 3
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(3) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
2 F
0 X
(wide range of reinforcement learning situations where generalization over states is important.) 72 712 T
-0.32 (The next section of the paper motivates the shift from payof) 90 682 P
-0.32 (f-based to accuracy-based \336tness.  ) 374.4 682 P
-0.44 (Section 3 presents XCS in suf) 72 658 P
-0.44 (\336cient detail to permit implementation.  Section 4 tests the system in ) 213.15 658 P
(single-step \050Boolean multiplexer\051 and sequential \050\322woods\323-like\051 environments, focusing in both ) 72 634 T
-0.14 (cases on mapping performance and generalization.  In Section 5 we summarize the paper) 72 610 P
-0.14 (, discuss ) 496.64 610 P
(related work and directions for future research, and present our main conclusions.) 72 586 T
3 F
(2.  How to measur) 72 550.67 T
(e \336tness?) 180.18 550.67 T
2 F
(In many classi\336er systems \050Holland, 1986; W) 72 524 T
(ilson, 1994\051, a classi\336er) 291.05 524 T
(\325) 405.75 524 T
(s ) 409.09 524 T
(strength) 416.75 524 T
( parameter esti-) 455.39 524 T
-0.17 (mates the payof) 72 500 P
-0.17 (f that the classi\336er will receive when, given satisfaction of its condition, its action ) 147.38 500 P
-0.14 (is chosen by the system.  Strength is therefore important to the system\325) 72 476 P
-0.14 (s performance component, ) 409.84 476 P
-0 (which is generally interested in choosing the most remunerative action.  But strength is also used ) 72 452 P
-0.11 (as the measure of \336tness for the discovery component\325) 72 428 P
-0.11 (s genetic algorithm; that is, higher strength ) 332.24 428 P
(classi\336ers are more likely to be selected for reproduction and modi\336cation by genetic operators.  ) 72 404 T
(Strength thus forms the basis for the system\325) 72 380 T
(s search for improved structures.) 285.54 380 T
(Basing \336tness on strength is reasonable: after all, shouldn\325) 90 350 T
(t better performing classi\336ers lead ) 369.94 350 T
(the search?  On closer examination, however) 72 326 T
(, there are several problems.) 287.01 326 T
-0.41 (1.   Dif) 90 296 P
-0.41 (ferent niches of the environment  usually have dif) 122.53 296 P
-0.41 (ferent payof) 357.51 296 P
-0.41 (f levels.  \050Here, following ) 415.15 296 P
(Booker \0501982\051, ) 72 272 T
1 F
(niche) 148.28 272 T
2 F
( means a set of environmental states each of which is matched by approxi-) 174.26 272 T
(mately the same set of classi\336ers.\051  T) 72 248 T
(o prevent population takeover by classi\336ers in high-payof) 249.04 248 T
(f ) 525.63 248 T
(niches, it is necessary to implement a sharing technique in which the available payof) 72 224 T
(f is divided ) 477.5 224 T
-0.1 (among active classi\336ers instead of giving each one the full value \050for an analysis, see Horn, Gold-) 72 200 P
(ber) 72 176 T
(g, & Deb, 1994\051. ) 87.1 176 T
(2.   Sharing eliminates takeover ef) 90 146 T
(fects but then a classi\336er) 254 146 T
(\325) 373.02 146 T
(s strength no longer directly pre-) 376.36 146 T
(dicts payof) 72 122 T
(f; instead, the total of the shared strength \050among matching classi\336ers advocating the ) 124.75 122 T
-0.23 (same action\051 predicts the payof) 72 98 P
-0.23 (f.  This division of the prediction becomes problematic since a giv-) 220.75 98 P
FMENDPAGE
%%EndPage: "3" 2
%%Page: "2" 2
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(2) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 72 540 720 R
V
3 F
0 X
(1.  Intr) 72 710.67 T
(oduction) 113.33 710.67 T
2 F
(T) 72 684 T
(raditionally in classi\336er systems, the classi\336er ) 78.91 684 T
1 F
(str) 302.44 684 T
(ength) 314.66 684 T
2 F
( parameter serves both as a predictor of ) 341.31 684 T
(future payof) 72 660 T
(f and as the classi\336er) 130.73 660 T
(\325) 231.76 660 T
(s \336tness for the genetic algorithm.  However) 235.1 660 T
(, predicted payof) 447.8 660 T
(f ) 528.52 660 T
-0.05 (may inadequately represent \336tness.  For example, a low-predicting classi\336er may nevertheless be ) 72 636 P
(the best one for its environmental niche.  W) 72 612 T
(e investigate a classi\336er system, XCS, in which each ) 281.23 612 T
(classi\336er maintains a prediction of expected payof) 72 588 T
(f, but the classi\336er) 312.94 588 T
(\325) 401.99 588 T
(s \336tness is ) 405.32 588 T
1 F
(not) 457.64 588 T
2 F
( given by the ) 472.96 588 T
-0.3 (prediction. Instead, the \336tness is a separate number based on an inverse function of the classi\336er) 72 564 P
-0.3 (\325) 529.3 564 P
-0.3 (s ) 532.63 564 P
-0.31 (average prediction error; that is, it is based on a measure of the ) 72 540 P
1 F
-0.31 (accuracy) 372.36 540 P
2 F
-0.31 ( of the prediction, instead ) 416.32 540 P
(of the prediction itself.  XCS also executes the genetic algorithm in niches de\336ned by the match ) 72 516 T
(sets \050Booker) 72 492 T
(, 1982\051 rather than panmictically) 131.81 492 T
(.) 287.92 492 T
(The present research\321an investigation into classi\336er system technique\321stemmed from dis-) 90 462 T
(satisfaction with the behavior of traditional classi\336er systems, and the hypothesis that the short-) 72 438 T
(comings were due in part to the de\336nition of \336tness.  As discussed in Section 5.1, some previous ) 72 414 T
(work had factored measures of accuracy into the \336tness function, .  However) 72 390 T
(, the results  with ) 439.89 390 T
(XCS show that a complete shift to accuracy-based \336tness is not only possible, but yields a classi-) 72 366 T
(\336er system that is superior to traditional systems in important respects.  ) 72 342 T
-0.27 (Speci\336cally) 90 312 P
-0.27 (, accuracy-based \336tness, in combination with a niche GA, results in XCS\325) 145.85 312 P
-0.27 (s popula-) 495.97 312 P
-0.15 (tion tending to form a complete and accurate mapping X x A => P from inputs and actions to pay-) 72 288 P
(of) 72 264 T
(f predictions.  T) 81.78 264 T
(raditional classi\336er systems have not theoretically emphasized or actually ) 157.97 264 T
(produced such mappings, which can make payof) 72 240 T
(f-maximizing action-selection straightforward.  ) 305.27 240 T
(Further) 72 216 T
(, XCS tends to evolve classi\336ers that are maximally general subject to an accuracy criteri-) 106.83 216 T
-0.02 (on, so that the mapping gains representational ef) 72 192 P
-0.02 (\336ciency) 304.12 192 P
-0.02 (.  In traditional classi\336er systems there is ) 341.31 192 P
(in theory no adaptive pressure toward accurate generalization, and in fact accurate generalized ) 72 168 T
-0.02 (classi\336ers have rarely been exhibited, except in studies using payof) 72 144 P
-0.02 (f regimes biased toward for-) 394.05 144 P
(mally general classi\336ers \050e.g., W) 72 120 T
(ilson, 1987a\051.  Besides introducing a new direction for classi\336er ) 229.07 120 T
(system research, the mapping and generalization properties of XCS should make it suitable for a ) 72 96 T
FMENDPAGE
%%EndPage: "2" 1
5 18 /Times-Bold FMDEFINEFONT
%%Page: "1" 1
612 792 0 FMBEGINPAGE
0 0 612 792 C
0 0 612 792 R
7 X
0 K
V
72 746 540 756 R
V
0 F
0 X
(1) 306 749.33 T
-2.5 ( ) 540 749.33 P
72 32.67 540 42.67 R
7 X
V
72 45 540 693 R
V
5 F
0 X
(Classi\336er Fitness Based on Accuracy) 165.08 681 T
2 F
(Stewart W) 260.99 635 T
(. W) 310.85 635 T
(ilson) 327.68 635 T
(The Rowland Institute for Science) 223.73 621 T
(100 Edwin H. Land Blvd.) 244.04 607 T
(Cambridge, MA  02142) 248.7 593 T
(\050617\051 497-4650) 268.53 579 T
(wilson@smith.rowland.or) 240.62 565 T
(g) 365.39 565 T
(Submitted to ) 185.22 531 T
1 F
(Evolutionary Computation, ) 249.87 531 T
2 F
(10/18/94) 384.13 531 T
(Revised, 4/25/95) 265.35 517 T
(T) 244.07 503 T
(o appear in V) 250.56 503 T
(ol. 3, No. 2) 313.96 503 T
3 F
(Abstract) 279.97 443.67 T
2 F
-0.44 (In many classi\336er systems, the classi\336er strength parameter serves as a predictor of ) 108 419 P
(future payof) 108 395 T
(f and as the classi\336er) 166.73 395 T
(\325) 267.76 395 T
(s \336tness for the genetic algorithm. W) 271.1 395 T
(e investi-) 447.69 395 T
-0.21 (gate a classi\336er system, XCS, in which each classi\336er maintains a prediction of ex-) 108 371 P
(pected payof) 108 347 T
(f, but the classi\336er) 169.39 347 T
(\325) 258.45 347 T
(s \336tness is given by a measure of the prediction\325) 261.78 347 T
(s ) 492.63 347 T
(accuracy) 108 323 T
(.  The system executes the genetic algorithm in niches de\336ned by the ) 149.83 323 T
-0.21 (match sets, instead of panmictically) 108 299 P
-0.21 (.  These aspects of XCS result in its population ) 277.92 299 P
(tending to form a complete and accurate mapping X ) 108 275 T
4 F
(x) 360.81 275 T
2 F
( A => P from inputs and ac-) 366.81 275 T
(tions to payof) 108 251 T
(f predictions.  Further) 173.75 251 T
(, XCS tends to evolve classi\336ers that are maxi-) 277.86 251 T
(mally general subject to an accuracy criterion.  Besides introducing a new ) 108 227 T
(direction for classi\336er system research, these properties of XCS make it suitable ) 108 203 T
(for a wide range of reinforcement learning situations where generalization over ) 108 179 T
(states is desirable. ) 108 155 T
3 F
(Key words) 273.94 115.67 T
2 F
(Classi\336er systems, strength, \336tness, accuracy) 108 91 T
(, mapping, generalization, restricted ) 323.41 91 T
(mating, niche genetic algorithm) 108 67 T
288 738 324 765 R
7 X
V
FMENDPAGE
%%EndPage: "1" 0
%%Trailer
%%BoundingBox: 0 0 612 792
%%Pages: 44 -1
%%DocumentFonts: Times-Bold
%%+ Times-Italic
%%+ Times-Roman
%%+ Helvetica
%%+ Courier
%%+ Symbol
%%+ Courier-Oblique
